<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>catboost-spark_2.4_2.11</artifactId>
    <packaging>jar</packaging>
    <name>CatBoost for Apache Spark</name>
    <description>JVM module to use CatBoost on Apache Spark</description>

    <parent>
        <groupId>ai.catboost</groupId>
        <artifactId>catboost-spark-aggregate_2.11</artifactId>
        <version>0.25.1</version>
        <relativePath>..</relativePath>
    </parent>

    <properties>
        <spark.compat.version>2.4</spark.compat.version>
        <spark.version>2.4.0</spark.version>
        <hadoop.version>2.7.3</hadoop.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>Build dynamic library with JNI</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>python</executable>
                            <arguments>
                                <argument>${basedir}/../../../jvm-packages/tools/build_native_for_maven.py</argument>
                                <argument>${basedir}</argument>
                                <argument>catboost4j-spark-impl</argument>
<argument>--build</argument>
                                <argument>release</argument>
                                <argument>--no-src-links</argument>
                                <argument>-DOS_SDK=local</argument>
                                <argument>-DHAVE_CUDA=no</argument>
                                <argument>-DUSE_LOCAL_SWIG=yes</argument>
                                <argument>-DUSE_SYSTEM_JDK=${JAVA_HOME}</argument>
                                <argument>-DJAVA_HOME=${JAVA_HOME}</argument>
                            </arguments>
                            <workingDirectory>${user.dir}</workingDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Prepare sources for docs</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>python</executable>
                            <arguments>
                                <argument>${basedir}/prepare_sources_for_docs.py</argument>
                                <argument>--dst-dir=${project.build.directory}/src_for_doc</argument>
                                <argument>--src-jar=${project.build.directory}/catboost4j-spark-impl-sources.jar</argument>
                            </arguments>
                            <workingDirectory>${user.dir}</workingDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Generate PySpark wrapper code</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <classpathScope>compile</classpathScope>>
                            <arguments>
                                <argument>-classpath</argument>
                                <!-- automatically creates the classpath using all project dependencies,
                                     also adding the project build directory -->
                                <classpath/>
                                <argument>ai.catboost.spark.impl.pyspark_wrapper_generator.Generator</argument>
                                <argument>${project.version}</argument>
                                <argument>${project.build.directory}/classes/catboost_spark</argument>
                                <argument>${spark.compat.version}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.4.0</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                        <configuration>
                            <sourceDir>${project.build.directory}/src_for_doc</sourceDir>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                <compilerPlugins>
                    <compilerPlugin>
                    <groupId>org.scalamacros</groupId>
                    <artifactId>paradise_${scala.version}</artifactId>
                    <version>2.1.1</version>
                </compilerPlugin>
                </compilerPlugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <trimStackTrace>false</trimStackTrace>
                    <forkCount>1C</forkCount>
                    <reuseForks>false</reuseForks>
                    <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
                    <systemPropertyVariables>
                        <catboost.test.data.path>${project.basedir}/../../../pytest/data</catboost.test.data.path>
                        <canonical.data.path>${project.basedir}/src/test/resources/canondata</canonical.data.path>
                    </systemPropertyVariables>
                    <workingDirectory>FORK_DIRECTORY_${surefire.forkNumber}</workingDirectory>
                </configuration>
            </plugin>
        </plugins>

        <testResources>
           <testResource>
               <directory>${project.basedir}/src/main/resources</directory>
           </testResource>
        </testResources>
    </build>

    <reporting>
      <plugins>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>4.4.0</version>
          <configuration>
            <jvmArgs>
              <jvmArg>-Xms64m</jvmArg>
              <jvmArg>-Xmx1024m</jvmArg>
            </jvmArgs>
          </configuration>
        </plugin>
      </plugins>
    </reporting>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.11</version>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>3.5.3</version>
        </dependency>
        
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        <version>2.6.7.3</version>
        </dependency>
            <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scala.compat.version}</artifactId>
            <version>2.6.7.1</version>
        </dependency>

        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <version>4.8.98</version>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-core</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
        </dependency>
    
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        

        <dependency>
            <groupId>ai.catboost</groupId>
            <artifactId>catboost-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>ai.catboost</groupId>
            <artifactId>catboost-spark-macros_${scala.compat.version}</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>3.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
