### Types to hold CTR's data

class catboost_model_ctr(object):
    def __init__(self, base_hash, base_ctr_type, target_border_idx, prior_num, prior_denom, shift, scale):
        self.base_hash = base_hash
        self.base_ctr_type = base_ctr_type
        self.target_border_idx = target_border_idx
        self.prior_num = prior_num
        self.prior_denom = prior_denom
        self.shift = shift
        self.scale = scale

    def calc(self, count_in_class, total_count):
        ctr = (count_in_class + self.prior_num) / float(total_count + self.prior_denom)
        return (ctr + self.shift) * self.scale


class catboost_bin_feature_index_value(object):
    def __init__(self, bin_index, check_value_equal, value):
        self.bin_index = bin_index
        self.check_value_equal = check_value_equal
        self.value = value


class catboost_ctr_mean_history(object):
    def __init__(self, sum, count):
        self.sum = sum
        self.count = count


class catboost_ctr_value_table(object):
    def __init__(self, index_hash_viewer, target_classes_count, counter_denominator, ctr_mean_history, ctr_total):
        self.index_hash_viewer = index_hash_viewer
        self.target_classes_count = target_classes_count
        self.counter_denominator = counter_denominator
        self.ctr_mean_history = ctr_mean_history
        self.ctr_total = ctr_total

    def resolve_hash_index(self, hash):
        try:
            return self.index_hash_viewer[hash]
        except KeyError:
            return None


class catboost_ctr_data(object):
    def __init__(self, learn_ctrs):
        self.learn_ctrs = learn_ctrs


class catboost_projection(object):
    def __init__(self, transposed_cat_feature_indexes, binarized_indexes):
        self.transposed_cat_feature_indexes = transposed_cat_feature_indexes
        self.binarized_indexes = binarized_indexes


class catboost_compressed_model_ctr(object):
    def __init__(self, projection, model_ctrs):
        self.projection = projection
        self.model_ctrs = model_ctrs


class catboost_model_ctrs_container(object):
    def __init__(self, used_model_ctrs_count, compressed_model_ctrs, ctr_data):
        self.used_model_ctrs_count = used_model_ctrs_count
        self.compressed_model_ctrs = compressed_model_ctrs
        self.ctr_data = ctr_data


###  Model data
class catboost_model(object):
    float_features_index = [
        0, 1, 2, 3, 4, 5,
    ]
    float_feature_count = 6
    cat_feature_count = 11
    binary_feature_count = 17
    tree_count = 40
    float_feature_borders = [
        [27.5, 30.5, 33.5, 36.5, 38.5, 41.5, 44.5, 45.5, 48, 50, 52.5, 53.5, 56, 58.5, 60.5],
        [51773, 70611, 73183.5, 115363.5, 116831.5, 117562, 119180.5, 123533.5, 124942, 128053.5, 159204.5, 164533.5, 167944, 181845, 188654.5, 202819.5, 207632, 209752.5, 215992, 222939, 237801, 238960, 240620.5, 303732.5, 313025.5, 332801, 337225.5, 338713, 342219],
        [8, 9.5, 10.5, 12.5, 13.5, 15.5],
        [1087, 3280],
        [1881.5, 2396],
        [42, 44.5, 46.5]
    ]
    tree_depth = [6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
    tree_split_border = [2, 7, 3, 3, 2, 255, 2, 2, 5, 2, 6, 9, 6, 3, 11, 22, 4, 2, 5, 12, 1, 1, 255, 3, 2, 4, 6, 7, 5, 7, 3, 3, 3, 1, 255, 4, 12, 2, 15, 2, 7, 4, 8, 7, 2, 1, 10, 2, 3, 255, 5, 27, 1, 7, 3, 16, 5, 5, 9, 3, 2, 6, 6, 19, 9, 2, 5, 2, 3, 255, 15, 2, 14, 4, 3, 20, 5, 2, 8, 2, 3, 4, 5, 3, 2, 1, 255, 25, 1, 5, 3, 28, 3, 17, 1, 2, 1, 1, 5, 3, 6, 1, 6, 7, 26, 12, 1, 2, 2, 4, 5, 4, 1, 18, 4, 255, 2, 8, 1, 3, 4, 13, 2, 23, 255, 1, 1, 4, 14, 2, 1, 2, 9, 5, 2, 1, 5, 2, 1, 2, 10, 21, 255, 2, 5, 6, 8, 3, 2, 5, 2, 4, 2, 7, 2, 3, 14, 6, 27, 7, 1, 4, 2, 4, 5, 1, 2, 1, 3, 2, 5, 29, 5, 10, 5, 24, 7, 5, 1, 1, 2, 4, 3, 10, 3, 1, 1, 2, 2, 5, 3, 3, 6, 2, 2, 2, 10, 1, 1, 2, 4, 5, 9, 2, 2, 5, 10, 5, 5, 1, 11, 10, 4, 2, 5, 4, 3, 5, 2, 4, 2, 10, 5, 3, 5, 2, 5, 1, 2, 8, 9, 7, 13, 2, 4, 3, 11, 5, 5]
    tree_split_feature_index = [0, 12, 5, 0, 3, 6, 8, 0, 2, 4, 2, 12, 0, 5, 0, 1, 12, 3, 2, 0, 2, 1, 6, 5, 3, 1, 12, 1, 1, 12, 8, 5, 2, 13, 6, 0, 0, 2, 0, 13, 12, 12, 7, 7, 3, 7, 7, 7, 14, 6, 2, 1, 1, 12, 2, 1, 7, 8, 7, 7, 8, 1, 12, 1, 7, 3, 2, 13, 7, 6, 1, 3, 0, 12, 12, 1, 2, 8, 0, 13, 13, 14, 8, 5, 3, 2, 6, 1, 4, 11, 15, 1, 5, 1, 5, 3, 14, 1, 12, 5, 11, 16, 0, 11, 1, 1, 13, 8, 12, 0, 2, 12, 3, 1, 11, 6, 2, 0, 15, 7, 2, 1, 3, 1, 6, 16, 0, 15, 1, 7, 11, 3, 0, 12, 2, 15, 0, 3, 12, 7, 7, 1, 6, 3, 2, 7, 12, 1, 11, 2, 11, 14, 8, 0, 5, 15, 1, 12, 1, 0, 15, 10, 2, 8, 2, 15, 5, 1, 5, 7, 11, 1, 0, 7, 14, 1, 12, 2, 5, 16, 3, 2, 10, 0, 5, 9, 10, 5, 3, 8, 10, 7, 14, 13, 9, 1, 7, 8, 1, 15, 7, 2, 0, 3, 8, 0, 0, 8, 2, 9, 0, 1, 9, 10, 8, 15, 11, 2, 11, 12, 14, 7, 14, 9, 12, 2, 9, 8, 12, 1, 1, 7, 0, 3, 15, 5, 1, 2, 8]
    tree_split_xor_mask = [0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    cat_features_index = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    one_hot_cat_feature_index = [9]
    one_hot_hash_values = [
        [-1291328762]
    ]
    ctr_feature_borders = [
        [0.203571424, 0.255357146, 0.514285684, 0.566071391, 0.617857158, 0.669642866, 0.721428573, 0.773214281, 0.824999988, 0.876785696],
        [0.0294117667, 0.0539215691, 0.0637254938, 0.0784313753, 0.377451003],
        [0.428716242, 0.471621633, 0.514527023, 0.557432413, 0.857770264],
        [0.475000024, 0.587499976, 0.700000048, 0.774999976],
        [0.284801126, 0.551136374, 0.604403436, 0.657670498, 0.7109375, 0.764204562, 0.870738626],
        [0.296875, 0.4375, 0.53125, 0.578125, 0.625, 0.671875, 0.765625, 0.8125, 0.90625],
        [0.6875, 0.744791687, 0.802083373],
        [0.7421875, 0.765625, 0.7890625, 0.8125, 0.8359375, 0.8828125],
        [0.786458373, 0.8125, 0.838541687, 0.890625],
        [0.0147058833]
    ]

    ## Aggregated array of leaf values for trees. Each tree is represented by a separate line:
    leaf_values = [
        0.01780780218541622, 0.01112987566739321, 0.03709958866238594, 0.01112987566739321, 0, 0, 0.01780780218541622, 0, 0, -0.03996637463569641, 0, 0.02198993600904942, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.002276564948260784, 0.01112987566739321, 0.03617209568619728, 0.01780780218541622, 0, 0, 0.01780780218541622, 0, 0, -0.008319302462041378, 0, 0.03497960790991783, 0, -0.102867029607296, 0, -0.01180441491305828, 0, -0.03996637463569641, 0, 0, 0, 0, 0, 0, 0, -0.07993274927139282, 0, -0.03996637463569641, 0, -0.03996637463569641, 0, 0,
        0.01850004494190216, 0.03043237514793873, -0.07983779162168503, 0.01084710471332073, 0, 0, -0.06182996183633804, -0.06279680877923965, 0, 0, 0, 0, 0, 0, 0, -0.03471025452017784, 0, 0, 0, 0, 0, 0, 0, 0.01155496202409267, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.001441210159100592, 0, -0.008973628282546997, 0, -0.06551176309585571, 0, -0.032936692237854, 0, 0, 0, -0.04124799743294716, 0, 0, 0, -0.05528746545314789, 0, -0.02574328519403934, 0, 0.01096454728394747, 0, 0, 0, 0, 0, 0, 0, -0.04052917659282684, 0, 0, 0, 0.01583174802362919, 0, 0.01557240542024374, 0.02963605150580406, -0.05915229022502899, -0.01607359573245049, 0, 0.01980567537248135, -0.03150157257914543, -0.03620393201708794, 0, 0, 0.01100071612745523, 0.02805225551128387, 0, 0, 0, 0.01494171936064959, 0.01573256030678749, 0.02645686641335487, 0.01100071612745523, 0.009452026337385178, 0, 0, -0.03150157257914543, 0, 0, 0, 0, 0.02084609307348728, 0, 0, -0.03063084371387959, 0.01117879059165716,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01506882347166538, 0, 0, 0, 0.01912642642855644, 0, 0, 0, 0.02016016282141209, 0, -0.02028746344149113, 0, 0.01341899298131466, 0, 0, 0, 0.006212346255779266, 0, 0, 0, 0, 0, 0, 0, -0.03243951871991158, 0, 0, 0, 0, 0, 0, 0, 0.02618685737252235, 0, 0, 0, 0, 0, 0, 0, 0.01066772639751434, -0.05981405079364777, -0.07474816590547562, -0.03394366055727005, 0.0006180068594403565, -0.0664515420794487, 0.0202368963509798, 0,
        0.0203960258513689, -0.04409343749284744, 0, 0, 0, 0, 0, 0, 0.02089858241379261, 0, 0, 0, 0.008641689084470272, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.03554844111204147, 0, 0, 0, 0, 0, 0, 0, -0.03602338209748268, 0, 0, 0, 0, 0, 0, 0, 0.002860707929357886, -0.04791314154863358, -0.07458379119634628, -0.02762442082166672, 0, 0, 0, 0, 0.02166298776865005, -0.0117719192057848, -0.03220926597714424, 0,
        0, 0.008396467193961143, 0, 0.009901139885187149, 0, 0, 0, 0, 0, 0, 0, -0.005382616072893143, 0, 0, 0, 0.007224381435662508, -0.03295937180519104, 0.01555133797228336, 0.008034964092075825, 0.01529552508145571, 0, 0, 0, 0, 0, 0.004637647420167923, 0.01139773521572351, 0.01373663265258074, 0, 0, 0, 0.007224381435662508, 0, 0, 0.01953758299350739, 0.01256121136248112, 0, 0, 0, 0, 0, 0, -0.02154885604977608, 0.01509517803788185, 0, -0.02993319742381573, 0, 0, -0.06294876337051392, 0.00472280802205205, 0.01200059242546558, 0.01777421683073044, 0, 0, -0.0277447085827589, 0.01170067582279444, 0, -0.02031474187970161, -0.05949901044368744, 0.01128160674124956, -0.04376697167754173, 0, -0.05902509763836861, 0.01993859745562077,
        0.02336118556559086, -0.0276349913328886, 0, -0.03035228885710239, -0.03676123917102814, -0.02935600280761719, 0, -0.01615484058856964, 0, 0, 0, 0, 0, 0, 0, -0.02408218383789063, 0, 0, 0, 0, 0.006102446466684341, -0.03255412355065346, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0239059142768383, 0.01345613226294518, 0.01529164612293243, 0, 0.008787795901298523, 0.01576786674559116, -0.03690065816044807, 0, 0.02201478369534016, 0, 0, 0, 0, 0, 0, 0, 0.005813366733491421, 0.01076900120824575, 0.006295517552644014, 0, 0.005139859393239021, 0.00913288164883852, 0, 0, 0, 0, 0, 0, 0.01193070225417614, 0, 0, 0, 0,
        -0.02880140021443367, -0.02399621717631817, 0, 0, 0, 0, 0, 0, -0.02315113693475723, 0, 0, 0, 0, 0, 0, 0, -0.01749463751912117, -0.009292269125580788, 0, 0, 0, 0.01424139551818371, -0.007954894565045834, 0.01760595105588436, 0, -0.02764000184834003, 0, 0, 0, 0, -0.05200009047985077, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01508977077901363, 0.004181094467639923, 0, 0, 0, 0, 0, 0, -0.02285167388617992, 0,
        0, 0, 0, 0, 0, -0.01829851604998112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02863710932433605, 0.01269844174385071, 0, 0.01260797027498484, -0.05167173966765404, 0.006265275646001101, -0.04967954382300377, 0.002721802797168493, 0.01404009200632572, 0, 0, -0.03154740855097771, 0, -0.04840785637497902, -0.01771895587444305, -0.01141009852290154, 0, 0.01237639971077442, 0, 0.007788726128637791, 0, 0.01942278072237968, 0, 0.005814560689032078, 0, 0, 0, 0, 0, 0.0175724346190691, 0, 0,
        -0.04219462350010872, 0.005013909656554461, 0, -0.02903072908520699, -0.02468952536582947, 0.0072970325127244, -0.03824477642774582, 0.003884091041982174, 0, 0.009537616744637489, 0, 0.003453528508543968, 0.01974501460790634, 0.008097383193671703, 0, 0.004296595230698586, 0, 0, 0, 0, 0, 0.003050699597224593, 0, 0, 0, 0.003432010766118765, 0, 0.004673037212342024, 0.007120432797819376, 0.00400232570245862, 0, 0.003544673323631287, 0, 0, 0, 0, 0, 0, 0, 0, -0.02034753561019897, 0, -0.01759035140275955, 0.00539944414049387, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.002589128445833921, 0.01005501393228769, -0.0332343801856041, 0.008804102428257465, 0.004282984882593155, 0.007667777128517628, -0.02617412060499191, 0.01595252379775047,
        0, 0, 0, 0, -0.03262978419661522, 0, 0, 0, 0, 0, -0.02845209091901779, 0, -0.04625024646520615, 0.007304662372916937, 0.01773195154964924, 0.009971095249056816, 0, 0, 0, 0, -0.02342798374593258, 0, -0.01925220899283886, 0.02039417997002602, 0, 0, 0, 0, -0.01428642589598894, 0, 0.007099171634763479, 0.007865110412240028, 0, 0, 0, -0.006793166045099497, 0, 0, 0, -0.02533931471407413, 0, 0, 0, 0.008927341550588608, 0, 0.004958016332238913, 0, 0.01085446681827307, 0, 0, 0, 0, 0, 0, 0, 0.01307026855647564, 0, 0, 0, 0, 0, 0, 0, 0.003699622582644224,
        -0.02265465818345547, 0, -0.01047862134873867, 0, 0, 0, 0, 0, 0.01035080011934042, 0, 0, 0, 0.006268986500799656, 0, 0, 0, -0.02174616977572441, 0, -0.01972340233623981, -0.01990766637027264, 0, 0, 0, 0, 0.009596989490091801, -0.03224046900868416, -0.01145132537931204, 0, 0.0147151667624712, 0, 0, 0, 0.009033904410898685, 0, 0, 0, 0, 0, 0, 0, 0.007346407510340214, 0, 0, 0, 0.006136899348348379, 0, 0, 0, -0.03433837741613388, -0.01570654287934303, 0.01961242593824863, 0, 0, 0, -0.01387570239603519, 0, 0.01704183034598827, -0.02528386004269123, -0.0260153952986002, 0, -0.01292324252426624, -0.01801311038434505, 0, 0,
        0.008313384838402271, -0.03902526199817657, 0, 0, 0, 0, 0, 0, -0.01632385700941086, 0, 0, -0.02756529301404953, 0.00206513493321836, 0, 0.01270916312932968, 0, -0.00523728970438242, 0, 0, 0, 0, 0, 0, 0, 0.008333335630595684, 0, 0, 0, 0.007032424211502075, 0, 0.00699488865211606, 0, -0.02443830110132694, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02049536630511284, -0.01889045909047127, 0.01624302379786968, 0, -0.00204744073562324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02501987665891647, 0, 0, 0,
        0.002720445394515991, 0.01170300599187613, -0.05188644304871559, 0.01437144167721272, 0, 0.001793145551346242, 0, -0.01087584905326366, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01922334171831608, 0, -0.01859516277909279, 0, 0, 0, -0.0118882842361927, 0, 0, 0, 0, 0.003316106041893363, 0, 0.005961710587143898, 0.00119180919136852, 0, 0.0009237169288098812, 0, 0.001415165956132114, 0, -0.02746260538697243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01121729519218206, 0, 0.01324885990470648, 0, 0.00379379210062325, 0, 0, 0, 0, 0, 0.005558485630899668, 0, 0,
        0.006808985490351915, 0, 0, 0, 0.003343825228512287, 0.006824733223766088, 0, 0, 0.01121216081082821, 0.002441380638629198, 0, 0, 0.009561575017869473, -0.03464750573039055, -0.04308523610234261, -0.01025875005871058, 0, 0, 0, 0, 0.007933820597827435, 0, 0, 0, 0.005932650994509459, 0, 0, 0, -0.02073607593774796, 0.01749283261597157, 0, 0, 0, 0, 0, 0, -0.0189514085650444, 0, 0, 0, 0, 0, 0, 0, 0, -0.01922305300831795, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01798059232532978, 0, 0, 0,
        -0.01066328026354313, 0.004424222279340029, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0178500097244978, 0.002974094124510884, 0, 0, 0.005679093766957521, 0.008643368259072304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01529479213058949, 0, 0, 0, 0, 0, 0, 0, -0.04016796872019768, 0.008740071207284927, 0, 0, 0, 0, 0, 0, -0.003543734084814787, 0, 0, 0, 0.01706185191869736, 0, 0, 0, -0.02569125220179558, 0.01489538513123989, 0, 0, 0.01546274032443762, 0, 0, 0,
        0, 0, 0, 0, 0.0214630700647831, -0.02768903225660324, -0.01435577217489481, -0.02053083665668964, 0, 0, 0, 0, -0.007927440106868744, -0.0132985906675458, 4.470171188586392e-05, 0, -0.02121975272893906, 0, 0, 0, -0.005243028979748487, 0, -0.02210867218673229, -0.007682133931666613, 0, 0, 0, 0, 0.002447867766022682, 0, -0.02616747468709946, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0008547372417524457, 0, 0, 0, 0.004501097369939089, 0, 0.006340494379401207, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01320729497820139, 0, 0.006677608005702496, 0,
        0, 0.002274203114211559, 0, -0.01875461265444756, 0, -0.0005447483854368329, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.006115560885518789, 0, 0.01333151664584875, 0, 0.0001249111664947122, 0, 0.005797542165964842, -0.0259543564170599, 0.004086794331669807, 0, 0.01509337313473225, 0, 0.0004078754282090813, 0, 0.004666302353143692, 0, 0.008844201453030109, 0, -0.03205149248242378, 0.002108067041262984, 0.001309940707869828, 0, 0.007046462502330542, 0, 0, 0, 0, 0, 0, 0, 0, -0.005988736171275377, -0.0006817809189669788, 0, -0.0224151574075222, 0, 0.0009180746856145561, 0, 0.01082109566777945, 0, 0.005805799271911383, 0, 0.01494054961949587, 0, 0.005810314323753119, 0, 0.001746097463183105,
        0, 0, 0, 0.005399556364864111, 0, 0.008355592377483845, -0.02521467953920364, 0.01066746655851603, 0, 0, 0, -0.007625023368746042, 0, 0, 0, -0.01008894201368093, 0, 0, 0.002566240960732102, 0.0032264175824821, 0, 0, -0.01408071257174015, 0.003781954990699887, 0, 0, 0, 0, 0, 0, -0.008899032138288021, -0.003145552473142743, 0, 0, 0, -0.01322794239968061, 0, 0, -0.006144275423139334, -0.02599686942994595, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.001376008498482406, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01098137255758047, 0,
        0.002697333693504333, 0, -0.0005316123133525252, 0.003967714495956898, 0.009135608561336994, 0.005119568668305874, 0.001512931426987052, 0.0004877425380982459, 0.009644223377108574, 0.003918873611837626, 0.006807774771004915, 0.0009013451635837555, -0.006159254349768162, -0.0288438368588686, 0.002306587528437376, 0.004056678153574467, -0.01467596367001534, 0, 0.005430355668067932, 0, -0.005183310713618994, -0.003592033870518208, 0.001420111511833966, 0.001463632681407034, -0.0229747723788023, 0, 0, 0.00123086990788579, -0.01538076251745224, 0.00973806157708168, 0.002232615137472749, 0.00249589653685689, 0, 0, 0, 0, 0, 0, 0.0004511560837272555, 0, 0, 0, 0, 0, -0.03192376717925072, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.001923715346492827, 0, 0, 0, 0, 0, 0, -0.005554637406021357, 0, 0,
        -0.01392607670277357, 0.001538136624731123, -0.02180084772408009, 0.008676255121827126, 0.00144504860509187, 0.002660556463524699, 0.01415769383311272, -0.000807986652944237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0009434943785890937, 0.002133422764018178, -0.0002819592191372067, 0.002333459910005331, 0, 0, 0, 0, 0, 0, 0, 0, -0.01625805720686913, 0.004747836384922266, -0.007658425718545914, 0.001401420799084008, 0, 0.002625093562528491, 0, -0.005814222618937492, 0, 0, -0.01053434330970049, -0.008480384945869446, 0, -0.02017574571073055, -0.005044426303356886, -0.01223732903599739, 0, 0, 0, 0, -0.01984765939414501, 0.01269568037241697, 0.00725541403517127, -0.006743170786648989, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02241612784564495, 0, 0, 0, 0, 0, 0, 0.00870811752974987, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.007463489193469286, 0, 0, 0, 0, 0, 0, 0, -0.01017316430807114, 0, 0, 0, 0, 0, 0, 0, -0.0174502395093441, 0, 0, 0, 0, 0.001679764944128692, -0.001987767871469259, -0.0116120483726263, 0.0008733862196095288, 0, 0, 0, 0, 0.005682404153048992, -0.0002392974711256102, 0, 0.0001218905963469297, 0, 0, 0, 0,
        0.01145316753536463, -0.01612146571278572, 0, 0, 0.0006550107500515878, 0, 0, 0, -0.01142098382115364, -0.01101871579885483, 0, 0, 0.001891679596155882, 0, 0, 0, 0, 0, 0, 0, 0.0003061989555135369, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005441867746412754, 0, 0.00461400905624032, 0, 0.00571238761767745, 0, -0.001230558031238616, 0, 0.0085176732391119, 0, 0.0002637543075252324, -0.01269039511680603, 0.0006848220364190638, -0.0100407050922513, 0.0008977436227723956, 0, 0, 0, 0, 0, 0, 0, 0.001538197509944439, 0, -0.03043294511735439, 0, 0, 0, 0, 0, -0.004749898798763752, 0,
        0, 0, 0.000988072482869029, 0, 0, 0, 0.0002455076901242137, 0, 0, 0, 0, 0, 0, 0, -0.0008172655361704528, 0, 0, 0, 0, 0, 0, 0, 0.002496727975085378, 0, 0, 0, 0, 0, 0, 0, -0.0003793201176449656, 0, 0, 0, -0.01462946087121964, -0.003246602136641741, 0, 0, 0.001056954846717417, -0.0238180086016655, 0, 0, 0, 0, 0, 0, 0.004247050732374191, -0.007443264126777649, 0, 0, -0.02502995729446411, 0, 0, 0, 0.007182601373642683, 0, 0, 0, 0, 0, 0, 0, -0.00155842665117234, 0,
        0, 0, 0, 0, -0.01861166581511497, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.007344989106059074, 0, -0.01741559989750385, -0.003080713097006083, 0.01316090486943722, 0, 0.009888418018817902, -0.02032329142093658, -0.02101401053369045, 0, 0.003635644679889083, 0, -0.02255254611372948, 0, 0.00131343409884721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0004987690481357276, 0, 0, 0, -0.01555702835321426, 0, -0.003228259971365333, 0, 0.01220567896962166, 0, -0.009341409429907799, 0, 0.004806310869753361, 0, 0.01381642185151577, -0.008310652337968349, 0.0009328502346761525, 0, 0.0122523307800293, 0,
        0, 0, 0.0004341599706094712, 0, 0, 0, 0.001395603758282959, 0, 0.003484662622213364, 0, -0.001610894221812487, 0.0131104551255703, -0.002521177753806114, 0, 0.004241952672600746, 0, -0.01711072027683258, 0, -0.01188739854842424, -0.0078860092908144, 0, 0, 0.004720536060631275, 0, 0.006204212550073862, -0.01623732969164848, 0.002989456057548523, 0, 0, -0.0101343272253871, 0.00329039990901947, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01777634955942631, -0.007451009005308151, 0.00423553166911006, -0.008864098228514194, 0, 0, 0, 0, -0.002923300024122, -0.006248383782804012, -0.005969075951725245, 0, 0, 0, 0, 0, 0.0008682585321366787, 0.004447963088750839, 0.01036772038787603, 0.01162628270685673, 0, 0, 0, -0.003063308075070381,
        0.01043702568858862, 0, -0.0133435083553195, 0, 0.002374357078224421, 0, -0.002389376517385244, 0, 0, 0, 0.00320509378798306, 0, 0, 0, 0.004531846847385168, 0, -0.01500107999891043, 0, -0.002052054041996598, 0, -0.008137956261634827, 0, 0.004878619220107794, 0, 0, 0, 0.02016460336744785, 0, 0, 0, 0.0003409844648558646, 0, 0, 0, -0.0297782588750124, 0, 0, 0, 0.0002711900742724538, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.002906784415245056, 0, 0.001026796875521541, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.01975509338080883, 0.005119095090776682, -0.004357135854661465, 0.001602035365067422, 0.0132230743765831, 0.000172930333064869, 0.006225986871868372, -0.0006902975728735328, 0, 0, -0.007067244965583086, 0, 0, 0, -0.01530280988663435, 0.001012413762509823, 0, 0.0002573327219579369, 0, 0, 0, 0.0009743308182805777, -0.02825670316815376, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.002221214352175593, 0, -0.0001304032048210502, 0.0005547543405555189, -0.01730671338737011, 0.004418119788169861, 0, 0, -0.0008889151504263282, 0, 0, 0, -0.01112860161811113, 0.01078294217586517, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.002758258488029242, 0,
        0, -0.01802586577832699, 0, 0, 0, 0.005179275292903185, 0, -0.01906699128448963, 0, 0, 0, 0, 5.394015897763893e-05, -0.002056884579360485, 0, 0.003338540438562632, 0, 0, 0, 0, 0, 0.002206973033025861, 0, 0, 0, 0, 0, 0, 0, 0.001886283745989203, 0, 0, 0, -0.01773627102375031, 0, -0.007617832627147436, 0, -0.0004326135676819831, -0.01605423726141453, -0.01282445248216391, 0, 0.01226751040667295, 0, 0, 0, 0.002532214857637882, 0, 0.009395716711878777, 0, 0, 0, 0, 0, 0.01127624604851007, 0, 0.01180076133459806, 0, 0, 0, 0, 0, 0.002805564319714904, 0, 0,
        0.002499495632946491, -0.01240076217800379, 0.0112254461273551, 0.004651465453207493, -0.00550150778144598, 0.0001146932627307251, -0.01192948967218399, 0, -0.00112246535718441, 6.145054067019373e-05, 0.003969453740864992, 0, 0.002380812307819724, 0, 0.002109805354848504, 0, 0, 0, 0, 0, -0.01449878886342049, 0, 0, 0, 0.003844131249934435, 0, -0.01873357780277729, 0.007873709313571453, 0, 0, 0, 0, -0.01530187297612429, 0.01448951661586761, 0, 0, 0.01119778584688902, 0, 0, 0, 0.002948630601167679, 0, 0, 0, 0.00103258655872196, 0, 0, 0, -0.007991480641067028, -0.007065176963806152, 0, 0, 0.006777593865990639, 0, 0, 0, 0.003951434977352619, 0, 0, 0, 0, 0, 0, 0,
        -0.01024955417960882, 0.001619665999896824, 0, -0.01092826668173075, 0, 0.01380868908017874, -0.009622072800993919, -0.007031942252069712, 0, 5.596029586740769e-05, 0, 0, 0.001023391960188746, 0.00397261930629611, 0, 0, 0, 0.01593368127942085, 0, -0.004240112379193306, 0, -0.01375795435160398, 0, -0.005237397737801075, 0, 0.00247903517447412, 0, 0, 0, -0.007171982899308205, 0, 0, 0, -0.0170600414276123, 0, 0, 0, -0.01124044414609671, 0, 0, 0, 0.002007040427997708, 0, 0, 0, 0.001638915739022195, 0, 0, 0, -0.005788118578493595, 0, 0, 0, -0.00257438886910677, 0, -0.001611463143490255, 0, 0, 0, 0, 0, 0.008423848077654839, 0, 0,
        -0.02049411088228226, -0.009158982895314693, 0, -0.006034552585333586, 0.003424536902457476, 0.01092137303203344, -0.004440153017640114, -0.005602270364761353, 0, -0.006672636140137911, 0, -0.004023458808660507, 0, -0.001529123401269317, 0, 0, 0.01286331564188004, 0.005375206470489502, 0.005703421775251627, 0.0006726149586029351, 0.006031082943081856, -0.005389790516346693, 0, -0.007979492656886578, 0, -0.009130422025918961, 0, -0.004969786386936903, 0, -0.01036987267434597, 0, 0, 0, 0, 0, 0.0009819091064855456, 0, 0, 0, 0.001800582860596478, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0004480353090912104, 0, 0, 0, 0.006026613526046276, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -0.01388090755790472, 0, 0, 0, 0, 0, 0, 0, 0.0002528110635466874, 0, 0, 0, 0, 0, 0, -0.008805626071989536, 0.006934702396392822, -0.01492437440901995, 0, 0, 0, 0, 0, 0.002889636904001236, -0.003545150626450777, -0.01746007241308689, 0.00356417172588408, -0.002156592207029462, -0.001181844039820135, 0, 0.006233755499124527, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.007814960554242134, 0, 0, 0, 0, 0, 0.01160365808755159, 0, 0, 0, 0, 0, 0, 0, -0.0006991777336224914, 0, 0.004296665079891682, 0, -0.01602285914123058, 0, 0,
        0, 0, -0.008148984052240849, -0.002979479264467955, 0, 0, 0, 0, 0, 6.986851076362655e-05, 0, -0.0008430649759247899, 0, 0, 0, 0, 0, 0, -0.00588175468146801, 0.01146884076297283, 0, 0, 0, 0, 0, 0, 0, -0.008350075222551823, 0, 0, 0, 0, 0, 0, 0, -0.009895865805447102, 0, 0, 0, 0, 0, -0.01317164488136768, 0, 0.008495236746966839, 0, 0, 0, 0, 0, 0, 0, -0.01489146053791046, 0, 0, 0, 0, 0, 0, 0, 0.00233347387984395, 0, 0, 0, 0,
        0.0008613938116468489, 0, -0.004162578377872705, 0, -0.01237441413104534, 0, 0.00350602506659925, 0, 0, 0, 0, 0, -0.003941346891224384, -0.00049541488988325, 0.003735047997906804, -0.004191562067717314, 0, 0, 0.001060758135281503, -0.01530113816261292, 0, 0, 0.001016166061162949, 0, 0, 0, 0, 0, 0, 0, 0.005952419713139534, -0.005114198196679354, 0, 0, 0, 0, -0.004349358379840851, -0.005581219214946032, 0.009549596346914768, 0, 0, 0, 0, 0, 0, 0, -0.01367402449250221, 0, 0, 0, -0.002580603584647179, 0, 0, 0, -0.003884173231199384, 0, 0, 0, 0, 0, 0, 0, 0.002095011528581381, 0,
        -0.008981949649751186, -0.005296039860695601, 0, 0, -0.007270540110766888, -0.006151952315121889, 0, -0.000131568536744453, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01510833948850632, 0, 0, 0, 0, 0, -0.002377588069066405, 0, 0, 0, 0.00357332918792963, 0, 0.004935392178595066, 0, -0.001208514091558754, 0, 0.003629607148468494, 0, -0.002453358378261328, 0.007902606390416622, -0.004579301457852125, 0.0104672834277153, -0.01438988652080297, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0003262516111135483, 0, 0, 0, 0.001845437102019787, 0, 0, 0, -0.0006361986161209643, 0, 0.007189369294792414, 0, -0.000880868814419955, 0, 0.003832763992249966,
        -0.001984440954402089, 0, 0, 0, -0.005281203892081976, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003141822759062052, 0, 0, 0, -0.003668178571388125, 0, 0, 0, 0, 0, -0.001158741535618901, 0, 0, 0, 0.008841685950756073, 0, -0.0001049081693054177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01215769536793232, 0, 0, 0, -0.006011473014950752, 0, 0, 0, 0.01094923540949821, 0, 0.0007174916681833565, 0, -0.0002724676742218435, 0, -0.005016247741878033, 0,
        0.0006517647416330874, 0.008677568286657333, 0, 0, 0, 0, 0, 0, -0.003566155210137367, -4.885100224782946e-06, -0.00229276274330914, 0, 0.0007304406608454883, -0.0001146475769928657, 0.003354081185534596, 0, -0.005026435479521751, -0.008225211873650551, -0.002378627192229033, 0, 0, 0, 0, 0, -0.005564861465245485, 0, -0.00865461491048336, 0.003265646984800696, -0.001066774828359485, -0.004759936593472958, 2.820201370923314e-05, 0.007129182573407888, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0006439020507968962, 0.002022701082751155, 0.001339445123448968, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003208842827007174, -0.00193875131662935, 0.001263014157302678, 0,
        0, 0, -0.006573276594281197, -0.01342670433223248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005192865617573261, 0.002561565255746245, 0, 0, 0, -0.001265533152036369, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.004163613077253103, 0, -0.001962880371138453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.003105407813563943, 0, 0, 0, 0.007958086207509041, 0, 0, 0, 0.009722242131829262, 0, 0, 0, 0, 0, 0, 0, 0.001979285385459661,
        -0.005395350512117147, 0, 0, 0, 0, 0, 0, 0, -0.003468203125521541, -0.003809607354924083, 0, 0, 0.004860356450080872, 5.352582957129925e-05, 0, 0, -0.01290092244744301, -0.004927529487758875, 0, 0, -0.002510350430384278, 0, 0, 0, 0.01486973371356726, 0, 0, 0, -0.004235663916915655, 0, 0, 0, 0.003333699656650424, -0.003793108742684126, 0, 0, -0.007945861667394638, 0, 0, 0, 0.00449273269623518, -0.01317429915070534, 0, 0, -0.008703797124326229, 0, 0, 0, 0.00635827798396349, 0, 0, 0, -0.002042858162894845, 0, 0, 0, -0.01177223026752472, 0, 0, 0, 0.003267524531111121, 0, 0, 0
    ]
    scale = 1
    bias = 0.7821782231
    model_ctrs = catboost_model_ctrs_container(
        used_model_ctrs_count = 10,
        compressed_model_ctrs = [
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [3],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 8405694746487331134, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [5],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [7],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [8],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [10],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471471, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 8405694746487331111, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            )
        ],
        ctr_data = catboost_ctr_data(
            learn_ctrs = {
                768791580653471469 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 8473802870189803490 : 0, 7071392469244395075 : 2, 18446744073709551615 : 0, 8806438445905145973 : 3, 619730330622847022 : 1, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.94273e-44, count = 61), catboost_ctr_mean_history(sum = 0, count = 12), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 0, count = 1)],
                    ctr_total = [21, 61, 0, 12, 1, 5, 0, 1]
                ),
                768791580653471471 :
                catboost_ctr_value_table(
                    index_hash_viewer = {2136296385601851904 : 0, 7428730412605434673 : 2, 9959754109938180626 : 6, 14256903225472974739 : 1, 8056048104805248435 : 3, 18446744073709551615 : 0, 12130603730978457510 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10789443546307262781 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.8026e-44, count = 73), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0)],
                    ctr_total = [20, 73, 0, 1, 0, 2, 0, 2, 0, 1, 1, 0, 1, 0]
                ),
                768791580653471472 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 13987540656699198946 : 3, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18089724839685297862 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10353740403438739754 : 1, 3922001124998993866 : 2, 13686716744772876732 : 4, 18293943161539901837 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 0, count = 13), catboost_ctr_mean_history(sum = 3.08286e-44, count = 20), catboost_ctr_mean_history(sum = 0, count = 37), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 0, count = 3)],
                    ctr_total = [0, 13, 22, 20, 0, 37, 0, 2, 0, 4, 0, 3]
                ),
                768791580653471474 :
                catboost_ctr_value_table(
                    index_hash_viewer = {3607388709394294015 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18356215166324018775 : 2, 18365206492781874408 : 1, 18446744073709551615 : 0, 18446744073709551615 : 0, 14559146096844143499 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 11416626865500250542 : 3, 5549384008678792175 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 0, count = 22), catboost_ctr_mean_history(sum = 2.8026e-45, count = 3), catboost_ctr_mean_history(sum = 0, count = 14), catboost_ctr_mean_history(sum = 2.66247e-44, count = 17), catboost_ctr_mean_history(sum = 0, count = 22), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1)],
                    ctr_total = [0, 22, 2, 3, 0, 14, 19, 17, 0, 22, 1, 1]
                ),
                768791580653471478 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 15379737126276794113 : 5, 18446744073709551615 : 0, 14256903225472974739 : 3, 18048946643763804916 : 1, 2051959227349154549 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 7024059537692152076 : 6, 18446744073709551615 : 0, 15472181234288693070 : 2, 8864790892067322495 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.4013e-44, count = 58), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 1.4013e-45, count = 6), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 4.2039e-45, count = 6), catboost_ctr_mean_history(sum = 2.8026e-45, count = 0), catboost_ctr_mean_history(sum = 7.00649e-45, count = 0)],
                    ctr_total = [10, 58, 0, 4, 1, 6, 1, 5, 3, 6, 2, 0, 5, 0]
                ),
                8405694746487331111 :
                catboost_ctr_value_table(
                    index_hash_viewer = {2136296385601851904 : 0, 7428730412605434673 : 2, 9959754109938180626 : 6, 14256903225472974739 : 1, 8056048104805248435 : 3, 18446744073709551615 : 0, 12130603730978457510 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10789443546307262781 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.30321e-43, count = 1), catboost_ctr_mean_history(sum = 2.8026e-45, count = 2), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1)],
                    ctr_total = [93, 1, 2, 2, 1, 1, 1]
                ),
                8405694746487331134 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 15379737126276794113 : 5, 18446744073709551615 : 0, 14256903225472974739 : 3, 18048946643763804916 : 1, 2051959227349154549 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 7024059537692152076 : 6, 18446744073709551615 : 0, 15472181234288693070 : 2, 8864790892067322495 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 9.52883e-44, count = 4), catboost_ctr_mean_history(sum = 9.80909e-45, count = 6), catboost_ctr_mean_history(sum = 1.26117e-44, count = 2)],
                    ctr_total = [68, 4, 7, 6, 9, 2, 5]
                )
            }
        )
    )


### Routines to compute CTRs

def calc_hash(a, b):
    max_int = 0xffFFffFFffFFffFF
    MAGIC_MULT = 0x4906ba494954cb65
    return (MAGIC_MULT * ((a + MAGIC_MULT * b) & max_int)) & max_int


def calc_hashes(binarized_features, hashed_cat_features, transposed_cat_feature_indexes, binarized_feature_indexes):
    result = 0
    for cat_feature_index in transposed_cat_feature_indexes:
        result = calc_hash(result, hashed_cat_features[cat_feature_index])
    for bin_feature_index in binarized_feature_indexes:
        binary_feature = binarized_features[bin_feature_index.bin_index]
        if not(bin_feature_index.check_value_equal):
            result = calc_hash(result, 1 if (binary_feature >= bin_feature_index.value) else 0)
        else:
            result = calc_hash(result, 1 if (binary_feature == bin_feature_index.value) else 0)
    return result


def calc_ctrs(model_ctrs, binarized_features, hashed_cat_features, result):
    ctr_hash = 0
    result_index = 0

    for i in range(len(model_ctrs.compressed_model_ctrs)):
        proj = model_ctrs.compressed_model_ctrs[i].projection
        ctr_hash = calc_hashes(binarized_features, hashed_cat_features, proj.transposed_cat_feature_indexes, proj.binarized_indexes)
        for j in range(len(model_ctrs.compressed_model_ctrs[i].model_ctrs)):
            ctr = model_ctrs.compressed_model_ctrs[i].model_ctrs[j]
            learn_ctr = model_ctrs.ctr_data.learn_ctrs[ctr.base_hash]
            ctr_type = ctr.base_ctr_type
            bucket = learn_ctr.resolve_hash_index(ctr_hash)
            if bucket is None:
                result[result_index] = ctr.calc(0, 0)
            else:
                if ctr_type == "BinarizedTargetMeanValue" or ctr_type == "FloatTargetMeanValue":
                    ctr_mean_history = learn_ctr.ctr_mean_history[bucket]
                    result[result_index] = ctr.calc(ctr_mean_history.sum, ctr_mean_history.count)
                elif ctr_type == "Counter" or ctr_type == "FeatureFreq":
                    ctr_total = learn_ctr.ctr_total
                    denominator = learn_ctr.counter_denominator
                    result[result_index] = ctr.calc(ctr_total[bucket], denominator)
                elif ctr_type == "Buckets":
                    ctr_history = learn_ctr.ctr_total
                    target_classes_count = learn_ctr.target_classes_count
                    total_count = 0
                    good_count = ctr_history[bucket * target_classes_count + ctr.target_border_idx];
                    for class_id in range(target_classes_count):
                        total_count += ctr_history[bucket * target_classes_count + class_id]
                    result[result_index] = ctr.calc(good_count, total_count)
                else:
                    ctr_history = learn_ctr.ctr_total;
                    target_classes_count = learn_ctr.target_classes_count;

                    if target_classes_count > 2:
                        good_count = 0
                        total_count = 0
                        for class_id in range(ctr.target_border_idx + 1):
                            total_count += ctr_history[bucket * target_classes_count + class_id]
                        for class_id in range(ctr.target_border_idx + 1, target_classes_count):
                            good_count += ctr_history[bucket * target_classes_count + class_id]
                        total_count += good_count;
                        result[result_index] = ctr.calc(good_count, total_count);
                    else:
                        result[result_index] = ctr.calc(ctr_history[bucket * 2 + 1], ctr_history[bucket * 2] + ctr_history[bucket * 2 + 1])
            result_index += 1



cat_features_hashes = {
    "Female": -2114564283,
    "Protective-serv": -2075156126,
    "Assoc-voc": -2029370604,
    "Married-civ-spouse": -2019910086,
    "Federal-gov": -1993066135,
    "Transport-moving": -1903253868,
    "Farming-fishing": -1888947309,
    "Prof-school": -1742589394,
    "Self-emp-inc": -1732053524,
    "?": -1576664757,
    "Handlers-cleaners": -1555793520,
    "0": -1438285038,
    "Philippines": -1437257447,
    "Male": -1291328762,
    "11th": -1209300766,
    "Unmarried": -1158645841,
    "Local-gov": -1105932163,
    "Divorced": -993514283,
    "Some-college": -870577664,
    "Asian-Pac-Islander": -787966085,
    "Sales": -760428919,
    "Self-emp-not-inc": -661998850,
    "Widowed": -651660490,
    "Masters": -453513993,
    "State-gov": -447941100,
    "Doctorate": -434936054,
    "White": -218697806,
    "Own-child": -189887997,
    "Amer-Indian-Eskimo": -86031875,
    "Exec-managerial": -26537793,
    "Husband": 60472414,
    "Italy": 117615621,
    "Not-in-family": 143014663,
    "n": 239748506,
    "Married-spouse-absent": 261588508,
    "Prof-specialty": 369959660,
    "Assoc-acdm": 475479755,
    "Adm-clerical": 495735304,
    "Bachelors": 556725573,
    "HS-grad": 580496350,
    "Craft-repair": 709691013,
    "Other-relative": 739168919,
    "Other-service": 786213683,
    "9th": 840896980,
    "Separated": 887350706,
    "10th": 888723975,
    "Mexico": 972041323,
    "Hong": 995245846,
    "1": 1121341681,
    "Tech-support": 1150039955,
    "Black": 1161225950,
    "Canada": 1510821218,
    "Wife": 1708186408,
    "United-States": 1736516096,
    "Never-married": 1959200218,
    "Machine-op-inspct": 2039859473,
    "7th-8th": 2066982375,
    "Private": 2084267031,
}

def hash_uint64(string):
    return cat_features_hashes.get(str(string), 0x7fFFffFF)


### Applicator for the CatBoost model

def apply_catboost_model(float_features, cat_features=[], ntree_start=0, ntree_end=catboost_model.tree_count):
    """
    Applies the model built by CatBoost.

    Parameters
    ----------

    float_features : list of float features

    cat_features : list of categorical features
        You need to pass float and categorical features separately in the same order they appeared in train dataset.
        For example if you had features f1,f2,f3,f4, where f2 and f4 were considered categorical, you need to pass here float_features=f1,f3, cat_features=f2,f4


    Returns
    -------
    prediction : formula value for the model and the features

    """
    if ntree_end == 0:
        ntree_end = catboost_model.tree_count
    else:
        ntree_end = min(ntree_end, catboost_model.tree_count)

    model = catboost_model

    assert len(float_features) >= model.float_feature_count
    assert len(cat_features) >= model.cat_feature_count

    # Binarise features
    binary_features = [0] * model.binary_feature_count
    binary_feature_index = 0

    for i in range(len(model.float_feature_borders)):
        for border in model.float_feature_borders[i]:
            binary_features[binary_feature_index] += 1 if (float_features[model.float_features_index[i]] > border) else 0
        binary_feature_index += 1
    transposed_hash = [0] * model.cat_feature_count
    for i in range(model.cat_feature_count):
        transposed_hash[i] = hash_uint64(cat_features[i])

    if len(model.one_hot_cat_feature_index) > 0:
        cat_feature_packed_indexes = {}
        for i in range(model.cat_feature_count):
            cat_feature_packed_indexes[model.cat_features_index[i]] = i
        for i in range(len(model.one_hot_cat_feature_index)):
            cat_idx = cat_feature_packed_indexes[model.one_hot_cat_feature_index[i]]
            hash = transposed_hash[cat_idx]
            for border_idx in range(len(model.one_hot_hash_values[i])):
                binary_features[binary_feature_index] |= (1 if hash == model.one_hot_hash_values[i][border_idx] else 0) * (border_idx + 1)
            binary_feature_index += 1

    if hasattr(model, 'model_ctrs') and model.model_ctrs.used_model_ctrs_count > 0:
        ctrs = [0.] * model.model_ctrs.used_model_ctrs_count;
        calc_ctrs(model.model_ctrs, binary_features, transposed_hash, ctrs)
        for i in range(len(model.ctr_feature_borders)):
            for border in model.ctr_feature_borders[i]:
                binary_features[binary_feature_index] += 1 if ctrs[i] > border else 0
            binary_feature_index += 1

    # Extract and sum values from trees
    result = 0.
    tree_splits_index = 0
    current_tree_leaf_values_index = 0
    for tree_id in range(ntree_start, ntree_end):
        current_tree_depth = model.tree_depth[tree_id]
        index = 0
        for depth in range(current_tree_depth):
            border_val = model.tree_split_border[tree_splits_index + depth]
            feature_index = model.tree_split_feature_index[tree_splits_index + depth]
            xor_mask = model.tree_split_xor_mask[tree_splits_index + depth]
            index |= ((binary_features[feature_index] ^ xor_mask) >= border_val) << depth
        result += model.leaf_values[current_tree_leaf_values_index + index]
        tree_splits_index += current_tree_depth
        current_tree_leaf_values_index += (1 << current_tree_depth)
    return model.scale * result + model.bias



