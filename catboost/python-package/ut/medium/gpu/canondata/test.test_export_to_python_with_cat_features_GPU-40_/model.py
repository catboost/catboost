### Types to hold CTR's data

class catboost_model_ctr(object):
    def __init__(self, base_hash, base_ctr_type, target_border_idx, prior_num, prior_denom, shift, scale):
        self.base_hash = base_hash
        self.base_ctr_type = base_ctr_type
        self.target_border_idx = target_border_idx
        self.prior_num = prior_num
        self.prior_denom = prior_denom
        self.shift = shift
        self.scale = scale

    def calc(self, count_in_class, total_count):
        ctr = (count_in_class + self.prior_num) / float(total_count + self.prior_denom)
        return (ctr + self.shift) * self.scale


class catboost_bin_feature_index_value(object):
    def __init__(self, bin_index, check_value_equal, value):
        self.bin_index = bin_index
        self.check_value_equal = check_value_equal
        self.value = value


class catboost_ctr_mean_history(object):
    def __init__(self, sum, count):
        self.sum = sum
        self.count = count


class catboost_ctr_value_table(object):
    def __init__(self, index_hash_viewer, target_classes_count, counter_denominator, ctr_mean_history, ctr_total):
        self.index_hash_viewer = index_hash_viewer
        self.target_classes_count = target_classes_count
        self.counter_denominator = counter_denominator
        self.ctr_mean_history = ctr_mean_history
        self.ctr_total = ctr_total

    def resolve_hash_index(self, hash):
        try:
            return self.index_hash_viewer[hash]
        except KeyError:
            return None


class catboost_ctr_data(object):
    def __init__(self, learn_ctrs):
        self.learn_ctrs = learn_ctrs


class catboost_projection(object):
    def __init__(self, transposed_cat_feature_indexes, binarized_indexes):
        self.transposed_cat_feature_indexes = transposed_cat_feature_indexes
        self.binarized_indexes = binarized_indexes


class catboost_compressed_model_ctr(object):
    def __init__(self, projection, model_ctrs):
        self.projection = projection
        self.model_ctrs = model_ctrs


class catboost_model_ctrs_container(object):
    def __init__(self, used_model_ctrs_count, compressed_model_ctrs, ctr_data):
        self.used_model_ctrs_count = used_model_ctrs_count
        self.compressed_model_ctrs = compressed_model_ctrs
        self.ctr_data = ctr_data


###  Model data
class catboost_model(object):
    float_features_index = [
        0, 1, 2, 3, 5,
    ]
    float_feature_count = 6
    cat_feature_count = 11
    binary_feature_count = 34
    tree_count = 40
    float_feature_borders = [
        [33.5, 36.5, 41.5, 51.5, 52.5, 54.5],
        [51773, 59723, 139369.5, 148030.5, 174542.5, 195286.5, 203488.5, 337225.5, 342219, 350449],
        [4.5, 5.5, 8, 12.5, 13.5, 14.5, 15.5],
        [1087, 3280],
        [46.5, 49, 55],
    ]
    tree_depth = [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
    tree_split_border = [4, 3, 4, 4, 4, 2, 1, 3, 2, 2, 1, 6, 5, 2, 1, 3, 2, 2, 2, 2, 4, 3, 1, 3, 5, 2, 1, 2, 1, 8, 2, 3, 4, 1, 1, 255, 2, 1, 2, 4, 2, 3, 2, 1, 2, 2, 4, 3, 1, 4, 255, 3, 7, 4, 1, 2, 4, 3, 4, 2, 1, 2, 3, 2, 5, 1, 2, 1, 3, 4, 3, 5, 2, 3, 2, 3, 2, 2, 1, 3, 3, 1, 2, 5, 2, 2, 4, 3, 2, 3, 4, 1, 1, 3, 1, 1, 1, 1, 2, 1, 6, 5, 1, 4, 5, 1, 10, 2, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 2, 3, 1, 2, 1, 2, 5, 1, 4, 2, 1, 2, 7, 6, 5, 4, 2, 3, 2, 3, 4, 1, 1, 1, 2, 1, 4, 1, 1, 1, 7, 2, 5, 2, 4, 4, 5, 2, 1, 2, 2, 2, 3, 1, 1, 1, 3, 1, 4, 1, 1, 1, 1, 7, 4, 2, 3, 2, 1, 3, 3, 1, 1, 1, 5, 4, 1, 4, 5, 4, 1, 5, 4, 3, 2, 2, 3, 2, 2, 1, 2, 2, 1, 5, 2, 3, 1, 1, 5, 3, 5, 2, 1, 1, 3, 1, 2, 6, 4, 1, 1, 1, 7, 1, 2, 1, 5, 6, 2, 1, 5, 4, 1, 3, 3, 3, 9, 3, 6, 5, 2, 3]
    tree_split_feature_index = [16, 18, 11, 13, 21, 20, 25, 9, 29, 12, 33, 10, 15, 0, 19, 24, 8, 31, 17, 14, 7, 6, 30, 32, 23, 3, 28, 27, 1, 1, 12, 22, 9, 26, 20, 5, 0, 4, 3, 0, 11, 7, 3, 16, 12, 17, 10, 7, 4, 28, 5, 32, 1, 1, 4, 3, 24, 7, 9, 29, 1, 3, 31, 14, 1, 32, 3, 4, 14, 14, 0, 13, 3, 0, 15, 15, 1, 9, 2, 0, 14, 11, 8, 1, 2, 7, 2, 24, 16, 13, 31, 10, 1, 4, 21, 13, 2, 12, 3, 9, 1, 32, 21, 31, 23, 1, 1, 17, 2, 12, 9, 21, 24, 1, 2, 12, 9, 21, 11, 31, 2, 3, 6, 13, 14, 11, 31, 14, 23, 24, 2, 2, 21, 15, 4, 20, 17, 11, 31, 14, 16, 23, 23, 7, 31, 17, 16, 23, 2, 24, 2, 10, 32, 6, 14, 18, 12, 3, 2, 22, 21, 22, 12, 9, 4, 1, 16, 2, 1, 16, 23, 2, 15, 13, 18, 17, 0, 32, 9, 18, 21, 13, 2, 16, 3, 23, 21, 15, 10, 0, 6, 1, 2, 16, 23, 10, 0, 1, 2, 26, 27, 10, 30, 16, 29, 8, 2, 28, 7, 28, 2, 9, 4, 12, 6, 2, 31, 1, 15, 24, 2, 21, 3, 8, 2, 15, 21, 4, 21, 15, 31, 10, 18, 23, 1, 2, 0, 7, 32, 24]
    tree_split_xor_mask = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    cat_features_index = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    one_hot_cat_feature_index = [9]
    one_hot_hash_values = [
        [-1291328762]
    ]
    ctr_feature_borders = [
        [0.381648958, 0.599734068, 0.708776593, 0.817819178],
        [0.151785716, 0.514285684, 0.721428573, 0.773214281, 0.876785696],
        [0.25, 0.899999976],
        [0.0294117667, 0.0539215691, 0.0637254938, 0.377451003],
        [0.0572916679, 0.286458343, 0.34375, 0.515625, 0.744791687, 0.802083373],
        [0.515625, 0.692708313, 0.78125, 0.825520813],
        [0.4375, 0.700000048],
        [0.0147058833, 0.0245098043, 0.0343137272, 0.191176474, 0.235294133],
        [0.0608108118, 0.243243247, 0.304054052, 0.364864886, 0.547297299],
        [0.342905402, 0.385810822, 0.428716242, 0.471621633, 0.600337863, 0.643243253],
        [0.4375, 0.512499988, 0.587499976, 0.700000048],
        [0.0343137272, 0.387254894],
        [0.403846145, 0.75, 0.807692289],
        [0.650240362],
        [0.8125, 0.875, 0.9375],
        [0.0147058833, 0.0392156877, 0.0539215691, 0.117647067, 0.142156869],
        [0.357954532, 0.417613626, 0.596590877],
        [0.284801126, 0.444602281, 0.497869313, 0.604403436, 0.764204562],
        [0.34375, 0.4375, 0.578125, 0.765625],
        [0.284313738],
        [0.744791687, 0.802083373],
        [0.815104127, 0.901041627],
        [0.7421875, 0.8125, 0.8359375, 0.90625],
        [0.0882352963, 0.460784316],
        [0.69846493, 0.805921078],
        [0.734375, 0.8125, 0.838541687, 0.890625],
        [0.75, 0.833333373, 0.854166687, 0.875, 0.895833373],
        [0.0147058833]
    ]

    ## Aggregated array of leaf values for trees. Each tree is represented by a separate line:
    leaf_values = [
        0, 0.02181610278785229, 0, 0, 0, 0.04363220557570457, 0, 0, 0.04363220557570457, 0.04986537620425224, 0, 0, -0.02313829399645329, 0.02181610278785229, 0, 0, -0.1682484298944473, 0.06108508631587029, 0, 0, -0.1253434270620346, 0.03490576520562172, 0, 0, 0.03490576520562172, 0.02181610278785229, 0, 0.02181610278785229, -0.1253434270620346, 0.04363220557570457, 0, 0, -0.06459833681583405, 0.06712646782398224, 0.02181610278785229, 0.03490576520562172, 0, 0, 0, 0.04986537620425224, -0.06459833681583405, 0.04363220557570457, 0, 0, -0.04521883279085159, 0.06346502900123596, -0.07833964377641678, 0.03490576520562172, -0.04521883279085159, -0.07833964377641678, 0, 0.02181610278785229, 0, 0.03490576520562172, -0.07833964377641678, 0.02181610278785229, 0, 0, 0.02181610278785229, 0.02181610278785229, 0.04363220557570457, 0.03490576520562172, -0.07833964377641678, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0.01509300339967012, 0, 0, -0.07186975330114365, 0, 0, 0, -0.06578578054904938, 0, 0, 0.03928129747509956, 0, -0.06148859858512878, -0.07186975330114365, 0.02511692605912685, -0.153721496462822, 0.03447598218917847, 0, 0.04915639013051987, 0.02861293777823448, 0.02444217354059219, -0.1165443807840347, 0.05340825393795967, 0.01630623079836369, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.02413353510200977, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01832008734345436, 0, -0.009761475957930088, -0.1378484964370728, 0.05195422470569611, -0.06564180552959442,
        -0.07808174192905426, 0, -0.09334445744752884, 0, 0.04802869260311127, 0, -0.0578857958316803, 0, 0, 0.03303684666752815, -0.04609250649809837, 0.03677573427557945, 0.02617762982845306, 0.04493499174714088, -0.07844055444002151, 0.02923139184713364, 0, 0, -0.03551242500543594, 0, 0.03291943296790123, 0, -0.02894133701920509, 0, 0, 0.0350770503282547, -0.1054575443267822, 0.0174995195120573, 0.04428545758128166, 0.03385355323553085, -0.05800836160778999, 0.02383844554424286, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -0.02292168326675892, 0.006230691447854042, 0, 0, 0.02826864272356033, 0, 0, 0, 0, 0, 0, 0.01225839462131262, 0, 0.0171330813318491, 0.02221738919615746, 0.02184939011931419, 0, 0.03201064839959145, -0.1142344176769257, 0, 0, 0.01578458584845066, -0.0798674076795578, 0, 0, 0, 0, 0.008850813843309879, 0, 0.03012293018400669, -0.01845145225524902, 0.02030603773891926, -0.09770535677671432, 0.01059865485876799, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01986994035542011, -0.02757644467055798, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.06585730612277985, 0.004579459317028522, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01090357173234224, 0.02233881130814552, -0.08663720637559891, 0, -0.0520227812230587, 0.01655960083007813, -0.100507877767086, 0, 0, 0, 0, 0, 0, 0.02449283562600613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.06311285495758057, 0.01262360904365778, 0, 0, 0.0311534907668829, 0.01628954149782658, 0, 0, 0, 0, 0, 0, 0, 0.008827375248074532, 0, 0,
        0, 0, 0.004055763129144907, 0.0177360437810421, 0, 0.03842192888259888, 0, 0.009404661133885384, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.08127573877573013, 0, 0.00760333938524127, 0, 0.007308953441679478, 0, 0.008438177406787872, 0, 0.01226174272596836, 0, 0.01802405342459679, 0.01180282421410084, 0, 0, 0.003294379217550159, -0.04822251945734024, -0.02597886137664318, 0, 0.005935715977102518, -0.05124761536717415, -0.05056582763791084, 0.004244830925017595, 0.004120797384530306, -0.02482446283102036, 0, 0, 0, 0, 0, 0, 0, -0.05135559663176537, -0.02401130832731724, 0.003366472199559212, -0.02637541480362415, 0, 0.04853152856230736, 0.005209816619753838, 0.0120060071349144, 0, -0.03923289850354195, 0, 0.005984276067465544, 0, -0.0208461731672287, 0, 0.01054937671869993,
        -0.03945024684071541, -0.001608558814041317, 0, -0.04621203988790512, 0, -0.01981977745890617, 0, 0, 0, 0, 0, -0.04586139693856239, 0, 0, 0, 0, 0.01292334124445915, -0.05175785720348358, 0.0003991492849308997, 0, 0, 0, 0, 0, 0, -0.009572745300829411, 0, 0.03997541964054108, 0, 0, 0, -0.02697702124714851, 0.01106425188481808, 0, -0.02288072556257248, -0.0680602565407753, 0, 0, 0, 0, 0, 0.01428747083991766, 0, 0.003819689387455583, 0, 0, 0, 0, 0.02695899084210396, 0.02479904517531395, 0.003071989398449659, -0.06145253032445908, -0.03487300872802734, -0.0342726968228817, 0, 0, 0, 0.04252498969435692, 0, -0.04796541482210159, 0, -0.065749391913414, 0, 0,
        0, 0, 0.003810663241893053, 0, 0, 0, 0.007251548115164042, 0, 0, 0, -0.04746280238032341, -0.01783471181988716, -0.005399092566221952, 0, -0.05790263041853905, 0, 0, 0, 0, 0, 0, 0, 0.01275650784373283, 0, 0, 0, 0, 0, -0.03295167163014412, 0, -0.01628853380680084, -0.02427511848509312, 0, 0, 0.01475580502301455, 0, 0, 0, 0.006266776937991381, 0, 0, 0, -0.04729151725769043, 0, 0.01805363409221172, 0, 0.01821357756853104, 0, 0, 0, 0, 0, 0, 0, 0.002498332178220153, 0, 0, 0, 0, 0, 0.0435510128736496, 0, 0.01129496935755014, -0.07499243319034576,
        0.0007872873684391379, 0, -0.001875828485935926, 0, 0.001940113957971334, -0.06849589198827744, 0.01572944968938828, 0, -0.0016684012953192, 0, -0.03618369624018669, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.004685263149440289, 0.003622457152232528, 0.0108933923766017, 0, 0.01199945900589228, -0.06331755965948105, 0.02152289822697639, 0, 0, 0, 0, 0, -0.0238693542778492, 0, 0.002197858178988099, 0, 0.0004729763022623956, 0, 0.0174593161791563, 0, 0.0002613407850731164, -0.01695874705910683, 0.01299017388373613, 0, 0.008463956415653229, 0, 0, 0, 0.01816926710307598, 0, -0.03495832532644272, 0,
        -0.03145704790949821, 0, 0, 0, 0.005608143284916878, 0, 0, 0, 0, 0, 0, 0, 0.005108763463795185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.03653318807482719, 0, 0, 0, 0.005110221449285746, 0, 0, 0, -0.03326742723584175, 0.003407576819881797, 0, -0.02014531008899212, -0.003347307443618774, -0.02500078640878201, -0.01624277792870998, 0, 0, -0.01290408708155155, -0.02240921184420586, 0, 0.004879275802522898, 0, 0, 0, 0, 0, 0, 0, 0.004705504514276981, 0, 0, 0, 0.0396529920399189, -0.08443862199783325, -0.05187699943780899, 0, -0.002927807392552495, 0.01522101555019617, 0, 0,
        0, -0.01846219226717949, 0, 0, 0, 0, 0, 0, 0, 0.008663474582135677, 0, 0, 0, 0, 0, 0, 0, 0.03587561100721359, 0, 0, 0, 0, 0, 0, 0, 0.02147960104048252, 0, 0, 0, 0, 0, 0, 0, -0.01385855302214622, 0, 0, 0, 0, 0, 0, -0.03542026504874229, 0.006971433293074369, 0, -0.0391230471432209, 0, 0, 0, 0, 0, -0.01925777830183506, 0, 0, 0, 0, 0, 0, 0, -0.008442471735179424, 0, -0.03763466700911522, 0, 0, 0, 0,
        -0.00913573894649744, 0, 0, 0, 0.02973243035376072, 0, 0, 0, 0, 0, 0, 0, 0.005449788179248571, -0.01236452534794807, -0.01681493408977985, 0, 0.01000027731060982, 0, -0.02561664208769798, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.004561509005725384, -0.03397354856133461, -0.02307119965553284, -0.01435831189155579, 0.002777449088171124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01572217606008053, -0.01439023204147816, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.03109356947243214, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02305098809301853, 0, 0, 0, -0.02426725439727306, 0, 0, 0, 0, 0, 0.005090105347335339, 0, -0.0383722111582756, -0.0161721371114254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.002586557995527983, 0, -0.03927374631166458, 0, -0.0254626702517271, 0, 0.02852403372526169, 0, 0.02547801472246647, 0, 0.001788847963325679, 0, 0, 0, 0, 0, 0.00373588060028851, -0.01926009356975555, 0.00281954649835825, -0.0267659667879343,
        0, 0, 0, 0, 0, -0.007718939334154129, 0, 0, 0, 0.004074764903634787, 0.009394717402756214, 0, 0, 0.007368015125393867, 0, -0.02614656090736389, 0, 0.002687284490093589, 0, -0.04229016229510307, 0, 0.004001504275947809, 0, 0.003058062866330147, 0, 0, 0, 0, 0, 0.005374516360461712, 0.001371877850033343, -0.001985758077353239, 0, -0.02291243709623814, 0, 0, 0, 0.004428758285939693, 0, -0.02528391778469086, 0, 0, 0, 0, 0, -0.007243246305733919, 0.02457966096699238, 0.01269108802080154, 0, 0.006703823804855347, 0, 0.02395307831466198, 0, 0, 0.008123394101858139, -0.02483955025672913, 0, 0, 0, 0, 0, 0.009034824557602406, 0, -0.03731964901089668,
        0, 0, 0, 0, 0, 0.02274608798325062, 0, -0.006146733649075031, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.006032394245266914, -0.01370700169354677, -0.005169839598238468, 0.0006216451874934137, 0, 0, 0, -0.01992705650627613, 0, -0.03186851739883423, 0.02211786806583405, 0.02986159548163414, 0, -0.01257159654051065, 0, -0.01228857506066561, 0, -0.02461433038115501, 0, 0.005663272924721241, 0, -0.01799053885042667, 0, 0, 0, -0.01094915065914392, 0, -0.03625892475247383, 0, 0, 0, -0.01758498325943947, 0, 0.005318508017808199, 0.01133203413337469, -0.001624785363674164, 0, -0.0160207636654377, 0, 0.0006420225254260004,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.02046793699264526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01742580905556679, 0, -0.005270129069685936, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02615058422088623, 0, -0.01018640585243702, 0, -0.001790417823940516, 0, 0, 0, 0, 0, -0.005531102884560823, 0, 0.03457538783550262, 0,
        0, 0, 0, -0.01584688574075699, 0, -0.004000301007181406, 0, 0, 0, 0.004670551978051662, 0.00998134259134531, 0.005025638733059168, 0, 0, 0, -0.01472627837210894, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01323047466576099, 0.02008195780217648, -0.002398384967818856, 0, 0, 0, -0.01939132250845432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02068477496504784, 0, 0, 0, -0.008524994365870953, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.002170398132875562, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0.005139893386512995, 0, 0, 0, 0.01056296098977327, 0, 0, 0, 0.001125605893321335, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.005433664657175541, 0, 0, -0.004502085503190756, 0.006443063728511333, 0, 0, 0, -0.03359655290842056, 0, 0, 0, 0, 0, 0, -0.01589789241552353, -0.01140952110290527, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.03811754658818245, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.03023166581988335, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.004625103902071714, 0, 0, 0, 0, 0, 0, 0, -0.01430562604218721, 0, 0, 0, -0.01311699859797955, 0, -0.02023688703775406, 0.0192133653908968, 0.003406276227906346, 0, 0, 0, 0, 0, 0, 0, -0.004051178228110075, 0, -0.002456918824464083, 0, 0, 0, 0.01200850214809179, 0.007126358803361654, -0.001668764860369265,
        0, 0, 0, 0, 0, 0, 0, -0.01287283562123775, 0, -0.002210844308137894, 0, 0, 0, -0.003418919630348682, 0.004423678852617741, -0.00564582459628582, 0, 0, 0, 0, 0, 0, 0, -0.003645426593720913, 0, 0, 0, -0.01180325541645288, 0, 0, 0.01427577622234821, 0.0006297251675277948, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0.004286466166377068, 0, 0, 0, -0.01493893004953861, 0, 0, 0, -0.02081316150724888, 0, -0.001989415381103754, 0, 0.003001046599820256, 0, 0, 0, 0, 0, 0, 0, 0.00162522797472775, 0, 0, 0, 0.0001232036593137309, 0, 0, 0.003980621695518494, 0.003597465576604009, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02736678346991539, 0, -0.008452505804598331, 0.0114161716774106, 0.01244105119258165, 0, -0.0179080069065094, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.006976370234042406, 0, 0, 0, -0.001269038766622543, 0, 0,
        0.001733268494717777, 0, 0, 0, 0, 0, 0, 0, -0.009498989209532738, 0, 0.01980731822550297, 0, -0.004691865760833025, 0, -0.001195060438476503, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01254497747868299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01463546324521303, 0, 0, 0,
        0, 0, -0.003767166752368212, 0.005567104555666447, 0, 0, 0, 0.004769130144268274, 0, 0, -0.0008294889703392982, 0, 0, 0, 0.003547092899680138, 0, -0.001670471974648535, 0.01483552809804678, -0.01653953641653061, 0, -0.004379804246127605, -0.000617214769590646, -0.0006323676789179444, -0.01059944555163383, 0.005598830990493298, 0.001559674274176359, 0.0007751876837573946, -0.018758499994874, -0.009758154861629009, 0, 0, 0, 0, 0, 0.009806215763092041, -5.078627145849168e-05, 0, 0, 0, 0.01553952042013407, 0, 0, -0.003376028966158628, -2.309098454134073e-05, 0, 0, 0.003607847029343247, 0, 0.007823695428669453, 0.01272412948310375, -0.03273601457476616, 0.005543493665754795, -0.02839321084320545, -0.007486246526241302, 0, 0, -0.001551265246234834, 0.007021114230155945, -0.04359285905957222, 0.02442231401801109, 0.02600440569221973, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01718804240226746, 0, -0.006163921672850847, 0, 0.01654910854995251, 0, 0, 0, 0, 0, 0, 0, 0.01123766787350178, 0, 0, 0, 0.007223800756037235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.008463663980364799, 0, -0.002391571179032326, 0, -0.0005999922286719084, 0,
        0, 0, 0.002020813291892409, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.005120484624058008, 0, 0, 0, 0, 0, 0, 0, -0.005842636339366436, 0, 0.005525544751435518, 0, -0.00151088391430676, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01148336473852396, 0, 0, 0, 0, 0,
        0.0005501126288436353, -2.503635187167674e-05, 0.01689113490283489, 0, 0.0003551958070602268, -0.01648887246847153, -0.004475901834666729, 0, 0, -0.01078520342707634, 0.0006215377943590283, -0.002523933304473758, 0, 0, -4.318933497415856e-05, 0, 0.00435300637036562, 0.001545782666653395, 0.002797331195324659, 0, 0, 0, 0.004139279946684837, 0, -0.0009509211522527039, 0.004502885043621063, -0.003655120730400085, 0, 0, 0, 0.003458107821643353, 0, 0, 0, -0.01413300074636936, 0, 0, 0, 0, 0, 0, 0, 0.003691486082971096, 0, 0, 0, 0, 0, 0, 0, -0.0009275913471356034, 0, 0, 0, 0, 0, 0.001876638038083911, 0, 0.001803940278477967, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0.001037049689330161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.009412280283868313, 0, 0, 0.01085207611322403, 0.00206859759055078, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01432360429316759, 0, 0, 0, 0, 0, 0, 0, 0.0008392476011067629, 0, 0, 0, 0.004185069352388382, 0, 0, -0.006643124856054783, 0.002848801435902715, -0.001289240666665137, -0.01317370496690273,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01307966373860836, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.535279241390526e-05, 0, 0, 0, 0, 0, 0, 0, -0.0259930994361639, 0, 0, 0, 0, -0.001160115702077746, -0.00590062839910388, -0.01259010564535856, -0.002248737029731274, 0, 0, 0, 0.01680596917867661, 0, 0, 0, 0.003655622713267803, 0, 0, 0, 0, 0, 0, 0.01102581713348627, 0.0008109323098324239, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, -0.00231001153588295, 0, 0, 0, 0, 0, 0.0104571059346199, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01262239459902048, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.004798572976142168, 0, 0, 0, -0.003466296009719372, -0.02338974177837372, 0.01007673982530832, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003289492335170507, -0.001489599118940532, 0, 0, 0, 0, 0, 0, 0, 0,
        0.005301790311932564, 0, 0, 0, 0, 0, -0.004799652379006147, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005472061689943075, 0, 0, 0, 0.009550963528454304, 0, -0.002378931036219001, 0, -0.004244956187903881, 0, -0.009398682042956352, 0, 0.008745159953832626, 0, -0.01497662719339132, 0, 0.003935978747904301, 0, 0, 0, 0.002824816852807999, -0.003020059550181031, -0.008112883195281029, -0.01624989882111549, 0.003236265853047371, 0, 0, 0, 0, 0, 0, 0, -0.002389962552115321, 0.002383831655606627, 0.005564420484006405, 0.009293172508478165, 0.004116393160074949, 0.0008492706692777574, -0.001228451263159513, 0.003197707468643785, 0, 0, -0.0004634180804714561, 0, 0.004614322446286678, 0, 0, 0,
        0, 0, -0.008457349613308907, 0.006233833264559507, 0, 0.009648031555116177, 0, -0.01027065142989159, 0, 0, 0, 0.006571092642843723, 0, 0, 0, -0.004498523660004139, 0, 0, 0, -0.009252867661416531, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01379481144249439, 0, 0, 0, -0.008755522780120373, 0, 0, -0.002473230706527829, 0.001634430722333491, 0, 0, 0, 0.002360122976824641, 0, 0, 0, 0, 0, 0, 0, -0.001572453998960555, 0, 0, 0, -0.002192688407376409, 0, 0, 0, 0,
        -0.007537443656474352, 0, 0.00134933611843735, -0.01302607916295528, -0.001414963626302779, -0.003959310241043568, -0.006539252121001482, 0.00193690147716552, 0, 0, 0, 0, 0, 0, 0.001522190170362592, 0, 0, 0, 0.001803838065825403, 0, 0.01719522662460804, 0, -0.003027968341484666, -0.001973073231056333, 0, 0, 0, 0.008304032497107983, -0.02154844254255295, 0, 0, 0.0005620296578854322, 0.0008571429061703384, -0.000926949258428067, 0.01012593042105436, 0, -0.01050555892288685, 0, 0.002890965202823281, 0.003239197190850973, 0, 0.0009146727970801294, -0.001179737504571676, 0, 0.01844048500061035, -0.0003584979858715087, 0.002297908999025822, -0.005822720006108284, 0, 0, 0, -0.007878607138991356, -0.005282885860651731, 0.01855233684182167, -0.01727291941642761, 0.01771031133830547, 0, 0, 0, 0, 0, 0.002253084210678935, -0.005008375737816095, 0.008914461359381676,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003338969545438886, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01939024217426777, 0, 0, 0, 0, 0, 0, 0, -0.007696145679801702, 0, 0, 0, 0, 0, 0.005356818437576294, 0, 0.002573968376964331, 0, 0, 0, 0.009680358693003654, -0.005504757165908813, 0.0007029736298136413, 0, 0.005723221693187952, 0, 0, 0, -0.01186873484402895, 0.007153233978897333, -0.004614725708961487, 0.008400975726544857, 0.00888105109333992, 0, 0, 0, 0.01044219452887774, -0.002727305516600609, -0.008845078758895397,
        0.007559569086879492, 0.002223454881459475, 0, 0, 0, 0.008498490788042545, 0, 0, 0, -0.01147664338350296, 0, 0, 0, 0.01480917725712061, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003240773221477866, -0.0001833109126891941, 0, 0, 0, 0.0008049369207583368, -0.002586409915238619, -0.00258547393605113, 0, 0.004162928089499474, 0, 0, 0, 0, -0.002760590519756079, 0.0008737124153412879, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -0.009917843155562878, -0.000901169260032475, 0.001247130800038576, 0, 6.435985415009782e-05, 0, -0.003960501868277788, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.001871480140835047, -0.001896787551231682, 0, 0, 0, -0.006608968134969473, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.005394341889768839, 0, 0, 0, 0, 0.000950864574406296, 0, 0, -0.003690864192321897, 0.004683107603341341, 0, 0, 0, -0.01124089118093252, 0, 0, 0, 0.0003707870200742036, 0, 0, 0, 0, 0, 0, 0, 0.01423163432627916, 0, 0, 0, 0.00795288011431694,
        0, 8.945041918195784e-05, 0, 5.791252260678448e-05, 0, 0, 0, 0, 0, -0.003427706426009536, -0.0009335157810710371, -0.00513123394921422, 0, 0, 0, 0.01672862470149994, 0, 0, 0, -0.001013539964333177, 0, 0, 0, 0, 0, 0, 0.005092237610369921, 0.0006590898265130818, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.008196642622351646, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005947042256593704, 0, 0, 0, -0.001233348273672163,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.006264440715312958, 0, 0, 0, -0.00286157475784421, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0001637621171539649, 0, 0, 0, 0, 0, 0, 0, -0.004905905574560165, 0, -0.01127437874674797, 0, 0.001054862979799509, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.007375700864940882, 0, 0, 0, 0, 0,
        0, 0, -0.001984681002795696, 0, 0, 0, 0.006636980455368757, 0, 0, 0, -0.000694087240844965, 0, 0, 0, 0, 0, -0.01093307416886091, 0, 0.008873075246810913, -0.006158945150673389, 0, 0, -0.01447643991559744, -2.51591409323737e-05, 0, 0, -0.001101096393540502, 0, -5.353669985197484e-05, 0, 0.007152211386710405, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.001338972127996385, -0.0198125783354044, 0, 0, 0, -0.006008380558341742, 0, 0, 0, 0.01102386508136988, 0, 0, 0, 0.002549398690462112, 0,
        0.0004272043879609555, -0.001036049681715667, 0, 0, -0.002501323586329818, -0.0006136979791335762, 0, 9.197608960676007e-06, 0.01462037768214941, 0.00314620672725141, 0, 0, -0.003829227993264794, 0.005173168610781431, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.004078742116689682, 0, 0, 0, 0.001845600898377597, 0, 0, -0.003812777111306787, 0, 0.004783340729773045, 0.0003153723373543471, -2.263930764456745e-05, 0, -0.001683353213593364, -0.003922771662473679, -0.0002186121710110456, 0, -0.004088100977241993, 0, 0.003146209986880422, 0.01147977728396654, -0.007551674265414476, 0.008242463693022728, 0, 0, 0, 0, 0, 0, 0.006105490028858185, 0, 0, 0, 0, 0, -0.009838064201176167, 0, 3.397263935767114e-05, -0.00271971826441586,
        0.002978211734443903, 0, -0.006145736668258905, 0.01711759902536869, 0, 0, 0.005924250464886427, 0, 0, 0, 0.01861677877604961, 0, 0, 0, -0.007276254706084728, 0, 0, 0, -0.005236800294369459, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.001650616293773055, 0, -0.001895346562378109, -0.0002303486835444346, -0.001243796898052096, 0, 0.002447541104629636, 0.0005965330055914819, 0.000440859905211255, 0.005046395119279623, -0.009703181684017181, 0, 0, 0, 0.01316391956061125, 0, 0, 0.003863960970193148, -0.002024281769990921, 0.001974559854716063, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    ]
    scale = 1
    bias = 0.7821782231
    model_ctrs = catboost_model_ctrs_container(
        used_model_ctrs_count = 28,
        compressed_model_ctrs = [
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [3],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130472, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [4],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471473, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471473, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471473, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130479, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [5],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130478, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [6],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471475, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471475, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471475, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130477, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [7],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130476, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [8],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130483, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [10],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471471, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471471, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471471, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130481, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            )
        ],
        ctr_data = catboost_ctr_data(
            learn_ctrs = {
                768791580653471469 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 8473802870189803490 : 0, 7071392469244395075 : 2, 18446744073709551615 : 0, 8806438445905145973 : 3, 619730330622847022 : 1, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.94273e-44, count = 61), catboost_ctr_mean_history(sum = 0, count = 12), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 0, count = 1)],
                    ctr_total = [21, 61, 0, 12, 1, 5, 0, 1]
                ),
                768791580653471471 :
                catboost_ctr_value_table(
                    index_hash_viewer = {2136296385601851904 : 0, 7428730412605434673 : 2, 9959754109938180626 : 6, 14256903225472974739 : 1, 8056048104805248435 : 3, 18446744073709551615 : 0, 12130603730978457510 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10789443546307262781 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.8026e-44, count = 73), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0)],
                    ctr_total = [20, 73, 0, 1, 0, 2, 0, 2, 0, 1, 1, 0, 1, 0]
                ),
                768791580653471472 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 13987540656699198946 : 3, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18089724839685297862 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10353740403438739754 : 1, 3922001124998993866 : 2, 13686716744772876732 : 4, 18293943161539901837 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 0, count = 13), catboost_ctr_mean_history(sum = 3.08286e-44, count = 20), catboost_ctr_mean_history(sum = 0, count = 37), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 0, count = 3)],
                    ctr_total = [0, 13, 22, 20, 0, 37, 0, 2, 0, 4, 0, 3]
                ),
                768791580653471473 :
                catboost_ctr_value_table(
                    index_hash_viewer = {7537614347373541888 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5903587924673389870 : 2, 18278593470046426063 : 6, 10490918088663114479 : 3, 18446744073709551615 : 0, 407784798908322194 : 7, 5726141494028968211 : 1, 1663272627194921140 : 10, 8118089682304925684 : 8, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 15431483020081801594 : 9, 18446744073709551615 : 0, 18446744073709551615 : 0, 1403990565605003389 : 5, 3699047549849816830 : 11, 14914630290137473119 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 9.80909e-45, count = 3), catboost_ctr_mean_history(sum = 1.4013e-45, count = 3), catboost_ctr_mean_history(sum = 5.60519e-45, count = 24), catboost_ctr_mean_history(sum = 0, count = 3), catboost_ctr_mean_history(sum = 5.60519e-45, count = 16), catboost_ctr_mean_history(sum = 4.2039e-45, count = 16), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 0, count = 5), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 0, count = 3), catboost_ctr_mean_history(sum = 2.8026e-45, count = 0)],
                    ctr_total = [7, 3, 1, 3, 4, 24, 0, 3, 4, 16, 3, 16, 0, 4, 0, 5, 1, 1, 0, 1, 0, 3, 2, 0]
                ),
                768791580653471474 :
                catboost_ctr_value_table(
                    index_hash_viewer = {3607388709394294015 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18356215166324018775 : 2, 18365206492781874408 : 1, 18446744073709551615 : 0, 18446744073709551615 : 0, 14559146096844143499 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 11416626865500250542 : 3, 5549384008678792175 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 0, count = 22), catboost_ctr_mean_history(sum = 2.8026e-45, count = 3), catboost_ctr_mean_history(sum = 0, count = 14), catboost_ctr_mean_history(sum = 2.66247e-44, count = 17), catboost_ctr_mean_history(sum = 0, count = 22), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1)],
                    ctr_total = [0, 22, 2, 3, 0, 14, 19, 17, 0, 22, 1, 1]
                ),
                768791580653471475 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 14452488454682494753 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 1388452262538353895 : 9, 8940247467966214344 : 1, 4415016594903340137 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 41084306841859596 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 8678739366408346384 : 2, 18446744073709551615 : 0, 4544226147037566482 : 11, 14256903225472974739 : 8, 16748601451484174196 : 7, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5913522704362245435 : 6, 1466902651052050075 : 10, 2942073219785550491 : 12, 15383677753867481021 : 3, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 8.40779e-45, count = 10), catboost_ctr_mean_history(sum = 2.8026e-45, count = 8), catboost_ctr_mean_history(sum = 0, count = 6), catboost_ctr_mean_history(sum = 2.8026e-45, count = 14), catboost_ctr_mean_history(sum = 1.4013e-45, count = 4), catboost_ctr_mean_history(sum = 2.8026e-45, count = 9), catboost_ctr_mean_history(sum = 0, count = 11), catboost_ctr_mean_history(sum = 0, count = 3), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 9.80909e-45, count = 6), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0), catboost_ctr_mean_history(sum = 0, count = 1)],
                    ctr_total = [6, 10, 2, 8, 0, 6, 2, 14, 1, 4, 2, 9, 0, 11, 0, 3, 1, 5, 7, 6, 0, 2, 1, 0, 0, 1]
                ),
                768791580653471478 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 15379737126276794113 : 5, 18446744073709551615 : 0, 14256903225472974739 : 3, 18048946643763804916 : 1, 2051959227349154549 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 7024059537692152076 : 6, 18446744073709551615 : 0, 15472181234288693070 : 2, 8864790892067322495 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.4013e-44, count = 58), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 1.4013e-45, count = 6), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 4.2039e-45, count = 6), catboost_ctr_mean_history(sum = 2.8026e-45, count = 0), catboost_ctr_mean_history(sum = 7.00649e-45, count = 0)],
                    ctr_total = [10, 58, 0, 4, 1, 6, 1, 5, 3, 6, 2, 0, 5, 0]
                ),
                11154939068695130472 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 15379737126276794113 : 5, 18446744073709551615 : 0, 14256903225472974739 : 3, 18048946643763804916 : 1, 2051959227349154549 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 7024059537692152076 : 6, 18446744073709551615 : 0, 15472181234288693070 : 2, 8864790892067322495 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 9.52883e-44, count = 4), catboost_ctr_mean_history(sum = 9.80909e-45, count = 6), catboost_ctr_mean_history(sum = 1.26117e-44, count = 2)],
                    ctr_total = [68, 4, 7, 6, 9, 2, 5]
                ),
                11154939068695130476 :
                catboost_ctr_value_table(
                    index_hash_viewer = {3607388709394294015 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18356215166324018775 : 2, 18365206492781874408 : 1, 18446744073709551615 : 0, 18446744073709551615 : 0, 14559146096844143499 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 11416626865500250542 : 3, 5549384008678792175 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 3.08286e-44, count = 5), catboost_ctr_mean_history(sum = 1.96182e-44, count = 36), catboost_ctr_mean_history(sum = 3.08286e-44, count = 2)],
                    ctr_total = [22, 5, 14, 36, 22, 2]
                ),
                11154939068695130477 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 14452488454682494753 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 1388452262538353895 : 9, 8940247467966214344 : 1, 4415016594903340137 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 41084306841859596 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 8678739366408346384 : 2, 18446744073709551615 : 0, 4544226147037566482 : 11, 14256903225472974739 : 8, 16748601451484174196 : 7, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5913522704362245435 : 6, 1466902651052050075 : 10, 2942073219785550491 : 12, 15383677753867481021 : 3, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.24208e-44, count = 10), catboost_ctr_mean_history(sum = 8.40779e-45, count = 16), catboost_ctr_mean_history(sum = 7.00649e-45, count = 11), catboost_ctr_mean_history(sum = 1.54143e-44, count = 3), catboost_ctr_mean_history(sum = 8.40779e-45, count = 13), catboost_ctr_mean_history(sum = 2.8026e-45, count = 1)],
                    ctr_total = [16, 10, 6, 16, 5, 11, 11, 3, 6, 13, 2, 1, 1]
                ),
                11154939068695130478 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 13987540656699198946 : 3, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18089724839685297862 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10353740403438739754 : 1, 3922001124998993866 : 2, 13686716744772876732 : 4, 18293943161539901837 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.82169e-44, count = 42), catboost_ctr_mean_history(sum = 5.1848e-44, count = 2), catboost_ctr_mean_history(sum = 5.60519e-45, count = 3)],
                    ctr_total = [13, 42, 37, 2, 4, 3]
                ),
                11154939068695130479 :
                catboost_ctr_value_table(
                    index_hash_viewer = {7537614347373541888 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5903587924673389870 : 2, 18278593470046426063 : 6, 10490918088663114479 : 3, 18446744073709551615 : 0, 407784798908322194 : 7, 5726141494028968211 : 1, 1663272627194921140 : 10, 8118089682304925684 : 8, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 15431483020081801594 : 9, 18446744073709551615 : 0, 18446744073709551615 : 0, 1403990565605003389 : 5, 3699047549849816830 : 11, 14914630290137473119 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.4013e-44, count = 4), catboost_ctr_mean_history(sum = 3.92364e-44, count = 3), catboost_ctr_mean_history(sum = 2.8026e-44, count = 19), catboost_ctr_mean_history(sum = 5.60519e-45, count = 5), catboost_ctr_mean_history(sum = 2.8026e-45, count = 1), catboost_ctr_mean_history(sum = 4.2039e-45, count = 2)],
                    ctr_total = [10, 4, 28, 3, 20, 19, 4, 5, 2, 1, 3, 2]
                ),
                11154939068695130481 :
                catboost_ctr_value_table(
                    index_hash_viewer = {2136296385601851904 : 0, 7428730412605434673 : 2, 9959754109938180626 : 6, 14256903225472974739 : 1, 8056048104805248435 : 3, 18446744073709551615 : 0, 12130603730978457510 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10789443546307262781 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.30321e-43, count = 1), catboost_ctr_mean_history(sum = 2.8026e-45, count = 2), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1)],
                    ctr_total = [93, 1, 2, 2, 1, 1, 1]
                ),
                11154939068695130483 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 8473802870189803490 : 0, 7071392469244395075 : 2, 18446744073709551615 : 0, 8806438445905145973 : 3, 619730330622847022 : 1, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.14906e-43, count = 12), catboost_ctr_mean_history(sum = 8.40779e-45, count = 1)],
                    ctr_total = [82, 12, 6, 1]
                )
            }
        )
    )


### Routines to compute CTRs

def calc_hash(a, b):
    max_int = 0xffFFffFFffFFffFF
    MAGIC_MULT = 0x4906ba494954cb65
    return (MAGIC_MULT * ((a + MAGIC_MULT * b) & max_int)) & max_int


def calc_hashes(binarized_features, hashed_cat_features, transposed_cat_feature_indexes, binarized_feature_indexes):
    result = 0
    for cat_feature_index in transposed_cat_feature_indexes:
        result = calc_hash(result, hashed_cat_features[cat_feature_index])
    for bin_feature_index in binarized_feature_indexes:
        binary_feature = binarized_features[bin_feature_index.bin_index]
        if not(bin_feature_index.check_value_equal):
            result = calc_hash(result, 1 if (binary_feature >= bin_feature_index.value) else 0)
        else:
            result = calc_hash(result, 1 if (binary_feature == bin_feature_index.value) else 0)
    return result


def calc_ctrs(model_ctrs, binarized_features, hashed_cat_features, result):
    ctr_hash = 0
    result_index = 0

    for i in range(len(model_ctrs.compressed_model_ctrs)):
        proj = model_ctrs.compressed_model_ctrs[i].projection
        ctr_hash = calc_hashes(binarized_features, hashed_cat_features, proj.transposed_cat_feature_indexes, proj.binarized_indexes)
        for j in range(len(model_ctrs.compressed_model_ctrs[i].model_ctrs)):
            ctr = model_ctrs.compressed_model_ctrs[i].model_ctrs[j]
            learn_ctr = model_ctrs.ctr_data.learn_ctrs[ctr.base_hash]
            ctr_type = ctr.base_ctr_type
            bucket = learn_ctr.resolve_hash_index(ctr_hash)
            if bucket is None:
                result[result_index] = ctr.calc(0, 0)
            else:
                if ctr_type == "BinarizedTargetMeanValue" or ctr_type == "FloatTargetMeanValue":
                    ctr_mean_history = learn_ctr.ctr_mean_history[bucket]
                    result[result_index] = ctr.calc(ctr_mean_history.sum, ctr_mean_history.count)
                elif ctr_type == "Counter" or ctr_type == "FeatureFreq":
                    ctr_total = learn_ctr.ctr_total
                    denominator = learn_ctr.counter_denominator
                    result[result_index] = ctr.calc(ctr_total[bucket], denominator)
                elif ctr_type == "Buckets":
                    ctr_history = learn_ctr.ctr_total
                    target_classes_count = learn_ctr.target_classes_count
                    total_count = 0
                    good_count = ctr_history[bucket * target_classes_count + ctr.target_border_idx];
                    for class_id in range(target_classes_count):
                        total_count += ctr_history[bucket * target_classes_count + class_id]
                    result[result_index] = ctr.calc(good_count, total_count)
                else:
                    ctr_history = learn_ctr.ctr_total;
                    target_classes_count = learn_ctr.target_classes_count;

                    if target_classes_count > 2:
                        good_count = 0
                        total_count = 0
                        for class_id in range(ctr.target_border_idx + 1):
                            total_count += ctr_history[bucket * target_classes_count + class_id]
                        for class_id in range(ctr.target_border_idx + 1, target_classes_count):
                            good_count += ctr_history[bucket * target_classes_count + class_id]
                        total_count += good_count;
                        result[result_index] = ctr.calc(good_count, total_count);
                    else:
                        result[result_index] = ctr.calc(ctr_history[bucket * 2 + 1], ctr_history[bucket * 2] + ctr_history[bucket * 2 + 1])
            result_index += 1



cat_features_hashes = {
    "Female": -2114564283,
    "Protective-serv": -2075156126,
    "Assoc-voc": -2029370604,
    "Married-civ-spouse": -2019910086,
    "Federal-gov": -1993066135,
    "Transport-moving": -1903253868,
    "Farming-fishing": -1888947309,
    "Prof-school": -1742589394,
    "Self-emp-inc": -1732053524,
    "?": -1576664757,
    "Handlers-cleaners": -1555793520,
    "0": -1438285038,
    "Philippines": -1437257447,
    "Male": -1291328762,
    "11th": -1209300766,
    "Unmarried": -1158645841,
    "Local-gov": -1105932163,
    "Divorced": -993514283,
    "Some-college": -870577664,
    "Asian-Pac-Islander": -787966085,
    "Sales": -760428919,
    "Self-emp-not-inc": -661998850,
    "Widowed": -651660490,
    "Masters": -453513993,
    "State-gov": -447941100,
    "Doctorate": -434936054,
    "White": -218697806,
    "Own-child": -189887997,
    "Amer-Indian-Eskimo": -86031875,
    "Exec-managerial": -26537793,
    "Husband": 60472414,
    "Italy": 117615621,
    "Not-in-family": 143014663,
    "n": 239748506,
    "Married-spouse-absent": 261588508,
    "Prof-specialty": 369959660,
    "Assoc-acdm": 475479755,
    "Adm-clerical": 495735304,
    "Bachelors": 556725573,
    "HS-grad": 580496350,
    "Craft-repair": 709691013,
    "Other-relative": 739168919,
    "Other-service": 786213683,
    "9th": 840896980,
    "Separated": 887350706,
    "10th": 888723975,
    "Mexico": 972041323,
    "Hong": 995245846,
    "1": 1121341681,
    "Tech-support": 1150039955,
    "Black": 1161225950,
    "Canada": 1510821218,
    "Wife": 1708186408,
    "United-States": 1736516096,
    "Never-married": 1959200218,
    "Machine-op-inspct": 2039859473,
    "7th-8th": 2066982375,
    "Private": 2084267031,
}

def hash_uint64(string):
    return cat_features_hashes.get(str(string), 0x7fFFffFF)


### Applicator for the CatBoost model

def apply_catboost_model(float_features, cat_features=[], ntree_start=0, ntree_end=catboost_model.tree_count):
    """
    Applies the model built by CatBoost.

    Parameters
    ----------

    float_features : list of float features

    cat_features : list of categorical features
        You need to pass float and categorical features separately in the same order they appeared in train dataset.
        For example if you had features f1,f2,f3,f4, where f2 and f4 were considered categorical, you need to pass here float_features=f1,f3, cat_features=f2,f4


    Returns
    -------
    prediction : formula value for the model and the features

    """
    if ntree_end == 0:
        ntree_end = catboost_model.tree_count
    else:
        ntree_end = min(ntree_end, catboost_model.tree_count)

    model = catboost_model

    assert len(float_features) >= model.float_feature_count
    assert len(cat_features) >= model.cat_feature_count

    # Binarise features
    binary_features = [0] * model.binary_feature_count
    binary_feature_index = 0

    for i in range(len(model.float_feature_borders)):
        for border in model.float_feature_borders[i]:
            binary_features[binary_feature_index] += 1 if (float_features[model.float_features_index[i]] > border) else 0
        binary_feature_index += 1
    transposed_hash = [0] * model.cat_feature_count
    for i in range(model.cat_feature_count):
        transposed_hash[i] = hash_uint64(cat_features[i])

    if len(model.one_hot_cat_feature_index) > 0:
        cat_feature_packed_indexes = {}
        for i in range(model.cat_feature_count):
            cat_feature_packed_indexes[model.cat_features_index[i]] = i
        for i in range(len(model.one_hot_cat_feature_index)):
            cat_idx = cat_feature_packed_indexes[model.one_hot_cat_feature_index[i]]
            hash = transposed_hash[cat_idx]
            for border_idx in range(len(model.one_hot_hash_values[i])):
                binary_features[binary_feature_index] |= (1 if hash == model.one_hot_hash_values[i][border_idx] else 0) * (border_idx + 1)
            binary_feature_index += 1

    if hasattr(model, 'model_ctrs') and model.model_ctrs.used_model_ctrs_count > 0:
        ctrs = [0.] * model.model_ctrs.used_model_ctrs_count;
        calc_ctrs(model.model_ctrs, binary_features, transposed_hash, ctrs)
        for i in range(len(model.ctr_feature_borders)):
            for border in model.ctr_feature_borders[i]:
                binary_features[binary_feature_index] += 1 if ctrs[i] > border else 0
            binary_feature_index += 1

    # Extract and sum values from trees
    result = 0.
    tree_splits_index = 0
    current_tree_leaf_values_index = 0
    for tree_id in range(ntree_start, ntree_end):
        current_tree_depth = model.tree_depth[tree_id]
        index = 0
        for depth in range(current_tree_depth):
            border_val = model.tree_split_border[tree_splits_index + depth]
            feature_index = model.tree_split_feature_index[tree_splits_index + depth]
            xor_mask = model.tree_split_xor_mask[tree_splits_index + depth]
            index |= ((binary_features[feature_index] ^ xor_mask) >= border_val) << depth
        result += model.leaf_values[current_tree_leaf_values_index + index]
        tree_splits_index += current_tree_depth
        current_tree_leaf_values_index += (1 << current_tree_depth)
    return model.scale * result + model.bias



