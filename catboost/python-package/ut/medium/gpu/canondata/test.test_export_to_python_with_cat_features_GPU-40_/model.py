### Types to hold CTR's data

class catboost_model_ctr(object):
    def __init__(self, base_hash, base_ctr_type, target_border_idx, prior_num, prior_denom, shift, scale):
        self.base_hash = base_hash
        self.base_ctr_type = base_ctr_type
        self.target_border_idx = target_border_idx
        self.prior_num = prior_num
        self.prior_denom = prior_denom
        self.shift = shift
        self.scale = scale

    def calc(self, count_in_class, total_count):
        ctr = (count_in_class + self.prior_num) / float(total_count + self.prior_denom)
        return (ctr + self.shift) * self.scale


class catboost_bin_feature_index_value(object):
    def __init__(self, bin_index, check_value_equal, value):
        self.bin_index = bin_index
        self.check_value_equal = check_value_equal
        self.value = value


class catboost_ctr_mean_history(object):
    def __init__(self, sum, count):
        self.sum = sum
        self.count = count


class catboost_ctr_value_table(object):
    def __init__(self, index_hash_viewer, target_classes_count, counter_denominator, ctr_mean_history, ctr_total):
        self.index_hash_viewer = index_hash_viewer
        self.target_classes_count = target_classes_count
        self.counter_denominator = counter_denominator
        self.ctr_mean_history = ctr_mean_history
        self.ctr_total = ctr_total

    def resolve_hash_index(self, hash):
        try:
            return self.index_hash_viewer[hash]
        except KeyError:
            return None


class catboost_ctr_data(object):
    def __init__(self, learn_ctrs):
        self.learn_ctrs = learn_ctrs


class catboost_projection(object):
    def __init__(self, transposed_cat_feature_indexes, binarized_indexes):
        self.transposed_cat_feature_indexes = transposed_cat_feature_indexes
        self.binarized_indexes = binarized_indexes


class catboost_compressed_model_ctr(object):
    def __init__(self, projection, model_ctrs):
        self.projection = projection
        self.model_ctrs = model_ctrs


class catboost_model_ctrs_container(object):
    def __init__(self, used_model_ctrs_count, compressed_model_ctrs, ctr_data):
        self.used_model_ctrs_count = used_model_ctrs_count
        self.compressed_model_ctrs = compressed_model_ctrs
        self.ctr_data = ctr_data


###  Model data
class catboost_model(object):
    float_features_index = [
        0, 1, 2, 3, 4, 5,
    ]
    float_feature_count = 6
    cat_feature_count = 11
    binary_feature_count = 34
    tree_count = 40
    float_feature_borders = [
        [30.5, 33.5, 36.5, 38.5, 41.5, 45.5, 50, 52.5, 53.5, 58.5, 60.5, 61.5],
        [51773, 71939, 119180.5, 122181, 159204.5, 173910, 215992, 243690.5, 281044.5, 313025.5, 318173.5, 337225.5, 380248],
        [4.5, 9.5, 10.5, 12.5, 13.5, 15.5],
        [1087, 3280, 5842],
        [1881.5, 2189.5],
        [31.5, 42, 46.5]
    ]
    tree_depth = [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
    tree_split_border = [9, 3, 1, 11, 2, 255, 2, 3, 4, 2, 3, 3, 6, 5, 3, 4, 1, 1, 2, 1, 3, 3, 12, 255, 3, 2, 5, 1, 6, 11, 2, 5, 2, 1, 3, 255, 3, 9, 1, 12, 1, 1, 2, 5, 3, 2, 5, 4, 3, 4, 255, 4, 7, 2, 4, 3, 1, 5, 1, 2, 1, 2, 2, 1, 13, 5, 2, 5, 2, 2, 255, 3, 2, 10, 4, 3, 3, 2, 2, 6, 2, 5, 1, 4, 3, 2, 2, 4, 10, 4, 1, 2, 1, 4, 2, 2, 1, 2, 2, 255, 3, 4, 1, 1, 4, 2, 12, 1, 1, 4, 5, 3, 2, 4, 1, 1, 1, 2, 5, 3, 1, 2, 255, 5, 3, 3, 4, 2, 10, 4, 1, 3, 1, 1, 1, 5, 4, 8, 2, 1, 6, 3, 2, 3, 2, 1, 1, 6, 6, 7, 5, 2, 2, 7, 3, 4, 3, 1, 1, 9, 2, 3, 8, 2, 2, 2, 4, 3, 1, 3, 2, 6, 5, 4, 6, 2, 5, 2, 2, 4, 1, 2, 3, 1, 2, 3, 1, 1, 1, 3, 1, 4, 1, 1, 1, 2, 2, 1, 1, 1, 4, 2, 1, 11, 1, 2, 2, 1, 4, 3, 2, 8, 1, 6, 4, 5, 4, 4, 1, 5, 3, 1, 6, 3, 2, 3, 1, 3, 1, 1, 2, 1, 4, 2, 2, 1, 4, 1, 4, 5]
    tree_split_feature_index = [17, 7, 12, 0, 3, 6, 10, 15, 14, 16, 2, 10, 17, 0, 12, 7, 0, 31, 3, 18, 5, 2, 1, 6, 5, 26, 1, 7, 1, 1, 3, 16, 10, 30, 21, 6, 0, 0, 18, 0, 20, 11, 25, 8, 23, 3, 11, 17, 5, 29, 6, 12, 1, 7, 17, 2, 19, 24, 3, 30, 1, 10, 30, 15, 1, 11, 3, 2, 15, 14, 6, 8, 3, 0, 14, 25, 1, 2, 10, 0, 27, 12, 29, 10, 5, 17, 3, 10, 1, 14, 24, 11, 14, 32, 1, 5, 1, 22, 3, 6, 5, 9, 33, 30, 31, 10, 0, 14, 17, 7, 17, 14, 31, 2, 27, 16, 4, 2, 32, 11, 10, 3, 6, 14, 11, 13, 31, 5, 1, 25, 29, 9, 18, 5, 32, 21, 11, 1, 3, 9, 8, 32, 17, 5, 3, 9, 1, 0, 8, 0, 2, 3, 8, 17, 5, 10, 31, 23, 16, 1, 26, 13, 17, 2, 32, 12, 10, 22, 1, 14, 9, 2, 2, 16, 8, 22, 2, 3, 13, 23, 33, 3, 24, 26, 0, 17, 16, 23, 27, 3, 13, 22, 1, 22, 2, 3, 25, 16, 10, 1, 21, 4, 2, 0, 8, 3, 29, 21, 8, 16, 21, 0, 16, 14, 13, 17, 31, 24, 14, 2, 29, 31, 8, 32, 17, 7, 28, 15, 10, 25, 24, 16, 1, 23, 3, 1, 25, 18, 0, 21]
    tree_split_xor_mask = [0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    cat_features_index = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    one_hot_cat_feature_index = [9]
    one_hot_hash_values = [
        [-1291328762]
    ]
    ctr_feature_borders = [
        [0.272606373, 0.545212746, 0.599734068, 0.763297915],
        [0.151785716, 0.255357146, 0.514285684, 0.669642866, 0.773214281, 0.876785696],
        [0.25, 0.5, 0.850000024, 0.949999988],
        [0.0294117667, 0.0539215691, 0.0784313753, 0.377451003],
        [0.0572916679, 0.286458343, 0.34375, 0.458333343, 0.515625],
        [0.471354157, 0.604166627, 0.6484375, 0.692708313, 0.78125],
        [0.4375, 0.625, 0.8125, 0.887500048],
        [0.0147058833, 0.0245098043, 0.0735294148, 0.142156869, 0.191176474, 0.235294133],
        [0.243243247, 0.304054052, 0.608108103],
        [0.428716242, 0.471621633, 0.514527023, 0.729054093, 0.771959484],
        [0.512499988, 0.587499976, 0.625, 0.662500024, 0.700000048, 0.737500012, 0.774999976, 0.887500048, 0.925000072],
        [0.387254894],
        [0.461538464],
        [0.650240362],
        [0.5625, 0.59375, 0.75, 0.8125, 0.9375],
        [0.0147058833, 0.102941178, 0.117647067, 0.142156869],
        [0.357954532, 0.417613626, 0.596590877, 0.775568187],
        [0.284801126, 0.391335249, 0.551136374, 0.604403436, 0.657670498],
        [0.4375, 0.578125, 0.671875, 0.71875],
        [0.0931372568, 0.284313738],
        [0.6875, 0.744791687],
        [0.786458313],
        [0.7890625, 0.8125, 0.8359375, 0.8828125],
        [0.0882352963, 0.460784316],
        [0.734375, 0.786458373, 0.838541687, 0.890625],
        [0.75, 0.833333373, 0.854166687, 0.875, 0.895833373],
        [0.0147058833]
    ]

    ## Aggregated array of leaf values for trees. Each tree is represented by a separate line:
    leaf_values = [
        0, 0.01353435590863228, 0, 0, -0.04860064387321472, 0.01989140175282955, 0.02706871181726456, 0.04640350863337517, 0, 0, 0, 0, 0, 0.01353435590863228, 0, 0.01353435590863228, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.07776102423667908, 0, -0.1110871881246567, 0.03093567118048668, -0.0743706077337265, 0.03093567118048668, 0.001565957441926003, 0.04737024381756783, 0, 0, 0, 0, 0, 0, 0, 0.01353435590863228, -0.04860064387321472, 0, 0, 0, -0.04860064387321472, 0, -0.07776102423667908, 0, 0, 0, 0, 0, 0, 0, -0.07776102423667908, 0,
        0, 0, 0, 0, -0.07164837419986725, 0.01815537549555302, 0, 0, 0.01269339770078659, 0.01269339770078659, 0, 0.01967744715511799, -0.04397962614893913, -0.04376896470785141, 0.01229840517044067, 0.02540938183665276, -0.07147984951734543, -0.01883429102599621, 0, 0, -0.04558084532618523, 0, 0, 0, -0.04397962614893913, 0, 0, 0.011612169444561, 0, 0, 0.01699366234242916, 0.01269339770078659, 0, 0.02149929106235504, 0, 0, 0, 0.0107517447322607, 0, 0, 0, 0.0238001998513937, 0, 0.02826937846839428, 0, -0.00488687539473176, 0, 0.03665123879909515, 0, -0.06854229420423508, 0, 0, 0, -0.02553321979939938, 0, 0, 0, -0.08089414983987808, 0, 0.02661074884235859, 0, -0.02517644688487053, 0, 0.03481815010309219,
        -0.03972074761986732, 0.0198059156537056, 0, 0, 0, 0.01685547828674316, 0, 0, 0, 0, 0, 0, 0.02956910990178585, 0.01854407414793968, 0, 0, 0, 0.01013334468007088, -0.005267146974802017, -0.04481023550033569, 0, 0, -0.01800037175416946, 0, 0, 0.0108946505934, 0, 0.02127779275178909, -0.04218246042728424, 0.0135321794077754, 0, 0.008487645536661148, 0, 0, 0, 0, 0, 0.0284186452627182, 0, 0, 0.01687880046665668, 0.009958712384104729, 0, 0, 0.01276899874210358, 0.02940013818442822, 0, 0, 0, 0.01103994064033031, -0.09237541258335114, 0.01757311448454857, 0, 0, -0.09495656192302704, 0.02939811162650585, -0.05928899720311165, 0, -0.06427476555109024, 0.01426568347960711, -0.006768259685486555, 0.02090121619403362, -0.02686277218163013, 0.01910210587084293,
        0.0271725133061409, 0, -0.01889913342893124, 0, 0, 0, 0, 0, 0.02174133434891701, 0, -0.02433942630887032, 0, 0.01680103130638599, 0, 0, 0, 0.01221558451652527, 0, 0, 0, 0, 0, 0, 0, 0.01581220515072346, 0, 0.01583003625273705, 0, 0, 0, 0, 0, 0.02455779351294041, 0, 0.01278280559927225, -0.06333258002996445, 0.01286047045141459, 0, -0.07653650641441345, 0, 0.02670024894177914, 0, -0.05594469234347343, -0.07699777185916901, 0.01270182896405458, 0, -0.09948793798685074, -0.03684855252504349, 0.01957971416413784, 0, 0.01237877923995256, 0, 0, 0, 0.01814574189484119, 0, 0.007586757186800241, 0, 0.01965291798114777, 0, 0, 0, 0, 0,
        -0.07012240588665009, 0, -0.03920356184244156, -0.03281860426068306, 0, 0, 0, 0, 0.02349846251308918, 0.008268789388239384, 0.008025085553526878, -0.05641203373670578, 0.02126136980950832, 0.01158817112445831, -0.0347771979868412, 0, 0, 0, 0, 0, 0.01424131449311972, 0, -0.03614108264446259, -0.06047044321894646, 0, 0, 0, 0, 0.0214719120413065, 0.01425417885184288, 0.0006648594280704856, -0.07550123333930969, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01518234610557556, 0, -0.01227583363652229, 0, 0, 0, 0, 0, 0.02226235158741474, 0.006451442372053862, -0.01407393533736467, 0.01701825670897961,
        0, 0, 0, 0, 0.006654040422290564, 0, 0.005745456088334322, 0, 0, 0, 0.005144324153661728, 0, 0.01848965883255005, 0, 0.01669050939381123, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01821431331336498, 0, 0.0079136798158288, 0, -0.0002798112982418388, 0, 0.01448565069586039, 0, 0, 0, 0, 0, 0, 0, 0.00464654341340065, 0, -0.03389545530080795, -0.02625838667154312, 0, 0, -0.04589135199785233, -0.0726592168211937, 0.01237919460982084, 0, 0, 0, 0, 0, -0.03301381692290306, 0, 0.01101821567863226, 0, -0.06207684054970741, -0.03080163523554802, 0.005507693160325289, 0, 0.01695917919278145, -0.03125539422035217, 0.01555139012634754, 0,
        0.01088552549481392, 0.006290009245276451, 0, 0.0150487944483757, -0.0309625044465065, -0.0272382628172636, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01165164541453123, 0.003995832521468401, 0, 0.009745759889483452, 0, -0.02692227624356747, 0, -0.02171104773879051, 0, 0, 0, 0, 0, 0, 0, 0, 0.01411987841129303, 0.01029676664620638, 0, 0.01187944319099188, -0.02578313648700714, -0.04908386245369911, 0, -0.03178936243057251, 0, 0, 0, 0.0063156858086586, 0, 0, 0, -0.03173521161079407, 0.01270292978733778, 0.006377415265887976, 0, 0.01048727706074715, 0.03132680803537369, -0.03847138956189156, 0, -0.002183882985264063, 0, 0, 0, 0.008061346597969532, 0, 0, 0, -0.0293133407831192,
        -0.007364335004240274, -0.03392961621284485, -0.0227215401828289, 0.00220160442404449, 0, -0.02036203071475029, 0, 0, 0, -0.02157699689269066, 0, 0, 0, 0, 0, 0, -0.02869114838540554, -0.02617532573640347, 0.009910601191222668, -0.00508029293268919, 0, 0, 0, 0, -0.02875208109617233, 0, -0.06646457314491272, 0, 0, 0, 0, 0, 0, -0.007361542899161577, 0, 0.01625153049826622, 0, 0.009565385058522224, 0, 0.01155953016132116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003503658575937152, 0, 0.01471914071589708, 0, 0.01050028670579195, 0, 0, 0, 0, 0, 0, 0, 0,
        0.009408080019056797, 0.0106665613129735, -0.0339893214404583, 0, -0.0202363096177578, -0.02314124256372452, 0, 0, -0.02454892173409462, 0.003610594430938363, 0.008224824443459511, 0, -0.02087043598294258, -0.02696556970477104, 0, 0, 0, 0, 0, 0, 0.02131792157888412, -0.02732094749808311, -0.02858106791973114, 0, 0.008703253231942654, 0, 0, 0, -0.01974558271467686, 0.01908021420240402, 0, 0, 0, 0, 0, 0, 0.009079172275960445, -0.02641636505723, 0.01441999617964029, 0, 0.01087666861712933, 0, 0.005677862092852592, 0, -0.008925279602408409, -0.03905533254146576, 0.01521508581936359, 0, 0.003932079765945673, 0, 0.01139726117253304, 0, -0.005896862596273422, -0.02439780719578266, 0, 0, 0.006302643567323685, 0, 0, 0, 0.01719755679368973, 0.003780234837904572, 0.01326663885265589, 0,
        0, 0, -0.02680518291890621, 0.01220796443521976, 0.02380158938467503, 0, 0.01068909373134375, 0, 0, 0.003677646862342954, 0, 0.002411701017990708, 0, 0.007702741771936417, 0, 0.008012012578547001, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003294660709798336, 0.005031999666243792, -0.02393842674791813, -0.02318644337356091, -0.006866694893687963, 0.003326381556689739, -0.03484209999442101, 0, 0, 0.007305057719349861, 0, 0.01201923377811909, 0, 0.008239191025495529, 0, 0.008257996290922165, -0.02787376008927822, 0, -0.02507899329066277, 0, -0.02280760742723942, 0, -0.03768425062298775, 0, 0, 0, -0.01897892542183399, 0, 0, 0, 0, 0.002156334929168224,
        0, 0, 0, -0.02513964287936687, 0, -0.01953844912350178, 0, 0.005370195489376783, 0, 0, 0, 0.01541008148342371, 0, -0.02642720378935337, 0, -0.008388910442590714, 0, 0, 0, 0, 0, 0, 0, 0.00471933651715517, 0, 0, 0, 0, 0, 0, 0, 0.008705150336027145, 0, 0, 0, 0.004688382148742676, 0, 0, 0, 0.001584916491992772, 0, 0.006349393166601658, 0, 0.01323961466550827, 0, -0.04134709388017654, -0.02736443467438221, -0.0009029789944179356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.002372818998992443, 0, 0, 0, 0.014571120031178,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.03077038377523422, 0, -0.002571499207988381, 0, 0.005036855116486549, 0, 0, 0, 0.02011996321380138, 0, -0.01359228137880564, 0, 0, 0, -0.01532119233161211, 0, -0.01832442544400692, 0, -0.03044526092708111, -0.02037945203483105, -0.01134809944778681, -0.016157615929842, 0, 0, 0, 0, 0, 0, 0, 0, 0.004706807434558868, 0, 0, 0, 0.01065286342054605, 0, 0, 0, 0, 0, 0, 0, 0.002074523828923702, 0, -0.02814617194235325, 0, 0.01314828358590603, 0, 0, 0, 0.009500098414719105, -0.05160131305456161, -0.01351159065961838, 0,
        0, 0, 0, 0, -0.003398528788238764, 0, 0, 0, 0.003896340494975448, 0, 0, 0, 0.001694431295618415, 0, 0, 0, 0.02454920671880245, 0, 0, 0, 0.006218118127435446, -0.0228794701397419, 0, 0, 0.006527110934257507, 0, 0.006963518913835287, 0, -0.001662773895077407, 0, 0, 0, -0.01371372025460005, 0, 0, 0, -0.01420325972139835, 0, 0, 0, -0.02153027430176735, 0, 0.01133146043866873, 0, 0.0018864810699597, 0, 0, 0, -0.01839545927941799, 0, 0, 0, -0.002884042216464877, -0.02825964614748955, 0.01396157033741474, -0.0307091660797596, -0.0181262381374836, -0.01515366230159998, 0.006991502828896046, 0, 0.007829325273633003, 0, 0.004522413015365601, 0,
        0, 0.005850166082382202, -0.02421732246875763, 0.006876120809465647, 0, 0, 0, 0, 0.008632447570562363, 0.003810481168329716, -0.04708495736122131, 0.01382056437432766, 0, 0, 0, -0.01621998660266399, 0, -0.02148260734975338, -0.01162145100533962, -0.01953197084367275, 0, 0, 0, -0.004183695651590824, 0, 0.0007553655304946005, 0, 0, 0.0008092408534139395, 0.003061330644413829, 0.004167109727859497, 0.003671935992315412, 0, 0.002743537304922938, 0, 0.009199617430567741, 0, 0, 0, 0, 0, 0.004084134474396706, 0, -0.009756587445735931, 0, 0, 0, 0, 0, -0.01177171710878611, 0, 0.01065933797508478, 0, 0.008468931540846825, 0, 0.001642080605961382, 0, -0.0008540573180653155, 0, 0.01268961280584335, 0, -0.016189806163311, 0, 0,
        0, -0.02375984005630016, -0.001564138219691813, -0.01089935190975666, -0.01270734705030918, 0, 0, 0, 0.02004470303654671, -0.01735551655292511, 0.006816079374402761, -0.005096650216728449, 0, 0, 0, 0, -0.0004497765039559454, 0, 0, 0, 0, 0, 0, 0, -0.006564953364431858, 0, 0.008476439863443375, 0, 0, 0, 0, 0, -0.02900431491434574, 0, 0.005931205581873655, 0.002365788212046027, -0.015212157741189, -0.01443163957446814, 0, 0, 0.02116581425070763, -0.05505963787436485, 0.0007088814745657146, 0.0114873768761754, -0.03610991314053535, 0, 0, 0, -0.02000914886593819, 0.01614611782133579, 0.003297580173239112, 0, 0, 0, 0, 0, 0, 0, 0.00220111757516861, 0.002823278540745378, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0.01050629653036594, 0, 0.002336082980036736, 0, 0, 0, 0, 0, 0, 0, 0.001509916270151734, 0, 0, 0, 0, 0, -0.003207194618880749, 0.0104463892057538, 0.0003100352769251913, 0, 0, 0, 0, -0.02011983841657639, -0.01754760555922985, 0, -0.002872595796361566, 0, 0, 0, 0, 0, 0, 0, -0.02984201349318027, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01961351186037064, 0, 0, 0.009311978705227375, -0.01773404516279697, 0, -0.006225974764674902, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0.0007577156648039818, 0, 0.004159844014793634, 0, 0, 0, 0, 0, -0.01000242400914431, 0.00170181121211499, 0.005897750146687031, 0, 0, 0, -0.0312584862112999, 0, 0, 0, 0.002605644054710865, 0, 0, 0, 0, -0.02798778004944324, 0.004339709412306547, 0, -0.01158597972244024, 0, 0, 0, -0.01314807869493961, 0, 0.009120146743953228, 0, -0.01250975858420134, 0, 0, 0, 0, 0, 0.01545401755720377, 0, 0.01879257336258888, 0, -0.0142862144857645, 0, -0.0117184966802597, 0, 0, 0, 0.00884750671684742, 0, 0, 0, 0, 0, 0, 0, -0.02472754381597042, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01743459329009056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0003913228574674577, -0.02842127904295921, 0, 0, 0, 0, -0.0182481911033392, 0.003927547484636307, -0.005747225135564804, 0.001480640028603375, 0, 0, 0, 0, 0, 0, 0, 0.004763401113450527, 0, 0, 0, 0, 0, 0, 0, -0.01714328490197659, 0, 0, 0, 0,
        -0.007712508551776409, -0.00663436483591795, 0.01763767190277576, 0.005861687939614058, 0, 0.009765401482582092, 0, 0.00246185646392405, -0.008942369371652603, -0.02377519011497498, 0.01055543031543493, -0.006336604710668325, 0, 0.004122684244066477, 0, 0.0005800031358376145, 0, 0, 0, 0, 0, 0, 0, 0.001845312071964145, 0, 0, 0, -0.04508111998438835, 0, 0.001431079115718603, 0, 0, 0.006823243107646704, 0, 0, -0.01440358627587557, 0, 0, 0, 0, -0.01897584833204746, 0, -0.01756438054144382, -0.01251214742660522, 0, -0.000427761347964406, 0, 0.006974961142987013, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.00603391183540225, 0, 0, 0, 0, 0, 0,
        0.0079529182985425, 0, 0.001647835830226541, 0.004233590327203274, 0, 0, 0, 0, -0.00749513041228056, 0, 0.01125888805836439, -0.01122251618653536, 0.01592733152210712, -0.008246202021837234, 0, -0.009847593493759632, 0, 0, 0.00370668270625174, 0, 0, 0, 0, 0, -0.01663512177765369, 0, -0.02440768107771873, 0, 0, 0, 0, 0, 0, -0.01077046617865562, -0.0007331931847147644, 0.003654043655842543, 0, 0, 0, -0.0127816628664732, 0.005243645515292883, 0.01711250655353069, 0.004369714297354221, -0.009278749115765095, 0, 0, 0, 0, 0, 0, 0.0008775488240644336, 0.002862021094188094, 0, 0, 0, 0, 0, 0, 0.001829952001571655, -0.007389419712126255, 0, 0, 0, 0,
        0, 0.01202385406941175, 0, 0, 0, -0.008947026915848255, -0.007348035462200642, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.001128489268012345, 0, 0, 0, 0.0009026143234223127, 0, 0, 0, -0.001366189448162913, 0, 0, 0, -0.0006127423839643598, 0, 0, 0, -0.00804003793746233, 0, 0, 0, -0.002638886449858546, 0, 0, 0, 0, 0, 0, 0, 0.00109926238656044, 0, 0, 0, 0.005454670172184706, 0, 0, 0, 0.007692116312682629, 0, -0.01893662661314011, 0, -0.0008017724030651152, 0, 0, -0.01500902604311705, 0.0007226546877063811, 0, -0.02271461859345436,
        -0.002651668153703213, 0, -0.009148325771093369, 0, -0.01618031784892082, 0, 0.01724489405751228, 0, -0.002958433702588081, 0, 0.008288310840725899, 0, -0.00123465177603066, 0, 0, 0, 0, 0, -0.007813296280801296, 0, -0.01543753128498793, 0, 0, 0, 0.002424076432362199, 0, 0, 0, 0.001174482167698443, 0, 0, 0, 0.01264637894928455, 0, -0.01855012960731983, 0, -0.00795414112508297, 0, 0.01510165445506573, 0, 0.0008654171251691878, 0, 0.006940426304936409, 0, 0.002603905973955989, 0, 0.003327799960970879, 0, -0.01442535594105721, 0, -0.01264734100550413, 0, 0.008126158267259598, 0, 0, 0, -0.001526374137029052, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0.01410712860524654, 0, 0, 0, 0, -0.01771558448672295, 0, 0, 0.005820682272315025, -0.00690474035218358, 0.002126247389242053, 0, 0.00647421320900321, -0.02229670062661171, -0.0004705711035057902, 0, -0.0008267296943813562, 0.01372828893363476, -0.001026321086101234, 0.001853504218161106, 0.00506422808393836, -0.01130315288901329, 0, 0, 0.004963341169059277, -0.01391167845577002, -0.002896330785006285, 0, 0.002731256652623415, -0.01116961054503918, 0, 0, 0, 0, 0, 0, 0, -0.01452896371483803, 0, 0, 0, 0.01835092529654503, 0, 0.007621240802109241, 0.00347854127176106, -0.01548296120017767, 0, 0, 0.001549503300338984, 0, -0.001501249964348972, 0, 0.001042450196109712, -0.01517495419830084, -2.247304837510455e-05, 0, 0.0004771263629663736, 0.01617338322103024, 0.001845930470153689, 0.01028069760650396, -0.001684236689470708, 0.005286706611514091,
        -0.01105980947613716, 0, 0.01388231199234724, -0.02015734277665615, 0, 0, 0.0029314577113837, -0.01006500329822302, 0, 0, -0.009422360919415951, -0.00639349315315485, 0, 0, 0, 0, 0.004716729279607534, 0, 0.001654442632570863, 0, 0, 0, 0.003007081570103765, 0, 0, 0, -0.006793876644223928, 0, 0, 0, 0, 0, 0, -0.006362186279147863, -0.02203717455267906, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.009605914354324341, 0, 0, 0, -0.01076074037700891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0.0004124626575503498, 0, 0.004423653706908226, 0, 0.002593396464362741, -0.01614029705524445, 0, 0, 0, 0, -0.01037260890007019, 0, -0.004957867786288261, -0.004592002835124731, 0, 0, 0, 0, 0, 0, -0.006518505048006773, 0, 0, 0, 0, 0, 0, 0, 0.009459760971367359, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.02324077300727367, 0, 0, -0.005966871976852417, 0.001526817679405212, -0.007707445882260799, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01474944781512022, -0.009439614601433277,
        -0.02949221432209015, 0, 0, 0, 0, 0.01246855687350035, -0.007228543516248465, -0.004306678660213947, 0, 0.004148788284510374, 0, 0, 0.004692039918154478, -0.02058402635157108, 0, 0, -0.004605079535394907, -0.001743112574331462, -0.005596120376139879, 0, 0.01644285954535007, -0.006436456926167011, 0, 0, 0, 0, 0, 0, 0.001028271508403122, 0, 0, 0, 0, 0, 0, 0, 0.01672009751200676, -0.01429561339318752, -0.01801513321697712, 0, 0, 0, 0, 0, -0.0009310129098594189, 0.005167019553482533, 0, 0, 0, 0, 0, 0, -0.03914704173803329, -0.01044563017785549, 0, 0, 0, 0, 0, 0, 0.008932629600167274, 0.006852272432297468, 0, 0,
        0, 0, 0, 0, 0.004845967516303062, 0, 0.00382416183128953, 0, 0, 0, 0, 0, 0.005085071548819542, 0, 0.001305736717768013, 0, -0.004398447927087545, 0, -0.002847264753654599, 0, 0, 0, -0.003746617352589965, 0, 0, 0, 0, 0, 0, 0, -0.01203372702002525, 0, 0.005434570368379354, 0, 0, 0, -0.01613298989832401, 0, 0.001552803441882133, 0, 0, 0, 0, 0, 0.003036145819351077, 0, -0.0005467284354381263, 0, 0, 0, 0.00107845978345722, 0, 0, 0, -0.01025916077196598, 0, 0.004048739094287157, 0, 0, 0, 0, 0, 0.004134450107812881, 0,
        0, 0.002904719207435846, 0.005853681359440088, 0.002963131293654442, 0, 0, -0.01151103805750608, 0, -0.007992091588675976, 0.003487024223431945, 0.007217875216156244, 0.002586604095995426, 0, 0, 0, -0.0005611299420706928, 0, 0.001138756866566837, 0.004769111983478069, 0.005014373455196619, 0, 0.003392596961930394, 0, 0, 0.01036039087921381, -0.001595021458342671, -0.04416809603571892, -0.001577246468514204, 0.00176120107062161, 0.001105201430618763, 0, 0.001224603387527168, 0, 0, -0.006580357905477285, 0.003653388703241944, 0, 0, 0, -0.01830261573195457, -0.02036016620695591, -0.001179501647129655, -0.004610952455550432, 0.001106550334952772, 0, 0, 0, 0.001063007046468556, 0.005387187469750643, 0, -0.01444452628493309, 0.008587003685534, 0, 0, 0, 0, 0.00321654137223959, -0.002143120625987649, 0.02148195542395115, 0.002158379182219505, 0, 0, -0.003236533142626286, 0,
        0, -0.01125473529100418, 0, -0.0198514312505722, 0, 0.009508613497018814, -0.01598246768116951, 0.002219873014837503, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.000478218134958297, 0, -0.007811657153069973, 0, -0.01764749549329281, 0, 0, 0, 0, 0, 0.01107853464782238, 0, 0, 0, 0, 0, 0.001436876598745584, 0.0004473055014386773, 0.001600231626071036, 0, 0.0008755548042245209, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003426384180784225, 0, 0, 0, 0.007733318023383617, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, -0.005319466814398766, 0.003530798014253378, 0, 0, 0, 0, 0, 0, -0.002771299798041582, 0, -0.003858612151816487, -0.008204232901334763, 0.005028229672461748, 0.01499119214713573, 0.01039016991853714, 0, -0.01606885530054569, -0.007017714437097311, -0.006728359498083591, 0, -0.01201438065618277, -0.008568973280489445, 0, 0, 0, 0, 0.002679588738828897, 0, 0.001139429397881031, 0, 0, 0, 0.005174826830625534, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0005020854296162724, -0.0002835633640643209, -0.0007740826695226133, -0.001055848086252809, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0.006922355853021145, 0, 0, 0, 0, 0, 0, -0.006924259476363659, 0.008529559709131718, -0.00242684967815876, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.006022279616445303, 0, -0.00259910523891449, 0, -0.005908765830099583, 0, -0.01582972332835197, 0, 0.006851904559880495, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6.852280057501048e-05, 0, 0, -0.0006118683377280831, 0.0003138572792522609, 0, 0, 0, -0.009407203644514084, 0, 0, 0, 0, 0, 0, 0, 0.001884062075987458, 0, 0, 0, 0.002822726033627987, 0, 0,
        0, 0, 0, 0, 0, 0, 0, -0.009290141984820366, 0, 0, 0, 0, 0, 0, 0, -0.00243760971352458, -0.001339632668532431, 0.001371120102703571, 0.008422770537436008, 0.00169768335763365, 0, 0.003691601799800992, -0.002553024096414447, -0.004309607204049826, 0, 0, 0, 0, 0, 0, 0, -0.005326713435351849, 0, 0.003895929548889399, 0, 0, 0, 0, 0, 0.006437220145016909, 0, 0, 0, 0, 0, 0, 0, 0, 0.004516349174082279, -0.01448589935898781, 0, 0.002233862178400159, 0.002881631487980485, 0, -0.002154339104890823, 0.007070555817335844, 0, 0, 0, 0, 0, 0, 0, -0.007126604206860065,
        0, 0, 0, 0, 0, -0.009343255311250687, 0, 0.004763575736433268, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.004230387043207884, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.006801330018788576, 0, 0, -0.01411472354084253, 0.005079521797597408, 0, 0, 0, 0, 0, 0, 0, -0.01205828227102757, 0, 0, 0, 0.003885380458086729, 0, 0.0003801530110649765, 0.0007158821099437773, -0.001354322885163128, 0, 0, 0, 0, 0, 0, 0, -0.002286148956045508,
        0, 0, 0, 0, 0, 0, 0, 0.007275409996509552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0006713990005664527, -0.002144098980352283, -0.0007004509679973125, 0, -0.01323770545423031, -0.009445172734558582, 0.001094239298254251, 0, 0, 0, -0.001240560552105308, 0, 0, 0, -0.005296156741678715, 0, 0, 0, 0, 0, 0, 0, 0.001910626888275146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.004238775931298733, 0, 0, 0, -0.004246497061103582, 0, 0, 0, 0, 0, 0, 0, 0,
        0, -0.01106495596468449, 0, -0.002010875614359975, 0, 0, 0, 0, -0.00496707996353507, 0.007595899514853954, -0.0002368261921219528, 0, 0, -0.01792028918862343, 0, 0, 0, 0.002415011869743466, 0, -0.0116512980312109, 0, 0, 0, 0, 0, -0.002294196980074048, 0, -0.004018498118966818, 0, 0.01011846121400595, 0, 0, 0.003096321597695351, -9.856143151409924e-05, 0, 0, 0, 0, 0, 0, 0, 0.002503500320017338, 0, 0, 0, -0.001322283525951207, 0, 0, 0, 0.003601975040510297, 0, 0, 0, 0.003781531006097794, 0, 0, 0, -0.0003743283450603485, 0, 0, 0, 0.001020752126350999, 0, 0,
        0.001023306627757847, -0.003414253937080503, 0, 0.007042407989501953, 0.006168597843497992, -0.00416221097111702, -0.009812843985855579, -0.00130719633307308, 0, 0, 0, 0, -0.008242638781666756, 0.006817043293267488, 0, 0, 0, 0.006235272623598576, 0, 0.004014298319816589, 0, -0.01356338337063789, -0.004873577505350113, 0.00488006230443716, 0, -0.00955687090754509, 0, 0, 0, 0.005887086503207684, -0.01037743408232927, 0, 0, 0, 0, 0, 0.003625357756391168, -0.0004228765610605478, 0.005344464909285307, 0.00238898117095232, 0, 0, 0, 0, -0.001307681086473167, -0.0003056071873288602, -0.0008863373077474535, 0, 0, 0, 0, 0, 0, -0.002160524018108845, 0, 0.002784685464575887, 0, 0, 0, 0, 0, 0.001723205670714378, 0, -0.001813406124711037,
        0, 0, 0, 0, 0.005693003069609404, 0, 0.004565808922052383, 0, 0.008971579372882843, 0, 0, 0, -0.003202109364792705, 0, 0.003849713131785393, 0, 0, 0, 0, 0, -0.008104654960334301, 0, -6.053056858945638e-05, 0, 0, 0, 0, 0, -0.007285960949957371, 0, 0, 0, 0, 0, 0, 0, -0.00748302461579442, 0, -0.00039231515256688, 0, 0, 0, 0, 0, -0.004733922425657511, 0, -0.004029062110930681, 0, 0, 0, 0, 0, 0.01141913048923016, 0, -0.0001772215327946469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.002274078316986561, 0, -0.007601072546094656, 0, 0.001363920513540506, 0, -0.007932837121188641, 0, -0.002169540850445628, -0.001163319684565067, 0.0004634318174794316, 0, 0.00191291025839746, 0.001370455953292549, 0.0003048749640583992, 0, 0.0004866501258220524, 0, 0, 0, 0.001872940454632044, 0, 0, 0, 0.007982106879353523, 0, 0, 0, -0.0007382551557384431, 0, 0, 0, 0, 0, 0, 0, 0.004019469488412142, 0, 0.0004676860407926142, 0, 0, 0, 0, 0, -0.0004557926440611482, -0.0005871998728252947, 0.0006772060878574848, 0, 0, 0, 0, 0, -0.001277163857594132, 0, 0, 0, 0, 0, 0, 0, -0.001151917735114694, 0.0002333745214855298, -0.0003232963499613106, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005415576975792646, 0, 0.003545938059687614, 0, 0.002296133898198605, 0, 0, 0, 0.005225171335041523, 0, 0, 0, 0, 0, 0, 0, 0.003859044751152396, 0, 0, 0, 0, 0, 0, -0.008948885835707188, 0, 0, 0, 0, 0, 0, 0, 0, 0.003320756135508418, 0, 0, 0, 0, 0, 0, 0, -0.000655564886983484, 0, 0, 0, 0, 0, 0, -0.001877570059150457, -0.001759050646796823,
        0, 0, 0, 0, 0.0006335488287732005, 0, -0.000915934331715107, 0, 0, 0, 0.0004368812951724976, -0.005794147495180368, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.00282351253554225, 0, -0.01179798226803541, 0, 0.0002739985066000372, -0.002987196668982506, 0, 0, 0, -0.001760907238349319, 0, 0, 0, 0, 0, 0, 0.001200883300043643, 0, 0, 0, 0.005903380457311869, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.003040545852854848, 0, 0, 0, 0.0007440319168381393, -0.002942668041214347, 0, 0, -0.01265040133148432, 0
    ]
    scale = 1
    bias = 0.7821782231
    model_ctrs = catboost_model_ctrs_container(
        used_model_ctrs_count = 27,
        compressed_model_ctrs = [
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [3],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471478, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130472, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [4],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471473, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471473, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471473, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130479, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [5],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471472, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130478, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [6],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471475, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471475, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471475, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130477, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [7],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471474, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130476, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [8],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471469, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130483, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            ),
            catboost_compressed_model_ctr(
                projection = catboost_projection(
                    transposed_cat_feature_indexes = [10],
                    binarized_indexes = []
                ),
                model_ctrs = [
                    catboost_model_ctr(base_hash = 768791580653471471, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 0.5, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 768791580653471471, base_ctr_type = "Borders", target_border_idx = 0, prior_num = 1, prior_denom = 1, shift = 0, scale = 1),
                    catboost_model_ctr(base_hash = 11154939068695130481, base_ctr_type = "FeatureFreq", target_border_idx = 0, prior_num = 0, prior_denom = 1, shift = 0, scale = 1)
                ]
            )
        ],
        ctr_data = catboost_ctr_data(
            learn_ctrs = {
                768791580653471469 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 8473802870189803490 : 0, 7071392469244395075 : 2, 18446744073709551615 : 0, 8806438445905145973 : 3, 619730330622847022 : 1, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.94273e-44, count = 61), catboost_ctr_mean_history(sum = 0, count = 12), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 0, count = 1)],
                    ctr_total = [21, 61, 0, 12, 1, 5, 0, 1]
                ),
                768791580653471471 :
                catboost_ctr_value_table(
                    index_hash_viewer = {2136296385601851904 : 0, 7428730412605434673 : 2, 9959754109938180626 : 6, 14256903225472974739 : 1, 8056048104805248435 : 3, 18446744073709551615 : 0, 12130603730978457510 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10789443546307262781 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.8026e-44, count = 73), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0)],
                    ctr_total = [20, 73, 0, 1, 0, 2, 0, 2, 0, 1, 1, 0, 1, 0]
                ),
                768791580653471472 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 13987540656699198946 : 3, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18089724839685297862 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10353740403438739754 : 1, 3922001124998993866 : 2, 13686716744772876732 : 4, 18293943161539901837 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 0, count = 13), catboost_ctr_mean_history(sum = 3.08286e-44, count = 20), catboost_ctr_mean_history(sum = 0, count = 37), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 0, count = 3)],
                    ctr_total = [0, 13, 22, 20, 0, 37, 0, 2, 0, 4, 0, 3]
                ),
                768791580653471473 :
                catboost_ctr_value_table(
                    index_hash_viewer = {7537614347373541888 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5903587924673389870 : 2, 18278593470046426063 : 6, 10490918088663114479 : 3, 18446744073709551615 : 0, 407784798908322194 : 7, 5726141494028968211 : 1, 1663272627194921140 : 10, 8118089682304925684 : 8, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 15431483020081801594 : 9, 18446744073709551615 : 0, 18446744073709551615 : 0, 1403990565605003389 : 5, 3699047549849816830 : 11, 14914630290137473119 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 9.80909e-45, count = 3), catboost_ctr_mean_history(sum = 1.4013e-45, count = 3), catboost_ctr_mean_history(sum = 5.60519e-45, count = 24), catboost_ctr_mean_history(sum = 0, count = 3), catboost_ctr_mean_history(sum = 5.60519e-45, count = 16), catboost_ctr_mean_history(sum = 4.2039e-45, count = 16), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 0, count = 5), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1), catboost_ctr_mean_history(sum = 0, count = 1), catboost_ctr_mean_history(sum = 0, count = 3), catboost_ctr_mean_history(sum = 2.8026e-45, count = 0)],
                    ctr_total = [7, 3, 1, 3, 4, 24, 0, 3, 4, 16, 3, 16, 0, 4, 0, 5, 1, 1, 0, 1, 0, 3, 2, 0]
                ),
                768791580653471474 :
                catboost_ctr_value_table(
                    index_hash_viewer = {3607388709394294015 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18356215166324018775 : 2, 18365206492781874408 : 1, 18446744073709551615 : 0, 18446744073709551615 : 0, 14559146096844143499 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 11416626865500250542 : 3, 5549384008678792175 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 0, count = 22), catboost_ctr_mean_history(sum = 2.8026e-45, count = 3), catboost_ctr_mean_history(sum = 0, count = 14), catboost_ctr_mean_history(sum = 2.66247e-44, count = 17), catboost_ctr_mean_history(sum = 0, count = 22), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1)],
                    ctr_total = [0, 22, 2, 3, 0, 14, 19, 17, 0, 22, 1, 1]
                ),
                768791580653471475 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 14452488454682494753 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 1388452262538353895 : 9, 8940247467966214344 : 1, 4415016594903340137 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 41084306841859596 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 8678739366408346384 : 2, 18446744073709551615 : 0, 4544226147037566482 : 11, 14256903225472974739 : 8, 16748601451484174196 : 7, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5913522704362245435 : 6, 1466902651052050075 : 10, 2942073219785550491 : 12, 15383677753867481021 : 3, 18446744073709551615 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 8.40779e-45, count = 10), catboost_ctr_mean_history(sum = 2.8026e-45, count = 8), catboost_ctr_mean_history(sum = 0, count = 6), catboost_ctr_mean_history(sum = 2.8026e-45, count = 14), catboost_ctr_mean_history(sum = 1.4013e-45, count = 4), catboost_ctr_mean_history(sum = 2.8026e-45, count = 9), catboost_ctr_mean_history(sum = 0, count = 11), catboost_ctr_mean_history(sum = 0, count = 3), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 9.80909e-45, count = 6), catboost_ctr_mean_history(sum = 0, count = 2), catboost_ctr_mean_history(sum = 1.4013e-45, count = 0), catboost_ctr_mean_history(sum = 0, count = 1)],
                    ctr_total = [6, 10, 2, 8, 0, 6, 2, 14, 1, 4, 2, 9, 0, 11, 0, 3, 1, 5, 7, 6, 0, 2, 1, 0, 0, 1]
                ),
                768791580653471478 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 15379737126276794113 : 5, 18446744073709551615 : 0, 14256903225472974739 : 3, 18048946643763804916 : 1, 2051959227349154549 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 7024059537692152076 : 6, 18446744073709551615 : 0, 15472181234288693070 : 2, 8864790892067322495 : 0},
                    target_classes_count = 2,
                    counter_denominator = 0,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.4013e-44, count = 58), catboost_ctr_mean_history(sum = 0, count = 4), catboost_ctr_mean_history(sum = 1.4013e-45, count = 6), catboost_ctr_mean_history(sum = 1.4013e-45, count = 5), catboost_ctr_mean_history(sum = 4.2039e-45, count = 6), catboost_ctr_mean_history(sum = 2.8026e-45, count = 0), catboost_ctr_mean_history(sum = 7.00649e-45, count = 0)],
                    ctr_total = [10, 58, 0, 4, 1, 6, 1, 5, 3, 6, 2, 0, 5, 0]
                ),
                11154939068695130472 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 15379737126276794113 : 5, 18446744073709551615 : 0, 14256903225472974739 : 3, 18048946643763804916 : 1, 2051959227349154549 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 7024059537692152076 : 6, 18446744073709551615 : 0, 15472181234288693070 : 2, 8864790892067322495 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 9.52883e-44, count = 4), catboost_ctr_mean_history(sum = 9.80909e-45, count = 6), catboost_ctr_mean_history(sum = 1.26117e-44, count = 2)],
                    ctr_total = [68, 4, 7, 6, 9, 2, 5]
                ),
                11154939068695130476 :
                catboost_ctr_value_table(
                    index_hash_viewer = {3607388709394294015 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18356215166324018775 : 2, 18365206492781874408 : 1, 18446744073709551615 : 0, 18446744073709551615 : 0, 14559146096844143499 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 11416626865500250542 : 3, 5549384008678792175 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 3.08286e-44, count = 5), catboost_ctr_mean_history(sum = 1.96182e-44, count = 36), catboost_ctr_mean_history(sum = 3.08286e-44, count = 2)],
                    ctr_total = [22, 5, 14, 36, 22, 2]
                ),
                11154939068695130477 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 14452488454682494753 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 1388452262538353895 : 9, 8940247467966214344 : 1, 4415016594903340137 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 41084306841859596 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 8678739366408346384 : 2, 18446744073709551615 : 0, 4544226147037566482 : 11, 14256903225472974739 : 8, 16748601451484174196 : 7, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5913522704362245435 : 6, 1466902651052050075 : 10, 2942073219785550491 : 12, 15383677753867481021 : 3, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 2.24208e-44, count = 10), catboost_ctr_mean_history(sum = 8.40779e-45, count = 16), catboost_ctr_mean_history(sum = 7.00649e-45, count = 11), catboost_ctr_mean_history(sum = 1.54143e-44, count = 3), catboost_ctr_mean_history(sum = 8.40779e-45, count = 13), catboost_ctr_mean_history(sum = 2.8026e-45, count = 1)],
                    ctr_total = [16, 10, 6, 16, 5, 11, 11, 3, 6, 13, 2, 1, 1]
                ),
                11154939068695130478 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 13987540656699198946 : 3, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18089724839685297862 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10353740403438739754 : 1, 3922001124998993866 : 2, 13686716744772876732 : 4, 18293943161539901837 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.82169e-44, count = 42), catboost_ctr_mean_history(sum = 5.1848e-44, count = 2), catboost_ctr_mean_history(sum = 5.60519e-45, count = 3)],
                    ctr_total = [13, 42, 37, 2, 4, 3]
                ),
                11154939068695130479 :
                catboost_ctr_value_table(
                    index_hash_viewer = {7537614347373541888 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 5903587924673389870 : 2, 18278593470046426063 : 6, 10490918088663114479 : 3, 18446744073709551615 : 0, 407784798908322194 : 7, 5726141494028968211 : 1, 1663272627194921140 : 10, 8118089682304925684 : 8, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 15431483020081801594 : 9, 18446744073709551615 : 0, 18446744073709551615 : 0, 1403990565605003389 : 5, 3699047549849816830 : 11, 14914630290137473119 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.4013e-44, count = 4), catboost_ctr_mean_history(sum = 3.92364e-44, count = 3), catboost_ctr_mean_history(sum = 2.8026e-44, count = 19), catboost_ctr_mean_history(sum = 5.60519e-45, count = 5), catboost_ctr_mean_history(sum = 2.8026e-45, count = 1), catboost_ctr_mean_history(sum = 4.2039e-45, count = 2)],
                    ctr_total = [10, 4, 28, 3, 20, 19, 4, 5, 2, 1, 3, 2]
                ),
                11154939068695130481 :
                catboost_ctr_value_table(
                    index_hash_viewer = {2136296385601851904 : 0, 7428730412605434673 : 2, 9959754109938180626 : 6, 14256903225472974739 : 1, 8056048104805248435 : 3, 18446744073709551615 : 0, 12130603730978457510 : 5, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 18446744073709551615 : 0, 10789443546307262781 : 4, 18446744073709551615 : 0, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.30321e-43, count = 1), catboost_ctr_mean_history(sum = 2.8026e-45, count = 2), catboost_ctr_mean_history(sum = 1.4013e-45, count = 1)],
                    ctr_total = [93, 1, 2, 2, 1, 1, 1]
                ),
                11154939068695130483 :
                catboost_ctr_value_table(
                    index_hash_viewer = {18446744073709551615 : 0, 18446744073709551615 : 0, 8473802870189803490 : 0, 7071392469244395075 : 2, 18446744073709551615 : 0, 8806438445905145973 : 3, 619730330622847022 : 1, 18446744073709551615 : 0},
                    target_classes_count = 0,
                    counter_denominator = 101,
                    ctr_mean_history = [catboost_ctr_mean_history(sum = 1.14906e-43, count = 12), catboost_ctr_mean_history(sum = 8.40779e-45, count = 1)],
                    ctr_total = [82, 12, 6, 1]
                )
            }
        )
    )


### Routines to compute CTRs

def calc_hash(a, b):
    max_int = 0xffFFffFFffFFffFF
    MAGIC_MULT = 0x4906ba494954cb65
    return (MAGIC_MULT * ((a + MAGIC_MULT * b) & max_int)) & max_int


def calc_hashes(binarized_features, hashed_cat_features, transposed_cat_feature_indexes, binarized_feature_indexes):
    result = 0
    for cat_feature_index in transposed_cat_feature_indexes:
        result = calc_hash(result, hashed_cat_features[cat_feature_index])
    for bin_feature_index in binarized_feature_indexes:
        binary_feature = binarized_features[bin_feature_index.bin_index]
        if not(bin_feature_index.check_value_equal):
            result = calc_hash(result, 1 if (binary_feature >= bin_feature_index.value) else 0)
        else:
            result = calc_hash(result, 1 if (binary_feature == bin_feature_index.value) else 0)
    return result


def calc_ctrs(model_ctrs, binarized_features, hashed_cat_features, result):
    ctr_hash = 0
    result_index = 0

    for i in range(len(model_ctrs.compressed_model_ctrs)):
        proj = model_ctrs.compressed_model_ctrs[i].projection
        ctr_hash = calc_hashes(binarized_features, hashed_cat_features, proj.transposed_cat_feature_indexes, proj.binarized_indexes)
        for j in range(len(model_ctrs.compressed_model_ctrs[i].model_ctrs)):
            ctr = model_ctrs.compressed_model_ctrs[i].model_ctrs[j]
            learn_ctr = model_ctrs.ctr_data.learn_ctrs[ctr.base_hash]
            ctr_type = ctr.base_ctr_type
            bucket = learn_ctr.resolve_hash_index(ctr_hash)
            if bucket is None:
                result[result_index] = ctr.calc(0, 0)
            else:
                if ctr_type == "BinarizedTargetMeanValue" or ctr_type == "FloatTargetMeanValue":
                    ctr_mean_history = learn_ctr.ctr_mean_history[bucket]
                    result[result_index] = ctr.calc(ctr_mean_history.sum, ctr_mean_history.count)
                elif ctr_type == "Counter" or ctr_type == "FeatureFreq":
                    ctr_total = learn_ctr.ctr_total
                    denominator = learn_ctr.counter_denominator
                    result[result_index] = ctr.calc(ctr_total[bucket], denominator)
                elif ctr_type == "Buckets":
                    ctr_history = learn_ctr.ctr_total
                    target_classes_count = learn_ctr.target_classes_count
                    total_count = 0
                    good_count = ctr_history[bucket * target_classes_count + ctr.target_border_idx];
                    for class_id in range(target_classes_count):
                        total_count += ctr_history[bucket * target_classes_count + class_id]
                    result[result_index] = ctr.calc(good_count, total_count)
                else:
                    ctr_history = learn_ctr.ctr_total;
                    target_classes_count = learn_ctr.target_classes_count;

                    if target_classes_count > 2:
                        good_count = 0
                        total_count = 0
                        for class_id in range(ctr.target_border_idx + 1):
                            total_count += ctr_history[bucket * target_classes_count + class_id]
                        for class_id in range(ctr.target_border_idx + 1, target_classes_count):
                            good_count += ctr_history[bucket * target_classes_count + class_id]
                        total_count += good_count;
                        result[result_index] = ctr.calc(good_count, total_count);
                    else:
                        result[result_index] = ctr.calc(ctr_history[bucket * 2 + 1], ctr_history[bucket * 2] + ctr_history[bucket * 2 + 1])
            result_index += 1



cat_features_hashes = {
    "Female": -2114564283,
    "Protective-serv": -2075156126,
    "Assoc-voc": -2029370604,
    "Married-civ-spouse": -2019910086,
    "Federal-gov": -1993066135,
    "Transport-moving": -1903253868,
    "Farming-fishing": -1888947309,
    "Prof-school": -1742589394,
    "Self-emp-inc": -1732053524,
    "?": -1576664757,
    "Handlers-cleaners": -1555793520,
    "0": -1438285038,
    "Philippines": -1437257447,
    "Male": -1291328762,
    "11th": -1209300766,
    "Unmarried": -1158645841,
    "Local-gov": -1105932163,
    "Divorced": -993514283,
    "Some-college": -870577664,
    "Asian-Pac-Islander": -787966085,
    "Sales": -760428919,
    "Self-emp-not-inc": -661998850,
    "Widowed": -651660490,
    "Masters": -453513993,
    "State-gov": -447941100,
    "Doctorate": -434936054,
    "White": -218697806,
    "Own-child": -189887997,
    "Amer-Indian-Eskimo": -86031875,
    "Exec-managerial": -26537793,
    "Husband": 60472414,
    "Italy": 117615621,
    "Not-in-family": 143014663,
    "n": 239748506,
    "Married-spouse-absent": 261588508,
    "Prof-specialty": 369959660,
    "Assoc-acdm": 475479755,
    "Adm-clerical": 495735304,
    "Bachelors": 556725573,
    "HS-grad": 580496350,
    "Craft-repair": 709691013,
    "Other-relative": 739168919,
    "Other-service": 786213683,
    "9th": 840896980,
    "Separated": 887350706,
    "10th": 888723975,
    "Mexico": 972041323,
    "Hong": 995245846,
    "1": 1121341681,
    "Tech-support": 1150039955,
    "Black": 1161225950,
    "Canada": 1510821218,
    "Wife": 1708186408,
    "United-States": 1736516096,
    "Never-married": 1959200218,
    "Machine-op-inspct": 2039859473,
    "7th-8th": 2066982375,
    "Private": 2084267031,
}

def hash_uint64(string):
    return cat_features_hashes.get(str(string), 0x7fFFffFF)


### Applicator for the CatBoost model

def apply_catboost_model(float_features, cat_features=[], ntree_start=0, ntree_end=catboost_model.tree_count):
    """
    Applies the model built by CatBoost.

    Parameters
    ----------

    float_features : list of float features

    cat_features : list of categorical features
        You need to pass float and categorical features separately in the same order they appeared in train dataset.
        For example if you had features f1,f2,f3,f4, where f2 and f4 were considered categorical, you need to pass here float_features=f1,f3, cat_features=f2,f4


    Returns
    -------
    prediction : formula value for the model and the features

    """
    if ntree_end == 0:
        ntree_end = catboost_model.tree_count
    else:
        ntree_end = min(ntree_end, catboost_model.tree_count)

    model = catboost_model

    assert len(float_features) >= model.float_feature_count
    assert len(cat_features) >= model.cat_feature_count

    # Binarise features
    binary_features = [0] * model.binary_feature_count
    binary_feature_index = 0

    for i in range(len(model.float_feature_borders)):
        for border in model.float_feature_borders[i]:
            binary_features[binary_feature_index] += 1 if (float_features[model.float_features_index[i]] > border) else 0
        binary_feature_index += 1
    transposed_hash = [0] * model.cat_feature_count
    for i in range(model.cat_feature_count):
        transposed_hash[i] = hash_uint64(cat_features[i])

    if len(model.one_hot_cat_feature_index) > 0:
        cat_feature_packed_indexes = {}
        for i in range(model.cat_feature_count):
            cat_feature_packed_indexes[model.cat_features_index[i]] = i
        for i in range(len(model.one_hot_cat_feature_index)):
            cat_idx = cat_feature_packed_indexes[model.one_hot_cat_feature_index[i]]
            hash = transposed_hash[cat_idx]
            for border_idx in range(len(model.one_hot_hash_values[i])):
                binary_features[binary_feature_index] |= (1 if hash == model.one_hot_hash_values[i][border_idx] else 0) * (border_idx + 1)
            binary_feature_index += 1

    if hasattr(model, 'model_ctrs') and model.model_ctrs.used_model_ctrs_count > 0:
        ctrs = [0.] * model.model_ctrs.used_model_ctrs_count;
        calc_ctrs(model.model_ctrs, binary_features, transposed_hash, ctrs)
        for i in range(len(model.ctr_feature_borders)):
            for border in model.ctr_feature_borders[i]:
                binary_features[binary_feature_index] += 1 if ctrs[i] > border else 0
            binary_feature_index += 1

    # Extract and sum values from trees
    result = 0.
    tree_splits_index = 0
    current_tree_leaf_values_index = 0
    for tree_id in range(ntree_start, ntree_end):
        current_tree_depth = model.tree_depth[tree_id]
        index = 0
        for depth in range(current_tree_depth):
            border_val = model.tree_split_border[tree_splits_index + depth]
            feature_index = model.tree_split_feature_index[tree_splits_index + depth]
            xor_mask = model.tree_split_xor_mask[tree_splits_index + depth]
            index |= ((binary_features[feature_index] ^ xor_mask) >= border_val) << depth
        result += model.leaf_values[current_tree_leaf_values_index + index]
        tree_splits_index += current_tree_depth
        current_tree_leaf_values_index += (1 << current_tree_depth)
    return model.scale * result + model.bias



