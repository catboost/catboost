# File format ($ symbol means the beginning of a line):
#
# $ # this message
# $ # =======================
# $     # comments (all commentaries should starts with some number of spaces and # symbol)
# ${action} {license id} {license text hash}
# $BELONGS ./ya/make/file/relative/path/1/ya.make ./ya/make/2/ya.make
# ${all_file_action} filename
# $ # user commentaries (many lines)
# $ generated description - files with this license, license text... (some number of lines that starts with some number of spaces, do not modify)
# ${action} {license spdx} {license text hash}
# $BELONGS ./ya/make/file/relative/path/3/ya.make
# ${all_file_action} filename
# $    #    user commentaries
# $ generated description
# $ ...
#
# You can modify action, all_file_action and add commentaries
# Available actions:
# keep - keep license in contrib and use in credits
# skip - skip license
# remove - remove all files with this license
# rename - save license text/links into licenses texts file, but not store SPDX into LINCENSE macro. You should store correct license id into devtools.license.spdx.txt file
#
# {all file action} records will be generated when license text contains filename that exists on filesystem (in contrib directory)
# We suppose that that files can contain some license info
# Available all file actions:
# FILE_IGNORE - ignore file (do nothing)
# FILE_INCLUDE - include all file data into licenses text file
# =======================

KEEP     COPYRIGHT_SERVICE_LABEL ef839a7f29c4727d9902b9efada72a47
BELONGS ya.make
    License text:
        // Copyright 2010 Google Inc.  All rights reserved.
    Scancode info:
        Original SPDX id: COPYRIGHT_SERVICE_LABEL
        Score           : 100.00
        Match type      : COPYRIGHT
    Files with this license:
        aligned_alloc.h [1:1]
        base_types.h [1:1]
        bob_jenkins_rng.h [1:1]
        crc32c_sse4.cc [1:1]
        crc32c_sse4.h [1:1]
        crc32c_sse4_intrin.h [1:1]
        crc_casts.h [1:1]
        generic_crc.h [1:1]
        gf_util.h [1:1]
        interface.cc [1:1]
        interface.h [1:1]
        multiword_128_64_gcc_amd64_sse2.cc [1:1]
        multiword_64_64_cl_i386_mmx.cc [1:1]
        multiword_64_64_gcc_amd64_asm.cc [1:1]
        multiword_64_64_gcc_i386_mmx.cc [1:1]
        multiword_64_64_intrinsic_i386_mmx.cc [1:1]
        platform.h [1:1]
        protected_crc.h [1:1]
        rdtsc.h [1:1]
        rolling_crc.h [1:1]
        std_headers.h [1:1]
        uint128_sse2.h [1:1]
