/* This file is autogenerated by generate_sparsetools.py
 * Do not edit manually or check into VCS.
 */

static int get_thunk_case(int I_typenum, int T_typenum)
{
        if (0) {}
        else if (I_typenum == NPY_INT32) {
            if (T_typenum == -1) { return 0; }
            else if (T_typenum == NPY_BOOL) { return 1; }
            else if (T_typenum == NPY_BYTE) { return 2; }
            else if (T_typenum == NPY_UBYTE) { return 3; }
            else if (T_typenum == NPY_SHORT) { return 4; }
            else if (T_typenum == NPY_USHORT) { return 5; }
            else if (T_typenum == NPY_INT) { return 6; }
            else if (T_typenum == NPY_UINT) { return 7; }
            else if (T_typenum == NPY_LONG) { return 8; }
            else if (T_typenum == NPY_ULONG) { return 9; }
            else if (T_typenum == NPY_LONGLONG) { return 10; }
            else if (T_typenum == NPY_ULONGLONG) { return 11; }
            else if (T_typenum == NPY_FLOAT) { return 12; }
            else if (T_typenum == NPY_DOUBLE) { return 13; }
            else if (T_typenum == NPY_LONGDOUBLE) { return 14; }
            else if (T_typenum == NPY_CFLOAT) { return 15; }
            else if (T_typenum == NPY_CDOUBLE) { return 16; }
            else if (T_typenum == NPY_CLONGDOUBLE) { return 17; }
        }
        else if (I_typenum == NPY_INT64) {
            if (T_typenum == -1) { return 18; }
            else if (T_typenum == NPY_BOOL) { return 19; }
            else if (T_typenum == NPY_BYTE) { return 20; }
            else if (T_typenum == NPY_UBYTE) { return 21; }
            else if (T_typenum == NPY_SHORT) { return 22; }
            else if (T_typenum == NPY_USHORT) { return 23; }
            else if (T_typenum == NPY_INT) { return 24; }
            else if (T_typenum == NPY_UINT) { return 25; }
            else if (T_typenum == NPY_LONG) { return 26; }
            else if (T_typenum == NPY_ULONG) { return 27; }
            else if (T_typenum == NPY_LONGLONG) { return 28; }
            else if (T_typenum == NPY_ULONGLONG) { return 29; }
            else if (T_typenum == NPY_FLOAT) { return 30; }
            else if (T_typenum == NPY_DOUBLE) { return 31; }
            else if (T_typenum == NPY_LONGDOUBLE) { return 32; }
            else if (T_typenum == NPY_CFLOAT) { return 33; }
            else if (T_typenum == NPY_CDOUBLE) { return 34; }
            else if (T_typenum == NPY_CLONGDOUBLE) { return 35; }
        };
    return -1;
}

static PY_LONG_LONG bsr_diagonal_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_diagonal<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_bool_wrapper*)a[7], (npy_bool_wrapper*)a[8]);
            return 0;
        case 2:
            (void)bsr_diagonal<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_byte*)a[7], (npy_byte*)a[8]);
            return 0;
        case 3:
            (void)bsr_diagonal<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ubyte*)a[7], (npy_ubyte*)a[8]);
            return 0;
        case 4:
            (void)bsr_diagonal<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_short*)a[7], (npy_short*)a[8]);
            return 0;
        case 5:
            (void)bsr_diagonal<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ushort*)a[7], (npy_ushort*)a[8]);
            return 0;
        case 6:
            (void)bsr_diagonal<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_int*)a[7], (npy_int*)a[8]);
            return 0;
        case 7:
            (void)bsr_diagonal<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_uint*)a[7], (npy_uint*)a[8]);
            return 0;
        case 8:
            (void)bsr_diagonal<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_long*)a[7], (npy_long*)a[8]);
            return 0;
        case 9:
            (void)bsr_diagonal<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ulong*)a[7], (npy_ulong*)a[8]);
            return 0;
        case 10:
            (void)bsr_diagonal<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_longlong*)a[7], (npy_longlong*)a[8]);
            return 0;
        case 11:
            (void)bsr_diagonal<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ulonglong*)a[7], (npy_ulonglong*)a[8]);
            return 0;
        case 12:
            (void)bsr_diagonal<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_float*)a[7], (npy_float*)a[8]);
            return 0;
        case 13:
            (void)bsr_diagonal<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_double*)a[7], (npy_double*)a[8]);
            return 0;
        case 14:
            (void)bsr_diagonal<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_longdouble*)a[7], (npy_longdouble*)a[8]);
            return 0;
        case 15:
            (void)bsr_diagonal<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_cfloat_wrapper*)a[7], (npy_cfloat_wrapper*)a[8]);
            return 0;
        case 16:
            (void)bsr_diagonal<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_cdouble_wrapper*)a[7], (npy_cdouble_wrapper*)a[8]);
            return 0;
        case 17:
            (void)bsr_diagonal<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_clongdouble_wrapper*)a[7], (npy_clongdouble_wrapper*)a[8]);
            return 0;
        case 19:
            (void)bsr_diagonal<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_bool_wrapper*)a[7], (npy_bool_wrapper*)a[8]);
            return 0;
        case 20:
            (void)bsr_diagonal<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_byte*)a[7], (npy_byte*)a[8]);
            return 0;
        case 21:
            (void)bsr_diagonal<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ubyte*)a[7], (npy_ubyte*)a[8]);
            return 0;
        case 22:
            (void)bsr_diagonal<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_short*)a[7], (npy_short*)a[8]);
            return 0;
        case 23:
            (void)bsr_diagonal<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ushort*)a[7], (npy_ushort*)a[8]);
            return 0;
        case 24:
            (void)bsr_diagonal<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_int*)a[7], (npy_int*)a[8]);
            return 0;
        case 25:
            (void)bsr_diagonal<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_uint*)a[7], (npy_uint*)a[8]);
            return 0;
        case 26:
            (void)bsr_diagonal<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_long*)a[7], (npy_long*)a[8]);
            return 0;
        case 27:
            (void)bsr_diagonal<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ulong*)a[7], (npy_ulong*)a[8]);
            return 0;
        case 28:
            (void)bsr_diagonal<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_longlong*)a[7], (npy_longlong*)a[8]);
            return 0;
        case 29:
            (void)bsr_diagonal<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ulonglong*)a[7], (npy_ulonglong*)a[8]);
            return 0;
        case 30:
            (void)bsr_diagonal<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_float*)a[7], (npy_float*)a[8]);
            return 0;
        case 31:
            (void)bsr_diagonal<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_double*)a[7], (npy_double*)a[8]);
            return 0;
        case 32:
            (void)bsr_diagonal<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_longdouble*)a[7], (npy_longdouble*)a[8]);
            return 0;
        case 33:
            (void)bsr_diagonal<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_cfloat_wrapper*)a[7], (npy_cfloat_wrapper*)a[8]);
            return 0;
        case 34:
            (void)bsr_diagonal<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_cdouble_wrapper*)a[7], (npy_cdouble_wrapper*)a[8]);
            return 0;
        case 35:
            (void)bsr_diagonal<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_clongdouble_wrapper*)a[7], (npy_clongdouble_wrapper*)a[8]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_tocsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_tocsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_bool_wrapper*)a[9]);
            return 0;
        case 2:
            (void)bsr_tocsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_byte*)a[9]);
            return 0;
        case 3:
            (void)bsr_tocsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ubyte*)a[9]);
            return 0;
        case 4:
            (void)bsr_tocsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_short*)a[9]);
            return 0;
        case 5:
            (void)bsr_tocsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ushort*)a[9]);
            return 0;
        case 6:
            (void)bsr_tocsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_int*)a[9]);
            return 0;
        case 7:
            (void)bsr_tocsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_uint*)a[9]);
            return 0;
        case 8:
            (void)bsr_tocsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_long*)a[9]);
            return 0;
        case 9:
            (void)bsr_tocsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ulong*)a[9]);
            return 0;
        case 10:
            (void)bsr_tocsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_longlong*)a[9]);
            return 0;
        case 11:
            (void)bsr_tocsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ulonglong*)a[9]);
            return 0;
        case 12:
            (void)bsr_tocsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_float*)a[9]);
            return 0;
        case 13:
            (void)bsr_tocsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_double*)a[9]);
            return 0;
        case 14:
            (void)bsr_tocsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_longdouble*)a[9]);
            return 0;
        case 15:
            (void)bsr_tocsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_cfloat_wrapper*)a[9]);
            return 0;
        case 16:
            (void)bsr_tocsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_cdouble_wrapper*)a[9]);
            return 0;
        case 17:
            (void)bsr_tocsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_clongdouble_wrapper*)a[9]);
            return 0;
        case 19:
            (void)bsr_tocsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_bool_wrapper*)a[9]);
            return 0;
        case 20:
            (void)bsr_tocsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_byte*)a[9]);
            return 0;
        case 21:
            (void)bsr_tocsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ubyte*)a[9]);
            return 0;
        case 22:
            (void)bsr_tocsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_short*)a[9]);
            return 0;
        case 23:
            (void)bsr_tocsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ushort*)a[9]);
            return 0;
        case 24:
            (void)bsr_tocsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_int*)a[9]);
            return 0;
        case 25:
            (void)bsr_tocsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_uint*)a[9]);
            return 0;
        case 26:
            (void)bsr_tocsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_long*)a[9]);
            return 0;
        case 27:
            (void)bsr_tocsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ulong*)a[9]);
            return 0;
        case 28:
            (void)bsr_tocsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_longlong*)a[9]);
            return 0;
        case 29:
            (void)bsr_tocsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ulonglong*)a[9]);
            return 0;
        case 30:
            (void)bsr_tocsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_float*)a[9]);
            return 0;
        case 31:
            (void)bsr_tocsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_double*)a[9]);
            return 0;
        case 32:
            (void)bsr_tocsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_longdouble*)a[9]);
            return 0;
        case 33:
            (void)bsr_tocsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_cfloat_wrapper*)a[9]);
            return 0;
        case 34:
            (void)bsr_tocsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_cdouble_wrapper*)a[9]);
            return 0;
        case 35:
            (void)bsr_tocsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_clongdouble_wrapper*)a[9]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_scale_rows_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_scale_rows<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_bool_wrapper*)a[6], (const npy_bool_wrapper*)a[7]);
            return 0;
        case 2:
            (void)bsr_scale_rows<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_byte*)a[6], (const npy_byte*)a[7]);
            return 0;
        case 3:
            (void)bsr_scale_rows<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ubyte*)a[6], (const npy_ubyte*)a[7]);
            return 0;
        case 4:
            (void)bsr_scale_rows<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_short*)a[6], (const npy_short*)a[7]);
            return 0;
        case 5:
            (void)bsr_scale_rows<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ushort*)a[6], (const npy_ushort*)a[7]);
            return 0;
        case 6:
            (void)bsr_scale_rows<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_int*)a[6], (const npy_int*)a[7]);
            return 0;
        case 7:
            (void)bsr_scale_rows<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_uint*)a[6], (const npy_uint*)a[7]);
            return 0;
        case 8:
            (void)bsr_scale_rows<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_long*)a[6], (const npy_long*)a[7]);
            return 0;
        case 9:
            (void)bsr_scale_rows<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ulong*)a[6], (const npy_ulong*)a[7]);
            return 0;
        case 10:
            (void)bsr_scale_rows<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_longlong*)a[6], (const npy_longlong*)a[7]);
            return 0;
        case 11:
            (void)bsr_scale_rows<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ulonglong*)a[6], (const npy_ulonglong*)a[7]);
            return 0;
        case 12:
            (void)bsr_scale_rows<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_float*)a[6], (const npy_float*)a[7]);
            return 0;
        case 13:
            (void)bsr_scale_rows<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_double*)a[6], (const npy_double*)a[7]);
            return 0;
        case 14:
            (void)bsr_scale_rows<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_longdouble*)a[6], (const npy_longdouble*)a[7]);
            return 0;
        case 15:
            (void)bsr_scale_rows<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_cfloat_wrapper*)a[6], (const npy_cfloat_wrapper*)a[7]);
            return 0;
        case 16:
            (void)bsr_scale_rows<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_cdouble_wrapper*)a[6], (const npy_cdouble_wrapper*)a[7]);
            return 0;
        case 17:
            (void)bsr_scale_rows<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_clongdouble_wrapper*)a[6], (const npy_clongdouble_wrapper*)a[7]);
            return 0;
        case 19:
            (void)bsr_scale_rows<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_bool_wrapper*)a[6], (const npy_bool_wrapper*)a[7]);
            return 0;
        case 20:
            (void)bsr_scale_rows<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_byte*)a[6], (const npy_byte*)a[7]);
            return 0;
        case 21:
            (void)bsr_scale_rows<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ubyte*)a[6], (const npy_ubyte*)a[7]);
            return 0;
        case 22:
            (void)bsr_scale_rows<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_short*)a[6], (const npy_short*)a[7]);
            return 0;
        case 23:
            (void)bsr_scale_rows<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ushort*)a[6], (const npy_ushort*)a[7]);
            return 0;
        case 24:
            (void)bsr_scale_rows<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_int*)a[6], (const npy_int*)a[7]);
            return 0;
        case 25:
            (void)bsr_scale_rows<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_uint*)a[6], (const npy_uint*)a[7]);
            return 0;
        case 26:
            (void)bsr_scale_rows<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_long*)a[6], (const npy_long*)a[7]);
            return 0;
        case 27:
            (void)bsr_scale_rows<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ulong*)a[6], (const npy_ulong*)a[7]);
            return 0;
        case 28:
            (void)bsr_scale_rows<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_longlong*)a[6], (const npy_longlong*)a[7]);
            return 0;
        case 29:
            (void)bsr_scale_rows<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ulonglong*)a[6], (const npy_ulonglong*)a[7]);
            return 0;
        case 30:
            (void)bsr_scale_rows<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_float*)a[6], (const npy_float*)a[7]);
            return 0;
        case 31:
            (void)bsr_scale_rows<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_double*)a[6], (const npy_double*)a[7]);
            return 0;
        case 32:
            (void)bsr_scale_rows<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_longdouble*)a[6], (const npy_longdouble*)a[7]);
            return 0;
        case 33:
            (void)bsr_scale_rows<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_cfloat_wrapper*)a[6], (const npy_cfloat_wrapper*)a[7]);
            return 0;
        case 34:
            (void)bsr_scale_rows<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_cdouble_wrapper*)a[6], (const npy_cdouble_wrapper*)a[7]);
            return 0;
        case 35:
            (void)bsr_scale_rows<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_clongdouble_wrapper*)a[6], (const npy_clongdouble_wrapper*)a[7]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_scale_columns_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_scale_columns<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_bool_wrapper*)a[6], (const npy_bool_wrapper*)a[7]);
            return 0;
        case 2:
            (void)bsr_scale_columns<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_byte*)a[6], (const npy_byte*)a[7]);
            return 0;
        case 3:
            (void)bsr_scale_columns<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ubyte*)a[6], (const npy_ubyte*)a[7]);
            return 0;
        case 4:
            (void)bsr_scale_columns<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_short*)a[6], (const npy_short*)a[7]);
            return 0;
        case 5:
            (void)bsr_scale_columns<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ushort*)a[6], (const npy_ushort*)a[7]);
            return 0;
        case 6:
            (void)bsr_scale_columns<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_int*)a[6], (const npy_int*)a[7]);
            return 0;
        case 7:
            (void)bsr_scale_columns<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_uint*)a[6], (const npy_uint*)a[7]);
            return 0;
        case 8:
            (void)bsr_scale_columns<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_long*)a[6], (const npy_long*)a[7]);
            return 0;
        case 9:
            (void)bsr_scale_columns<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ulong*)a[6], (const npy_ulong*)a[7]);
            return 0;
        case 10:
            (void)bsr_scale_columns<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_longlong*)a[6], (const npy_longlong*)a[7]);
            return 0;
        case 11:
            (void)bsr_scale_columns<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_ulonglong*)a[6], (const npy_ulonglong*)a[7]);
            return 0;
        case 12:
            (void)bsr_scale_columns<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_float*)a[6], (const npy_float*)a[7]);
            return 0;
        case 13:
            (void)bsr_scale_columns<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_double*)a[6], (const npy_double*)a[7]);
            return 0;
        case 14:
            (void)bsr_scale_columns<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_longdouble*)a[6], (const npy_longdouble*)a[7]);
            return 0;
        case 15:
            (void)bsr_scale_columns<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_cfloat_wrapper*)a[6], (const npy_cfloat_wrapper*)a[7]);
            return 0;
        case 16:
            (void)bsr_scale_columns<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_cdouble_wrapper*)a[6], (const npy_cdouble_wrapper*)a[7]);
            return 0;
        case 17:
            (void)bsr_scale_columns<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (npy_clongdouble_wrapper*)a[6], (const npy_clongdouble_wrapper*)a[7]);
            return 0;
        case 19:
            (void)bsr_scale_columns<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_bool_wrapper*)a[6], (const npy_bool_wrapper*)a[7]);
            return 0;
        case 20:
            (void)bsr_scale_columns<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_byte*)a[6], (const npy_byte*)a[7]);
            return 0;
        case 21:
            (void)bsr_scale_columns<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ubyte*)a[6], (const npy_ubyte*)a[7]);
            return 0;
        case 22:
            (void)bsr_scale_columns<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_short*)a[6], (const npy_short*)a[7]);
            return 0;
        case 23:
            (void)bsr_scale_columns<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ushort*)a[6], (const npy_ushort*)a[7]);
            return 0;
        case 24:
            (void)bsr_scale_columns<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_int*)a[6], (const npy_int*)a[7]);
            return 0;
        case 25:
            (void)bsr_scale_columns<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_uint*)a[6], (const npy_uint*)a[7]);
            return 0;
        case 26:
            (void)bsr_scale_columns<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_long*)a[6], (const npy_long*)a[7]);
            return 0;
        case 27:
            (void)bsr_scale_columns<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ulong*)a[6], (const npy_ulong*)a[7]);
            return 0;
        case 28:
            (void)bsr_scale_columns<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_longlong*)a[6], (const npy_longlong*)a[7]);
            return 0;
        case 29:
            (void)bsr_scale_columns<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_ulonglong*)a[6], (const npy_ulonglong*)a[7]);
            return 0;
        case 30:
            (void)bsr_scale_columns<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_float*)a[6], (const npy_float*)a[7]);
            return 0;
        case 31:
            (void)bsr_scale_columns<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_double*)a[6], (const npy_double*)a[7]);
            return 0;
        case 32:
            (void)bsr_scale_columns<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_longdouble*)a[6], (const npy_longdouble*)a[7]);
            return 0;
        case 33:
            (void)bsr_scale_columns<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_cfloat_wrapper*)a[6], (const npy_cfloat_wrapper*)a[7]);
            return 0;
        case 34:
            (void)bsr_scale_columns<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_cdouble_wrapper*)a[6], (const npy_cdouble_wrapper*)a[7]);
            return 0;
        case 35:
            (void)bsr_scale_columns<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (npy_clongdouble_wrapper*)a[6], (const npy_clongdouble_wrapper*)a[7]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_sort_indices_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_sort_indices<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_bool_wrapper*)a[6]);
            return 0;
        case 2:
            (void)bsr_sort_indices<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_byte*)a[6]);
            return 0;
        case 3:
            (void)bsr_sort_indices<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_ubyte*)a[6]);
            return 0;
        case 4:
            (void)bsr_sort_indices<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_short*)a[6]);
            return 0;
        case 5:
            (void)bsr_sort_indices<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_ushort*)a[6]);
            return 0;
        case 6:
            (void)bsr_sort_indices<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_int*)a[6]);
            return 0;
        case 7:
            (void)bsr_sort_indices<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_uint*)a[6]);
            return 0;
        case 8:
            (void)bsr_sort_indices<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_long*)a[6]);
            return 0;
        case 9:
            (void)bsr_sort_indices<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_ulong*)a[6]);
            return 0;
        case 10:
            (void)bsr_sort_indices<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_longlong*)a[6]);
            return 0;
        case 11:
            (void)bsr_sort_indices<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_ulonglong*)a[6]);
            return 0;
        case 12:
            (void)bsr_sort_indices<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_float*)a[6]);
            return 0;
        case 13:
            (void)bsr_sort_indices<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_double*)a[6]);
            return 0;
        case 14:
            (void)bsr_sort_indices<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_longdouble*)a[6]);
            return 0;
        case 15:
            (void)bsr_sort_indices<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_cfloat_wrapper*)a[6]);
            return 0;
        case 16:
            (void)bsr_sort_indices<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_cdouble_wrapper*)a[6]);
            return 0;
        case 17:
            (void)bsr_sort_indices<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (npy_int32*)a[4], (npy_int32*)a[5], (npy_clongdouble_wrapper*)a[6]);
            return 0;
        case 19:
            (void)bsr_sort_indices<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_bool_wrapper*)a[6]);
            return 0;
        case 20:
            (void)bsr_sort_indices<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_byte*)a[6]);
            return 0;
        case 21:
            (void)bsr_sort_indices<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_ubyte*)a[6]);
            return 0;
        case 22:
            (void)bsr_sort_indices<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_short*)a[6]);
            return 0;
        case 23:
            (void)bsr_sort_indices<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_ushort*)a[6]);
            return 0;
        case 24:
            (void)bsr_sort_indices<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_int*)a[6]);
            return 0;
        case 25:
            (void)bsr_sort_indices<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_uint*)a[6]);
            return 0;
        case 26:
            (void)bsr_sort_indices<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_long*)a[6]);
            return 0;
        case 27:
            (void)bsr_sort_indices<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_ulong*)a[6]);
            return 0;
        case 28:
            (void)bsr_sort_indices<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_longlong*)a[6]);
            return 0;
        case 29:
            (void)bsr_sort_indices<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_ulonglong*)a[6]);
            return 0;
        case 30:
            (void)bsr_sort_indices<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_float*)a[6]);
            return 0;
        case 31:
            (void)bsr_sort_indices<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_double*)a[6]);
            return 0;
        case 32:
            (void)bsr_sort_indices<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_longdouble*)a[6]);
            return 0;
        case 33:
            (void)bsr_sort_indices<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_cfloat_wrapper*)a[6]);
            return 0;
        case 34:
            (void)bsr_sort_indices<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_cdouble_wrapper*)a[6]);
            return 0;
        case 35:
            (void)bsr_sort_indices<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (npy_int64*)a[4], (npy_int64*)a[5], (npy_clongdouble_wrapper*)a[6]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_transpose_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_transpose<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_bool_wrapper*)a[9]);
            return 0;
        case 2:
            (void)bsr_transpose<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_byte*)a[9]);
            return 0;
        case 3:
            (void)bsr_transpose<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ubyte*)a[9]);
            return 0;
        case 4:
            (void)bsr_transpose<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_short*)a[9]);
            return 0;
        case 5:
            (void)bsr_transpose<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ushort*)a[9]);
            return 0;
        case 6:
            (void)bsr_transpose<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_int*)a[9]);
            return 0;
        case 7:
            (void)bsr_transpose<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_uint*)a[9]);
            return 0;
        case 8:
            (void)bsr_transpose<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_long*)a[9]);
            return 0;
        case 9:
            (void)bsr_transpose<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ulong*)a[9]);
            return 0;
        case 10:
            (void)bsr_transpose<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_longlong*)a[9]);
            return 0;
        case 11:
            (void)bsr_transpose<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_ulonglong*)a[9]);
            return 0;
        case 12:
            (void)bsr_transpose<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_float*)a[9]);
            return 0;
        case 13:
            (void)bsr_transpose<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_double*)a[9]);
            return 0;
        case 14:
            (void)bsr_transpose<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_longdouble*)a[9]);
            return 0;
        case 15:
            (void)bsr_transpose<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_cfloat_wrapper*)a[9]);
            return 0;
        case 16:
            (void)bsr_transpose<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_cdouble_wrapper*)a[9]);
            return 0;
        case 17:
            (void)bsr_transpose<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (npy_int32*)a[7], (npy_int32*)a[8], (npy_clongdouble_wrapper*)a[9]);
            return 0;
        case 19:
            (void)bsr_transpose<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_bool_wrapper*)a[9]);
            return 0;
        case 20:
            (void)bsr_transpose<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_byte*)a[9]);
            return 0;
        case 21:
            (void)bsr_transpose<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ubyte*)a[9]);
            return 0;
        case 22:
            (void)bsr_transpose<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_short*)a[9]);
            return 0;
        case 23:
            (void)bsr_transpose<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ushort*)a[9]);
            return 0;
        case 24:
            (void)bsr_transpose<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_int*)a[9]);
            return 0;
        case 25:
            (void)bsr_transpose<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_uint*)a[9]);
            return 0;
        case 26:
            (void)bsr_transpose<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_long*)a[9]);
            return 0;
        case 27:
            (void)bsr_transpose<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ulong*)a[9]);
            return 0;
        case 28:
            (void)bsr_transpose<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_longlong*)a[9]);
            return 0;
        case 29:
            (void)bsr_transpose<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_ulonglong*)a[9]);
            return 0;
        case 30:
            (void)bsr_transpose<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_float*)a[9]);
            return 0;
        case 31:
            (void)bsr_transpose<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_double*)a[9]);
            return 0;
        case 32:
            (void)bsr_transpose<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_longdouble*)a[9]);
            return 0;
        case 33:
            (void)bsr_transpose<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_cfloat_wrapper*)a[9]);
            return 0;
        case 34:
            (void)bsr_transpose<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_cdouble_wrapper*)a[9]);
            return 0;
        case 35:
            (void)bsr_transpose<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (npy_int64*)a[7], (npy_int64*)a[8], (npy_clongdouble_wrapper*)a[9]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_matmat_pass2_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_matmat_pass2<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_bool_wrapper*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_bool_wrapper*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_bool_wrapper*)a[13]);
            return 0;
        case 2:
            (void)bsr_matmat_pass2<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_byte*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_byte*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_byte*)a[13]);
            return 0;
        case 3:
            (void)bsr_matmat_pass2<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ubyte*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_ubyte*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_ubyte*)a[13]);
            return 0;
        case 4:
            (void)bsr_matmat_pass2<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_short*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_short*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_short*)a[13]);
            return 0;
        case 5:
            (void)bsr_matmat_pass2<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ushort*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_ushort*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_ushort*)a[13]);
            return 0;
        case 6:
            (void)bsr_matmat_pass2<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_int*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_int*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_int*)a[13]);
            return 0;
        case 7:
            (void)bsr_matmat_pass2<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_uint*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_uint*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_uint*)a[13]);
            return 0;
        case 8:
            (void)bsr_matmat_pass2<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_long*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_long*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_long*)a[13]);
            return 0;
        case 9:
            (void)bsr_matmat_pass2<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ulong*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_ulong*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_ulong*)a[13]);
            return 0;
        case 10:
            (void)bsr_matmat_pass2<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_longlong*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_longlong*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_longlong*)a[13]);
            return 0;
        case 11:
            (void)bsr_matmat_pass2<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ulonglong*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_ulonglong*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_ulonglong*)a[13]);
            return 0;
        case 12:
            (void)bsr_matmat_pass2<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_float*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_float*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_float*)a[13]);
            return 0;
        case 13:
            (void)bsr_matmat_pass2<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_double*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_double*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_double*)a[13]);
            return 0;
        case 14:
            (void)bsr_matmat_pass2<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_longdouble*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_longdouble*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_longdouble*)a[13]);
            return 0;
        case 15:
            (void)bsr_matmat_pass2<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_cfloat_wrapper*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_cfloat_wrapper*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_cfloat_wrapper*)a[13]);
            return 0;
        case 16:
            (void)bsr_matmat_pass2<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_cdouble_wrapper*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_cdouble_wrapper*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_cdouble_wrapper*)a[13]);
            return 0;
        case 17:
            (void)bsr_matmat_pass2<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_clongdouble_wrapper*)a[7], (const npy_int32*)a[8], (const npy_int32*)a[9], (const npy_clongdouble_wrapper*)a[10], (npy_int32*)a[11], (npy_int32*)a[12], (npy_clongdouble_wrapper*)a[13]);
            return 0;
        case 19:
            (void)bsr_matmat_pass2<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_bool_wrapper*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_bool_wrapper*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_bool_wrapper*)a[13]);
            return 0;
        case 20:
            (void)bsr_matmat_pass2<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_byte*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_byte*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_byte*)a[13]);
            return 0;
        case 21:
            (void)bsr_matmat_pass2<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ubyte*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_ubyte*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_ubyte*)a[13]);
            return 0;
        case 22:
            (void)bsr_matmat_pass2<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_short*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_short*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_short*)a[13]);
            return 0;
        case 23:
            (void)bsr_matmat_pass2<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ushort*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_ushort*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_ushort*)a[13]);
            return 0;
        case 24:
            (void)bsr_matmat_pass2<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_int*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_int*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_int*)a[13]);
            return 0;
        case 25:
            (void)bsr_matmat_pass2<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_uint*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_uint*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_uint*)a[13]);
            return 0;
        case 26:
            (void)bsr_matmat_pass2<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_long*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_long*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_long*)a[13]);
            return 0;
        case 27:
            (void)bsr_matmat_pass2<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ulong*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_ulong*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_ulong*)a[13]);
            return 0;
        case 28:
            (void)bsr_matmat_pass2<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_longlong*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_longlong*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_longlong*)a[13]);
            return 0;
        case 29:
            (void)bsr_matmat_pass2<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ulonglong*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_ulonglong*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_ulonglong*)a[13]);
            return 0;
        case 30:
            (void)bsr_matmat_pass2<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_float*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_float*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_float*)a[13]);
            return 0;
        case 31:
            (void)bsr_matmat_pass2<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_double*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_double*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_double*)a[13]);
            return 0;
        case 32:
            (void)bsr_matmat_pass2<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_longdouble*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_longdouble*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_longdouble*)a[13]);
            return 0;
        case 33:
            (void)bsr_matmat_pass2<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_cfloat_wrapper*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_cfloat_wrapper*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_cfloat_wrapper*)a[13]);
            return 0;
        case 34:
            (void)bsr_matmat_pass2<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_cdouble_wrapper*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_cdouble_wrapper*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_cdouble_wrapper*)a[13]);
            return 0;
        case 35:
            (void)bsr_matmat_pass2<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_clongdouble_wrapper*)a[7], (const npy_int64*)a[8], (const npy_int64*)a[9], (const npy_clongdouble_wrapper*)a[10], (npy_int64*)a[11], (npy_int64*)a[12], (npy_clongdouble_wrapper*)a[13]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_matvec_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_matvec<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_bool_wrapper*)a[7], (npy_bool_wrapper*)a[8]);
            return 0;
        case 2:
            (void)bsr_matvec<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_byte*)a[7], (npy_byte*)a[8]);
            return 0;
        case 3:
            (void)bsr_matvec<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_ubyte*)a[7], (npy_ubyte*)a[8]);
            return 0;
        case 4:
            (void)bsr_matvec<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_short*)a[7], (npy_short*)a[8]);
            return 0;
        case 5:
            (void)bsr_matvec<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_ushort*)a[7], (npy_ushort*)a[8]);
            return 0;
        case 6:
            (void)bsr_matvec<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int*)a[7], (npy_int*)a[8]);
            return 0;
        case 7:
            (void)bsr_matvec<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_uint*)a[7], (npy_uint*)a[8]);
            return 0;
        case 8:
            (void)bsr_matvec<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_long*)a[7], (npy_long*)a[8]);
            return 0;
        case 9:
            (void)bsr_matvec<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_ulong*)a[7], (npy_ulong*)a[8]);
            return 0;
        case 10:
            (void)bsr_matvec<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_longlong*)a[7], (npy_longlong*)a[8]);
            return 0;
        case 11:
            (void)bsr_matvec<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_ulonglong*)a[7], (npy_ulonglong*)a[8]);
            return 0;
        case 12:
            (void)bsr_matvec<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_float*)a[7], (npy_float*)a[8]);
            return 0;
        case 13:
            (void)bsr_matvec<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_double*)a[7], (npy_double*)a[8]);
            return 0;
        case 14:
            (void)bsr_matvec<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_longdouble*)a[7], (npy_longdouble*)a[8]);
            return 0;
        case 15:
            (void)bsr_matvec<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_cfloat_wrapper*)a[7], (npy_cfloat_wrapper*)a[8]);
            return 0;
        case 16:
            (void)bsr_matvec<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_cdouble_wrapper*)a[7], (npy_cdouble_wrapper*)a[8]);
            return 0;
        case 17:
            (void)bsr_matvec<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_clongdouble_wrapper*)a[7], (npy_clongdouble_wrapper*)a[8]);
            return 0;
        case 19:
            (void)bsr_matvec<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_bool_wrapper*)a[7], (npy_bool_wrapper*)a[8]);
            return 0;
        case 20:
            (void)bsr_matvec<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_byte*)a[7], (npy_byte*)a[8]);
            return 0;
        case 21:
            (void)bsr_matvec<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_ubyte*)a[7], (npy_ubyte*)a[8]);
            return 0;
        case 22:
            (void)bsr_matvec<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_short*)a[7], (npy_short*)a[8]);
            return 0;
        case 23:
            (void)bsr_matvec<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_ushort*)a[7], (npy_ushort*)a[8]);
            return 0;
        case 24:
            (void)bsr_matvec<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int*)a[7], (npy_int*)a[8]);
            return 0;
        case 25:
            (void)bsr_matvec<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_uint*)a[7], (npy_uint*)a[8]);
            return 0;
        case 26:
            (void)bsr_matvec<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_long*)a[7], (npy_long*)a[8]);
            return 0;
        case 27:
            (void)bsr_matvec<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_ulong*)a[7], (npy_ulong*)a[8]);
            return 0;
        case 28:
            (void)bsr_matvec<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_longlong*)a[7], (npy_longlong*)a[8]);
            return 0;
        case 29:
            (void)bsr_matvec<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_ulonglong*)a[7], (npy_ulonglong*)a[8]);
            return 0;
        case 30:
            (void)bsr_matvec<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_float*)a[7], (npy_float*)a[8]);
            return 0;
        case 31:
            (void)bsr_matvec<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_double*)a[7], (npy_double*)a[8]);
            return 0;
        case 32:
            (void)bsr_matvec<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_longdouble*)a[7], (npy_longdouble*)a[8]);
            return 0;
        case 33:
            (void)bsr_matvec<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_cfloat_wrapper*)a[7], (npy_cfloat_wrapper*)a[8]);
            return 0;
        case 34:
            (void)bsr_matvec<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_cdouble_wrapper*)a[7], (npy_cdouble_wrapper*)a[8]);
            return 0;
        case 35:
            (void)bsr_matvec<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_clongdouble_wrapper*)a[7], (npy_clongdouble_wrapper*)a[8]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_matvecs_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_matvecs<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_bool_wrapper*)a[7], (const npy_bool_wrapper*)a[8], (npy_bool_wrapper*)a[9]);
            return 0;
        case 2:
            (void)bsr_matvecs<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_byte*)a[7], (const npy_byte*)a[8], (npy_byte*)a[9]);
            return 0;
        case 3:
            (void)bsr_matvecs<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ubyte*)a[7], (const npy_ubyte*)a[8], (npy_ubyte*)a[9]);
            return 0;
        case 4:
            (void)bsr_matvecs<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_short*)a[7], (const npy_short*)a[8], (npy_short*)a[9]);
            return 0;
        case 5:
            (void)bsr_matvecs<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ushort*)a[7], (const npy_ushort*)a[8], (npy_ushort*)a[9]);
            return 0;
        case 6:
            (void)bsr_matvecs<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_int*)a[7], (const npy_int*)a[8], (npy_int*)a[9]);
            return 0;
        case 7:
            (void)bsr_matvecs<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_uint*)a[7], (const npy_uint*)a[8], (npy_uint*)a[9]);
            return 0;
        case 8:
            (void)bsr_matvecs<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_long*)a[7], (const npy_long*)a[8], (npy_long*)a[9]);
            return 0;
        case 9:
            (void)bsr_matvecs<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ulong*)a[7], (const npy_ulong*)a[8], (npy_ulong*)a[9]);
            return 0;
        case 10:
            (void)bsr_matvecs<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_longlong*)a[7], (const npy_longlong*)a[8], (npy_longlong*)a[9]);
            return 0;
        case 11:
            (void)bsr_matvecs<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_ulonglong*)a[7], (const npy_ulonglong*)a[8], (npy_ulonglong*)a[9]);
            return 0;
        case 12:
            (void)bsr_matvecs<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_float*)a[7], (const npy_float*)a[8], (npy_float*)a[9]);
            return 0;
        case 13:
            (void)bsr_matvecs<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_double*)a[7], (const npy_double*)a[8], (npy_double*)a[9]);
            return 0;
        case 14:
            (void)bsr_matvecs<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_longdouble*)a[7], (const npy_longdouble*)a[8], (npy_longdouble*)a[9]);
            return 0;
        case 15:
            (void)bsr_matvecs<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_cfloat_wrapper*)a[7], (const npy_cfloat_wrapper*)a[8], (npy_cfloat_wrapper*)a[9]);
            return 0;
        case 16:
            (void)bsr_matvecs<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_cdouble_wrapper*)a[7], (const npy_cdouble_wrapper*)a[8], (npy_cdouble_wrapper*)a[9]);
            return 0;
        case 17:
            (void)bsr_matvecs<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], *(const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int32*)a[6], (const npy_clongdouble_wrapper*)a[7], (const npy_clongdouble_wrapper*)a[8], (npy_clongdouble_wrapper*)a[9]);
            return 0;
        case 19:
            (void)bsr_matvecs<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_bool_wrapper*)a[7], (const npy_bool_wrapper*)a[8], (npy_bool_wrapper*)a[9]);
            return 0;
        case 20:
            (void)bsr_matvecs<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_byte*)a[7], (const npy_byte*)a[8], (npy_byte*)a[9]);
            return 0;
        case 21:
            (void)bsr_matvecs<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ubyte*)a[7], (const npy_ubyte*)a[8], (npy_ubyte*)a[9]);
            return 0;
        case 22:
            (void)bsr_matvecs<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_short*)a[7], (const npy_short*)a[8], (npy_short*)a[9]);
            return 0;
        case 23:
            (void)bsr_matvecs<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ushort*)a[7], (const npy_ushort*)a[8], (npy_ushort*)a[9]);
            return 0;
        case 24:
            (void)bsr_matvecs<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_int*)a[7], (const npy_int*)a[8], (npy_int*)a[9]);
            return 0;
        case 25:
            (void)bsr_matvecs<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_uint*)a[7], (const npy_uint*)a[8], (npy_uint*)a[9]);
            return 0;
        case 26:
            (void)bsr_matvecs<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_long*)a[7], (const npy_long*)a[8], (npy_long*)a[9]);
            return 0;
        case 27:
            (void)bsr_matvecs<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ulong*)a[7], (const npy_ulong*)a[8], (npy_ulong*)a[9]);
            return 0;
        case 28:
            (void)bsr_matvecs<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_longlong*)a[7], (const npy_longlong*)a[8], (npy_longlong*)a[9]);
            return 0;
        case 29:
            (void)bsr_matvecs<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_ulonglong*)a[7], (const npy_ulonglong*)a[8], (npy_ulonglong*)a[9]);
            return 0;
        case 30:
            (void)bsr_matvecs<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_float*)a[7], (const npy_float*)a[8], (npy_float*)a[9]);
            return 0;
        case 31:
            (void)bsr_matvecs<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_double*)a[7], (const npy_double*)a[8], (npy_double*)a[9]);
            return 0;
        case 32:
            (void)bsr_matvecs<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_longdouble*)a[7], (const npy_longdouble*)a[8], (npy_longdouble*)a[9]);
            return 0;
        case 33:
            (void)bsr_matvecs<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_cfloat_wrapper*)a[7], (const npy_cfloat_wrapper*)a[8], (npy_cfloat_wrapper*)a[9]);
            return 0;
        case 34:
            (void)bsr_matvecs<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_cdouble_wrapper*)a[7], (const npy_cdouble_wrapper*)a[8], (npy_cdouble_wrapper*)a[9]);
            return 0;
        case 35:
            (void)bsr_matvecs<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], *(const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int64*)a[6], (const npy_clongdouble_wrapper*)a[7], (const npy_clongdouble_wrapper*)a[8], (npy_clongdouble_wrapper*)a[9]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_elmul_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_elmul_bsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_elmul_bsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_byte*)a[12]);
            return 0;
        case 3:
            (void)bsr_elmul_bsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 4:
            (void)bsr_elmul_bsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_short*)a[12]);
            return 0;
        case 5:
            (void)bsr_elmul_bsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 6:
            (void)bsr_elmul_bsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_int*)a[12]);
            return 0;
        case 7:
            (void)bsr_elmul_bsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_uint*)a[12]);
            return 0;
        case 8:
            (void)bsr_elmul_bsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_long*)a[12]);
            return 0;
        case 9:
            (void)bsr_elmul_bsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 10:
            (void)bsr_elmul_bsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 11:
            (void)bsr_elmul_bsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 12:
            (void)bsr_elmul_bsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_float*)a[12]);
            return 0;
        case 13:
            (void)bsr_elmul_bsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_double*)a[12]);
            return 0;
        case 14:
            (void)bsr_elmul_bsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 15:
            (void)bsr_elmul_bsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_elmul_bsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_elmul_bsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_elmul_bsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_elmul_bsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_byte*)a[12]);
            return 0;
        case 21:
            (void)bsr_elmul_bsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 22:
            (void)bsr_elmul_bsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_short*)a[12]);
            return 0;
        case 23:
            (void)bsr_elmul_bsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 24:
            (void)bsr_elmul_bsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_int*)a[12]);
            return 0;
        case 25:
            (void)bsr_elmul_bsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_uint*)a[12]);
            return 0;
        case 26:
            (void)bsr_elmul_bsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_long*)a[12]);
            return 0;
        case 27:
            (void)bsr_elmul_bsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 28:
            (void)bsr_elmul_bsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 29:
            (void)bsr_elmul_bsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 30:
            (void)bsr_elmul_bsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_float*)a[12]);
            return 0;
        case 31:
            (void)bsr_elmul_bsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_double*)a[12]);
            return 0;
        case 32:
            (void)bsr_elmul_bsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 33:
            (void)bsr_elmul_bsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_elmul_bsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_elmul_bsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_eldiv_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_eldiv_bsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_eldiv_bsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_byte*)a[12]);
            return 0;
        case 3:
            (void)bsr_eldiv_bsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 4:
            (void)bsr_eldiv_bsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_short*)a[12]);
            return 0;
        case 5:
            (void)bsr_eldiv_bsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 6:
            (void)bsr_eldiv_bsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_int*)a[12]);
            return 0;
        case 7:
            (void)bsr_eldiv_bsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_uint*)a[12]);
            return 0;
        case 8:
            (void)bsr_eldiv_bsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_long*)a[12]);
            return 0;
        case 9:
            (void)bsr_eldiv_bsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 10:
            (void)bsr_eldiv_bsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 11:
            (void)bsr_eldiv_bsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 12:
            (void)bsr_eldiv_bsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_float*)a[12]);
            return 0;
        case 13:
            (void)bsr_eldiv_bsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_double*)a[12]);
            return 0;
        case 14:
            (void)bsr_eldiv_bsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 15:
            (void)bsr_eldiv_bsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_eldiv_bsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_eldiv_bsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_eldiv_bsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_eldiv_bsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_byte*)a[12]);
            return 0;
        case 21:
            (void)bsr_eldiv_bsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 22:
            (void)bsr_eldiv_bsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_short*)a[12]);
            return 0;
        case 23:
            (void)bsr_eldiv_bsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 24:
            (void)bsr_eldiv_bsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_int*)a[12]);
            return 0;
        case 25:
            (void)bsr_eldiv_bsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_uint*)a[12]);
            return 0;
        case 26:
            (void)bsr_eldiv_bsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_long*)a[12]);
            return 0;
        case 27:
            (void)bsr_eldiv_bsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 28:
            (void)bsr_eldiv_bsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 29:
            (void)bsr_eldiv_bsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 30:
            (void)bsr_eldiv_bsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_float*)a[12]);
            return 0;
        case 31:
            (void)bsr_eldiv_bsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_double*)a[12]);
            return 0;
        case 32:
            (void)bsr_eldiv_bsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 33:
            (void)bsr_eldiv_bsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_eldiv_bsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_eldiv_bsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_plus_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_plus_bsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_plus_bsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_byte*)a[12]);
            return 0;
        case 3:
            (void)bsr_plus_bsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 4:
            (void)bsr_plus_bsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_short*)a[12]);
            return 0;
        case 5:
            (void)bsr_plus_bsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 6:
            (void)bsr_plus_bsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_int*)a[12]);
            return 0;
        case 7:
            (void)bsr_plus_bsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_uint*)a[12]);
            return 0;
        case 8:
            (void)bsr_plus_bsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_long*)a[12]);
            return 0;
        case 9:
            (void)bsr_plus_bsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 10:
            (void)bsr_plus_bsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 11:
            (void)bsr_plus_bsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 12:
            (void)bsr_plus_bsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_float*)a[12]);
            return 0;
        case 13:
            (void)bsr_plus_bsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_double*)a[12]);
            return 0;
        case 14:
            (void)bsr_plus_bsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 15:
            (void)bsr_plus_bsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_plus_bsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_plus_bsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_plus_bsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_plus_bsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_byte*)a[12]);
            return 0;
        case 21:
            (void)bsr_plus_bsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 22:
            (void)bsr_plus_bsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_short*)a[12]);
            return 0;
        case 23:
            (void)bsr_plus_bsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 24:
            (void)bsr_plus_bsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_int*)a[12]);
            return 0;
        case 25:
            (void)bsr_plus_bsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_uint*)a[12]);
            return 0;
        case 26:
            (void)bsr_plus_bsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_long*)a[12]);
            return 0;
        case 27:
            (void)bsr_plus_bsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 28:
            (void)bsr_plus_bsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 29:
            (void)bsr_plus_bsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 30:
            (void)bsr_plus_bsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_float*)a[12]);
            return 0;
        case 31:
            (void)bsr_plus_bsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_double*)a[12]);
            return 0;
        case 32:
            (void)bsr_plus_bsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 33:
            (void)bsr_plus_bsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_plus_bsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_plus_bsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_minus_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_minus_bsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_minus_bsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_byte*)a[12]);
            return 0;
        case 3:
            (void)bsr_minus_bsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 4:
            (void)bsr_minus_bsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_short*)a[12]);
            return 0;
        case 5:
            (void)bsr_minus_bsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 6:
            (void)bsr_minus_bsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_int*)a[12]);
            return 0;
        case 7:
            (void)bsr_minus_bsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_uint*)a[12]);
            return 0;
        case 8:
            (void)bsr_minus_bsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_long*)a[12]);
            return 0;
        case 9:
            (void)bsr_minus_bsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 10:
            (void)bsr_minus_bsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 11:
            (void)bsr_minus_bsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 12:
            (void)bsr_minus_bsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_float*)a[12]);
            return 0;
        case 13:
            (void)bsr_minus_bsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_double*)a[12]);
            return 0;
        case 14:
            (void)bsr_minus_bsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 15:
            (void)bsr_minus_bsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_minus_bsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_minus_bsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_minus_bsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_minus_bsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_byte*)a[12]);
            return 0;
        case 21:
            (void)bsr_minus_bsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 22:
            (void)bsr_minus_bsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_short*)a[12]);
            return 0;
        case 23:
            (void)bsr_minus_bsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 24:
            (void)bsr_minus_bsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_int*)a[12]);
            return 0;
        case 25:
            (void)bsr_minus_bsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_uint*)a[12]);
            return 0;
        case 26:
            (void)bsr_minus_bsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_long*)a[12]);
            return 0;
        case 27:
            (void)bsr_minus_bsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 28:
            (void)bsr_minus_bsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 29:
            (void)bsr_minus_bsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 30:
            (void)bsr_minus_bsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_float*)a[12]);
            return 0;
        case 31:
            (void)bsr_minus_bsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_double*)a[12]);
            return 0;
        case 32:
            (void)bsr_minus_bsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 33:
            (void)bsr_minus_bsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_minus_bsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_minus_bsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_maximum_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_maximum_bsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_maximum_bsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_byte*)a[12]);
            return 0;
        case 3:
            (void)bsr_maximum_bsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 4:
            (void)bsr_maximum_bsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_short*)a[12]);
            return 0;
        case 5:
            (void)bsr_maximum_bsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 6:
            (void)bsr_maximum_bsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_int*)a[12]);
            return 0;
        case 7:
            (void)bsr_maximum_bsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_uint*)a[12]);
            return 0;
        case 8:
            (void)bsr_maximum_bsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_long*)a[12]);
            return 0;
        case 9:
            (void)bsr_maximum_bsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 10:
            (void)bsr_maximum_bsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 11:
            (void)bsr_maximum_bsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 12:
            (void)bsr_maximum_bsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_float*)a[12]);
            return 0;
        case 13:
            (void)bsr_maximum_bsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_double*)a[12]);
            return 0;
        case 14:
            (void)bsr_maximum_bsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 15:
            (void)bsr_maximum_bsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_maximum_bsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_maximum_bsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_maximum_bsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_maximum_bsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_byte*)a[12]);
            return 0;
        case 21:
            (void)bsr_maximum_bsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 22:
            (void)bsr_maximum_bsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_short*)a[12]);
            return 0;
        case 23:
            (void)bsr_maximum_bsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 24:
            (void)bsr_maximum_bsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_int*)a[12]);
            return 0;
        case 25:
            (void)bsr_maximum_bsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_uint*)a[12]);
            return 0;
        case 26:
            (void)bsr_maximum_bsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_long*)a[12]);
            return 0;
        case 27:
            (void)bsr_maximum_bsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 28:
            (void)bsr_maximum_bsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 29:
            (void)bsr_maximum_bsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 30:
            (void)bsr_maximum_bsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_float*)a[12]);
            return 0;
        case 31:
            (void)bsr_maximum_bsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_double*)a[12]);
            return 0;
        case 32:
            (void)bsr_maximum_bsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 33:
            (void)bsr_maximum_bsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_maximum_bsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_maximum_bsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_minimum_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_minimum_bsr<npy_int32,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_minimum_bsr<npy_int32,npy_byte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_byte*)a[12]);
            return 0;
        case 3:
            (void)bsr_minimum_bsr<npy_int32,npy_ubyte>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 4:
            (void)bsr_minimum_bsr<npy_int32,npy_short>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_short*)a[12]);
            return 0;
        case 5:
            (void)bsr_minimum_bsr<npy_int32,npy_ushort>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 6:
            (void)bsr_minimum_bsr<npy_int32,npy_int>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_int*)a[12]);
            return 0;
        case 7:
            (void)bsr_minimum_bsr<npy_int32,npy_uint>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_uint*)a[12]);
            return 0;
        case 8:
            (void)bsr_minimum_bsr<npy_int32,npy_long>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_long*)a[12]);
            return 0;
        case 9:
            (void)bsr_minimum_bsr<npy_int32,npy_ulong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 10:
            (void)bsr_minimum_bsr<npy_int32,npy_longlong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 11:
            (void)bsr_minimum_bsr<npy_int32,npy_ulonglong>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 12:
            (void)bsr_minimum_bsr<npy_int32,npy_float>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_float*)a[12]);
            return 0;
        case 13:
            (void)bsr_minimum_bsr<npy_int32,npy_double>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_double*)a[12]);
            return 0;
        case 14:
            (void)bsr_minimum_bsr<npy_int32,npy_longdouble>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 15:
            (void)bsr_minimum_bsr<npy_int32,npy_cfloat_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_minimum_bsr<npy_int32,npy_cdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_minimum_bsr<npy_int32,npy_clongdouble_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_minimum_bsr<npy_int64,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_minimum_bsr<npy_int64,npy_byte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_byte*)a[12]);
            return 0;
        case 21:
            (void)bsr_minimum_bsr<npy_int64,npy_ubyte>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ubyte*)a[12]);
            return 0;
        case 22:
            (void)bsr_minimum_bsr<npy_int64,npy_short>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_short*)a[12]);
            return 0;
        case 23:
            (void)bsr_minimum_bsr<npy_int64,npy_ushort>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ushort*)a[12]);
            return 0;
        case 24:
            (void)bsr_minimum_bsr<npy_int64,npy_int>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_int*)a[12]);
            return 0;
        case 25:
            (void)bsr_minimum_bsr<npy_int64,npy_uint>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_uint*)a[12]);
            return 0;
        case 26:
            (void)bsr_minimum_bsr<npy_int64,npy_long>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_long*)a[12]);
            return 0;
        case 27:
            (void)bsr_minimum_bsr<npy_int64,npy_ulong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulong*)a[12]);
            return 0;
        case 28:
            (void)bsr_minimum_bsr<npy_int64,npy_longlong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longlong*)a[12]);
            return 0;
        case 29:
            (void)bsr_minimum_bsr<npy_int64,npy_ulonglong>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_ulonglong*)a[12]);
            return 0;
        case 30:
            (void)bsr_minimum_bsr<npy_int64,npy_float>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_float*)a[12]);
            return 0;
        case 31:
            (void)bsr_minimum_bsr<npy_int64,npy_double>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_double*)a[12]);
            return 0;
        case 32:
            (void)bsr_minimum_bsr<npy_int64,npy_longdouble>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_longdouble*)a[12]);
            return 0;
        case 33:
            (void)bsr_minimum_bsr<npy_int64,npy_cfloat_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cfloat_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_minimum_bsr<npy_int64,npy_cdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_cdouble_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_minimum_bsr<npy_int64,npy_clongdouble_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_clongdouble_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_ne_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_ne_bsr<npy_int32,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_ne_bsr<npy_int32,npy_byte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 3:
            (void)bsr_ne_bsr<npy_int32,npy_ubyte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 4:
            (void)bsr_ne_bsr<npy_int32,npy_short,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 5:
            (void)bsr_ne_bsr<npy_int32,npy_ushort,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 6:
            (void)bsr_ne_bsr<npy_int32,npy_int,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 7:
            (void)bsr_ne_bsr<npy_int32,npy_uint,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 8:
            (void)bsr_ne_bsr<npy_int32,npy_long,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 9:
            (void)bsr_ne_bsr<npy_int32,npy_ulong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 10:
            (void)bsr_ne_bsr<npy_int32,npy_longlong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 11:
            (void)bsr_ne_bsr<npy_int32,npy_ulonglong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 12:
            (void)bsr_ne_bsr<npy_int32,npy_float,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 13:
            (void)bsr_ne_bsr<npy_int32,npy_double,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 14:
            (void)bsr_ne_bsr<npy_int32,npy_longdouble,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 15:
            (void)bsr_ne_bsr<npy_int32,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_ne_bsr<npy_int32,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_ne_bsr<npy_int32,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_ne_bsr<npy_int64,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_ne_bsr<npy_int64,npy_byte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 21:
            (void)bsr_ne_bsr<npy_int64,npy_ubyte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 22:
            (void)bsr_ne_bsr<npy_int64,npy_short,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 23:
            (void)bsr_ne_bsr<npy_int64,npy_ushort,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 24:
            (void)bsr_ne_bsr<npy_int64,npy_int,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 25:
            (void)bsr_ne_bsr<npy_int64,npy_uint,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 26:
            (void)bsr_ne_bsr<npy_int64,npy_long,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 27:
            (void)bsr_ne_bsr<npy_int64,npy_ulong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 28:
            (void)bsr_ne_bsr<npy_int64,npy_longlong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 29:
            (void)bsr_ne_bsr<npy_int64,npy_ulonglong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 30:
            (void)bsr_ne_bsr<npy_int64,npy_float,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 31:
            (void)bsr_ne_bsr<npy_int64,npy_double,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 32:
            (void)bsr_ne_bsr<npy_int64,npy_longdouble,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 33:
            (void)bsr_ne_bsr<npy_int64,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_ne_bsr<npy_int64,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_ne_bsr<npy_int64,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_lt_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_lt_bsr<npy_int32,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_lt_bsr<npy_int32,npy_byte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 3:
            (void)bsr_lt_bsr<npy_int32,npy_ubyte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 4:
            (void)bsr_lt_bsr<npy_int32,npy_short,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 5:
            (void)bsr_lt_bsr<npy_int32,npy_ushort,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 6:
            (void)bsr_lt_bsr<npy_int32,npy_int,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 7:
            (void)bsr_lt_bsr<npy_int32,npy_uint,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 8:
            (void)bsr_lt_bsr<npy_int32,npy_long,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 9:
            (void)bsr_lt_bsr<npy_int32,npy_ulong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 10:
            (void)bsr_lt_bsr<npy_int32,npy_longlong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 11:
            (void)bsr_lt_bsr<npy_int32,npy_ulonglong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 12:
            (void)bsr_lt_bsr<npy_int32,npy_float,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 13:
            (void)bsr_lt_bsr<npy_int32,npy_double,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 14:
            (void)bsr_lt_bsr<npy_int32,npy_longdouble,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 15:
            (void)bsr_lt_bsr<npy_int32,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_lt_bsr<npy_int32,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_lt_bsr<npy_int32,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_lt_bsr<npy_int64,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_lt_bsr<npy_int64,npy_byte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 21:
            (void)bsr_lt_bsr<npy_int64,npy_ubyte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 22:
            (void)bsr_lt_bsr<npy_int64,npy_short,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 23:
            (void)bsr_lt_bsr<npy_int64,npy_ushort,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 24:
            (void)bsr_lt_bsr<npy_int64,npy_int,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 25:
            (void)bsr_lt_bsr<npy_int64,npy_uint,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 26:
            (void)bsr_lt_bsr<npy_int64,npy_long,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 27:
            (void)bsr_lt_bsr<npy_int64,npy_ulong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 28:
            (void)bsr_lt_bsr<npy_int64,npy_longlong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 29:
            (void)bsr_lt_bsr<npy_int64,npy_ulonglong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 30:
            (void)bsr_lt_bsr<npy_int64,npy_float,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 31:
            (void)bsr_lt_bsr<npy_int64,npy_double,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 32:
            (void)bsr_lt_bsr<npy_int64,npy_longdouble,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 33:
            (void)bsr_lt_bsr<npy_int64,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_lt_bsr<npy_int64,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_lt_bsr<npy_int64,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_gt_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_gt_bsr<npy_int32,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_gt_bsr<npy_int32,npy_byte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 3:
            (void)bsr_gt_bsr<npy_int32,npy_ubyte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 4:
            (void)bsr_gt_bsr<npy_int32,npy_short,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 5:
            (void)bsr_gt_bsr<npy_int32,npy_ushort,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 6:
            (void)bsr_gt_bsr<npy_int32,npy_int,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 7:
            (void)bsr_gt_bsr<npy_int32,npy_uint,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 8:
            (void)bsr_gt_bsr<npy_int32,npy_long,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 9:
            (void)bsr_gt_bsr<npy_int32,npy_ulong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 10:
            (void)bsr_gt_bsr<npy_int32,npy_longlong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 11:
            (void)bsr_gt_bsr<npy_int32,npy_ulonglong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 12:
            (void)bsr_gt_bsr<npy_int32,npy_float,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 13:
            (void)bsr_gt_bsr<npy_int32,npy_double,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 14:
            (void)bsr_gt_bsr<npy_int32,npy_longdouble,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 15:
            (void)bsr_gt_bsr<npy_int32,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_gt_bsr<npy_int32,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_gt_bsr<npy_int32,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_gt_bsr<npy_int64,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_gt_bsr<npy_int64,npy_byte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 21:
            (void)bsr_gt_bsr<npy_int64,npy_ubyte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 22:
            (void)bsr_gt_bsr<npy_int64,npy_short,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 23:
            (void)bsr_gt_bsr<npy_int64,npy_ushort,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 24:
            (void)bsr_gt_bsr<npy_int64,npy_int,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 25:
            (void)bsr_gt_bsr<npy_int64,npy_uint,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 26:
            (void)bsr_gt_bsr<npy_int64,npy_long,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 27:
            (void)bsr_gt_bsr<npy_int64,npy_ulong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 28:
            (void)bsr_gt_bsr<npy_int64,npy_longlong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 29:
            (void)bsr_gt_bsr<npy_int64,npy_ulonglong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 30:
            (void)bsr_gt_bsr<npy_int64,npy_float,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 31:
            (void)bsr_gt_bsr<npy_int64,npy_double,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 32:
            (void)bsr_gt_bsr<npy_int64,npy_longdouble,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 33:
            (void)bsr_gt_bsr<npy_int64,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_gt_bsr<npy_int64,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_gt_bsr<npy_int64,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_le_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_le_bsr<npy_int32,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_le_bsr<npy_int32,npy_byte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 3:
            (void)bsr_le_bsr<npy_int32,npy_ubyte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 4:
            (void)bsr_le_bsr<npy_int32,npy_short,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 5:
            (void)bsr_le_bsr<npy_int32,npy_ushort,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 6:
            (void)bsr_le_bsr<npy_int32,npy_int,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 7:
            (void)bsr_le_bsr<npy_int32,npy_uint,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 8:
            (void)bsr_le_bsr<npy_int32,npy_long,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 9:
            (void)bsr_le_bsr<npy_int32,npy_ulong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 10:
            (void)bsr_le_bsr<npy_int32,npy_longlong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 11:
            (void)bsr_le_bsr<npy_int32,npy_ulonglong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 12:
            (void)bsr_le_bsr<npy_int32,npy_float,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 13:
            (void)bsr_le_bsr<npy_int32,npy_double,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 14:
            (void)bsr_le_bsr<npy_int32,npy_longdouble,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 15:
            (void)bsr_le_bsr<npy_int32,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_le_bsr<npy_int32,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_le_bsr<npy_int32,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_le_bsr<npy_int64,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_le_bsr<npy_int64,npy_byte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 21:
            (void)bsr_le_bsr<npy_int64,npy_ubyte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 22:
            (void)bsr_le_bsr<npy_int64,npy_short,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 23:
            (void)bsr_le_bsr<npy_int64,npy_ushort,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 24:
            (void)bsr_le_bsr<npy_int64,npy_int,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 25:
            (void)bsr_le_bsr<npy_int64,npy_uint,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 26:
            (void)bsr_le_bsr<npy_int64,npy_long,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 27:
            (void)bsr_le_bsr<npy_int64,npy_ulong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 28:
            (void)bsr_le_bsr<npy_int64,npy_longlong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 29:
            (void)bsr_le_bsr<npy_int64,npy_ulonglong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 30:
            (void)bsr_le_bsr<npy_int64,npy_float,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 31:
            (void)bsr_le_bsr<npy_int64,npy_double,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 32:
            (void)bsr_le_bsr<npy_int64,npy_longdouble,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 33:
            (void)bsr_le_bsr<npy_int64,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_le_bsr<npy_int64,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_le_bsr<npy_int64,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

static PY_LONG_LONG bsr_ge_bsr_thunk(int I_typenum, int T_typenum, void **a)
{
    int j = get_thunk_case(I_typenum, T_typenum);
    switch (j) {
        case 1:
            (void)bsr_ge_bsr<npy_int32,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_bool_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 2:
            (void)bsr_ge_bsr<npy_int32,npy_byte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_byte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_byte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 3:
            (void)bsr_ge_bsr<npy_int32,npy_ubyte,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ubyte*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ubyte*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 4:
            (void)bsr_ge_bsr<npy_int32,npy_short,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_short*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_short*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 5:
            (void)bsr_ge_bsr<npy_int32,npy_ushort,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ushort*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ushort*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 6:
            (void)bsr_ge_bsr<npy_int32,npy_int,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_int*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_int*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 7:
            (void)bsr_ge_bsr<npy_int32,npy_uint,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_uint*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_uint*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 8:
            (void)bsr_ge_bsr<npy_int32,npy_long,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_long*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_long*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 9:
            (void)bsr_ge_bsr<npy_int32,npy_ulong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 10:
            (void)bsr_ge_bsr<npy_int32,npy_longlong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longlong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longlong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 11:
            (void)bsr_ge_bsr<npy_int32,npy_ulonglong,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_ulonglong*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_ulonglong*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 12:
            (void)bsr_ge_bsr<npy_int32,npy_float,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_float*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_float*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 13:
            (void)bsr_ge_bsr<npy_int32,npy_double,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_double*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_double*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 14:
            (void)bsr_ge_bsr<npy_int32,npy_longdouble,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_longdouble*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_longdouble*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 15:
            (void)bsr_ge_bsr<npy_int32,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 16:
            (void)bsr_ge_bsr<npy_int32,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 17:
            (void)bsr_ge_bsr<npy_int32,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int32*)a[0], *(const npy_int32*)a[1], *(const npy_int32*)a[2], *(const npy_int32*)a[3], (const npy_int32*)a[4], (const npy_int32*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int32*)a[7], (const npy_int32*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int32*)a[10], (npy_int32*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 19:
            (void)bsr_ge_bsr<npy_int64,npy_bool_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_bool_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_bool_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 20:
            (void)bsr_ge_bsr<npy_int64,npy_byte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_byte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_byte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 21:
            (void)bsr_ge_bsr<npy_int64,npy_ubyte,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ubyte*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ubyte*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 22:
            (void)bsr_ge_bsr<npy_int64,npy_short,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_short*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_short*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 23:
            (void)bsr_ge_bsr<npy_int64,npy_ushort,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ushort*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ushort*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 24:
            (void)bsr_ge_bsr<npy_int64,npy_int,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_int*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_int*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 25:
            (void)bsr_ge_bsr<npy_int64,npy_uint,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_uint*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_uint*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 26:
            (void)bsr_ge_bsr<npy_int64,npy_long,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_long*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_long*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 27:
            (void)bsr_ge_bsr<npy_int64,npy_ulong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 28:
            (void)bsr_ge_bsr<npy_int64,npy_longlong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longlong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longlong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 29:
            (void)bsr_ge_bsr<npy_int64,npy_ulonglong,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_ulonglong*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_ulonglong*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 30:
            (void)bsr_ge_bsr<npy_int64,npy_float,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_float*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_float*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 31:
            (void)bsr_ge_bsr<npy_int64,npy_double,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_double*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_double*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 32:
            (void)bsr_ge_bsr<npy_int64,npy_longdouble,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_longdouble*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_longdouble*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 33:
            (void)bsr_ge_bsr<npy_int64,npy_cfloat_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cfloat_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cfloat_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 34:
            (void)bsr_ge_bsr<npy_int64,npy_cdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_cdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_cdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
        case 35:
            (void)bsr_ge_bsr<npy_int64,npy_clongdouble_wrapper,npy_bool_wrapper>(*(const npy_int64*)a[0], *(const npy_int64*)a[1], *(const npy_int64*)a[2], *(const npy_int64*)a[3], (const npy_int64*)a[4], (const npy_int64*)a[5], (const npy_clongdouble_wrapper*)a[6], (const npy_int64*)a[7], (const npy_int64*)a[8], (const npy_clongdouble_wrapper*)a[9], (npy_int64*)a[10], (npy_int64*)a[11], (npy_bool_wrapper*)a[12]);
            return 0;
    default:
        throw std::runtime_error("internal error: invalid argument typenums");
    }
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_diagonal_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiiIIT*T", bsr_diagonal_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_tocsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIIT*I*I*T", bsr_tocsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_scale_rows_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiII*TT", bsr_scale_rows_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_scale_columns_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiII*TT", bsr_scale_columns_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_sort_indices_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiii*I*I*T", bsr_sort_indices_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_transpose_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIIT*I*I*T", bsr_transpose_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_matmat_pass2_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiiIITIIT*I*I*T", bsr_matmat_pass2_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_matvec_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITT*T", bsr_matvec_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_matvecs_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiiIITT*T", bsr_matvecs_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_elmul_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*T", bsr_elmul_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_eldiv_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*T", bsr_eldiv_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_plus_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*T", bsr_plus_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_minus_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*T", bsr_minus_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_maximum_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*T", bsr_maximum_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_minimum_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*T", bsr_minimum_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_ne_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*B", bsr_ne_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_lt_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*B", bsr_lt_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_gt_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*B", bsr_gt_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_le_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*B", bsr_le_bsr_thunk, args);
}

NPY_VISIBILITY_HIDDEN PyObject *
bsr_ge_bsr_method(PyObject *self, PyObject *args)
{
    return call_thunk('v', "iiiiIITIIT*I*I*B", bsr_ge_bsr_thunk, args);
}
