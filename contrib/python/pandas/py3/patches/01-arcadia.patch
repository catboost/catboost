--- contrib/python/pandas/py3/pandas/_libs/src/klib/khash_python.h	(index)
+++ contrib/python/pandas/py3/pandas/_libs/src/klib/khash_python.h	(working tree)
@@ -23,7 +23,7 @@ typedef npy_complex128 khcomplex128_t;
 
 
 static const int KHASH_TRACE_DOMAIN = 424242;
-void *traced_malloc(size_t size){
+static void *traced_malloc(size_t size){
     void * ptr = malloc(size);
     if(ptr!=NULL){
         PyTraceMalloc_Track(KHASH_TRACE_DOMAIN, (uintptr_t)ptr, size);
@@ -31,7 +31,7 @@ void *traced_malloc(size_t size){
     return ptr;
 }
 
-void *traced_calloc(size_t num, size_t size){
+static void *traced_calloc(size_t num, size_t size){
     void * ptr = calloc(num, size);
     if(ptr!=NULL){
         PyTraceMalloc_Track(KHASH_TRACE_DOMAIN, (uintptr_t)ptr, num*size);
@@ -39,7 +39,7 @@ void *traced_calloc(size_t num, size_t size){
     return ptr;
 }
 
-void *traced_realloc(void* old_ptr, size_t size){
+static void *traced_realloc(void* old_ptr, size_t size){
     void * ptr = realloc(old_ptr, size);
     if(ptr!=NULL){
         if(old_ptr != ptr){
@@ -50,7 +50,7 @@ void *traced_realloc(void* old_ptr, size_t size){
     return ptr;
 }
 
-void traced_free(void* ptr){
+static void traced_free(void* ptr){
     if(ptr!=NULL){
         PyTraceMalloc_Untrack(KHASH_TRACE_DOMAIN, (uintptr_t)ptr);
     }
--- contrib/python/pandas/py3/pandas/_libs/src/ujson/python/date_conversions.c	(index)
+++ contrib/python/pandas/py3/pandas/_libs/src/ujson/python/date_conversions.c	(working tree)
@@ -9,8 +9,8 @@ The full license is in the LICENSE file, distributed with this software.
 // but which don't interact with JSON objects directly
 
 #include "date_conversions.h"
-#include <../../../tslibs/src/datetime/np_datetime.h>
-#include <../../../tslibs/src/datetime/np_datetime_strings.h>
+#include "../../../tslibs/src/datetime/np_datetime.h"
+#include "../../../tslibs/src/datetime/np_datetime_strings.h"
 
 /*
  * Function: scaleNanosecToUnit
--- contrib/python/pandas/py3/pandas/_libs/tslibs/util.pxd	(index)
+++ contrib/python/pandas/py3/pandas/_libs/tslibs/util.pxd	(working tree)
@@ -4,7 +4,7 @@ from cpython.object cimport PyTypeObject
 
 cdef extern from *:
     """
-    PyObject* char_to_string(const char* data) {
+    static PyObject* char_to_string(const char* data) {
         return PyUnicode_FromString(data);
     }
     """
--- contrib/python/pandas/py3/pandas/compat/_optional.py	(index)
+++ contrib/python/pandas/py3/pandas/compat/_optional.py	(working tree)
@@ -36,7 +36,7 @@ VERSIONS = {
     "s3fs": "0.4.0",
     "scipy": "1.4.1",
     "snappy": "0.6.0",
-    "sqlalchemy": "1.4.0",
+    "sqlalchemy": "1.2.0",
     "tables": "3.6.1",
     "tabulate": "0.8.7",
     "xarray": "0.15.1",
