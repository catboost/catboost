--- contrib/python/importlib-metadata/py3/importlib_metadata/__init__.py	(index)
+++ contrib/python/importlib-metadata/py3/importlib_metadata/__init__.py	(working tree)
@@ -29,6 +29,12 @@ from importlib.abc import MetaPathFinder
 from itertools import starmap
 from typing import Any, List, Mapping, Optional, TypeVar, Union
 
+try:
+    import library.python.resource
+    ARCADIA = True
+except ImportError:
+    ARCADIA = False
+
 
 __all__ = [
     'Distribution',
@@ -766,7 +772,7 @@ class Prepared:
         return bool(self.name)
 
 
-#@install
+@install(ARCADIA == False)
 class MetadataPathFinder(NullFinder, DistributionFinder):
     """A degenerate finder for distribution packages on the file system.
 
@@ -839,7 +845,7 @@ class ArcadiaDistribution(Distribution):
         return '{}{}'.format(self.prefix, path)
 
 
-@install
+@install(ARCADIA == True)
 class ArcadiaMetadataFinder(NullFinder, DistributionFinder):
 
     prefixes = {}
--- contrib/python/importlib-metadata/py3/importlib_metadata/_compat.py	(index)
+++ contrib/python/importlib-metadata/py3/importlib_metadata/_compat.py	(working tree)
@@ -15,17 +15,20 @@ except ImportError:  # pragma: no cover
     from typing_extensions import Protocol  # type: ignore
 
 
-def install(cls):
-    """
-    Class decorator for installation on sys.meta_path.
-
-    Adds the backport DistributionFinder to sys.meta_path and
-    attempts to disable the finder functionality of the stdlib
-    DistributionFinder.
-    """
-    sys.meta_path.append(cls())
-    disable_stdlib_finder()
-    return cls
+def install(flag):
+    def dec_install(cls):
+        """
+        Class decorator for installation on sys.meta_path.
+
+        Adds the backport DistributionFinder to sys.meta_path and
+        attempts to disable the finder functionality of the stdlib
+        DistributionFinder.
+        """
+        if flag:
+            sys.meta_path.append(cls())
+            disable_stdlib_finder()
+        return cls
+    return dec_install
 
 
 def disable_stdlib_finder():
