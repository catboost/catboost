# build/platform/cuda (include/ and extras/CUPTI/include/)
- includes:
  - cooperative_groups.h
  - cuComplex.h
  # Though cub is provided as a part of CUDA HPC SDK,
  # we would like to be updatable independently.
  # Hence we are using it directly from Arcadia.
  # This sysincl enforces such usage.
  - cub/cub.cuh: contrib/libs/nvidia/cub/cub/cub.cuh
  - cublas.h
  - cublasLt.h
  - cublas_v2.h
  - cuda.h
  - cuda_bf16.h
  - cuda_fp16.h
  - cuda_gl_interop.h
  - cuda_occupancy.h
  - cuda_runtime.h
  - cuda_runtime_api.h
  - cufft.h
  - cupti.h
  - curand.h
  - curand_kernel.h
  - curand_mtgp32_host.h
  - curand_mtgp32dc_p_11213.h
  - cusolverDn.h
  - cusparse.h
  - driver_types.h
  - host_defines.h
  - library_types.h
  - math_constants.h
  - nvrtc.h
  - npp.h
  - nppi.h
  - nvToolsExt.h
  # Though thrust is provided as a part of CUDA HPC SDK,
  # we would like to be updatable independently.
  # Hence we are using it directly from Arcadia.
  # This sysincl enforces such usage.
  - thrust/iterator/iterator_traits.h: contrib/libs/nvidia/thrust/thrust/iterator/iterator_traits.h
  - thrust/iterator/iterator_facade.h: contrib/libs/nvidia/thrust/thrust/iterator/iterator_facade.h
  - thrust/system/cuda/detail/core/triple_chevron_launch.h: contrib/libs/nvidia/thrust/thrust/system/cuda/detail/core/triple_chevron_launch.h
  - thrust/version.h: contrib/libs/nvidia/thrust/thrust/version.h
  - vector_types.h
# These headers should be provided by TensorRT.
# Proper solution must be found in DTCC-171
- source_filter: "^contrib/libs/tf-2.4/.*"
  includes:
  - NvInfer.h
  - NvInferPlugin.h
# Add support nvrtc
- source_filter: "^contrib/libs/nvidia/cutlass/.*"
  includes:
  - cuda/std/cassert
  - cuda/std/cmath
  - cuda/std/cstdint
