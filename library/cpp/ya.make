

RECURSE(
    accurate_accumulate
    binsaver
    blockcodecs
    build_info
    cache
    case_insensitive_string
    cgiparam
    charset
    chromium_trace
    colorizer
    containers
    coroutine
    cppparser
    cpuid_check
    dbg_output
    deprecated
    diff
    digest
    dns
    dot_product
    dot_product/bench
    dot_product/ut
    enumbitset
    fast_exp
    fast_exp/benchmark
    fast_exp/ut
    fast_log
    float16
    float16/ut
    getopt
    grid_creator
    grid_creator/fuzz
    grid_creator/ut
    hnsw
    http
    iterator
    json
    json/fast_sax
    json/flex_buffers
    json/flex_buffers/ut
    l1_distance
    l1_distance/bench
    l1_distance/ut
    l2_distance
    l2_distance/bench
    l2_distance/ut
    langmask
    langmask/proto
    langmask/serialization
    langmask/ut
    langs
    langs/ut
    lcs
    lfalloc
    lfalloc/dbg
    lfalloc/dbg_info
    lfalloc/yt
    linear_regression
    logger
    malloc
    neh
    neh/asio/ut
    neh/ut
    netliba
    object_factory
    on_disk
    online_hnsw
    openssl
    packers
    par
    pop_count
    resource
    sse
    statistics
    statistics/ut
    streams
    string_utils
    svnversion
    terminate_handler
    testing
    text_processing
    threading
    token
    token/lite
    token/serialization
    token/serialization/ut
    token/ut
    tokenizer
    tokenizer/ut
    yson
    yson/json
    yson/node
    yt
)

IF (OS_LINUX)
    RECURSE(
    ytalloc
)
ENDIF()

IF (OS_WINDOWS)
    RECURSE(
    
)
ELSE()
    RECURSE(
    sse/ut
)
ENDIF()

IF (HAVE_CUDA)
    RECURSE(
    cuda
)
ENDIF()
